{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/config.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../../local_modules/zzfxm-song-encoder/encode.js","../../../local_modules/zzfxm-song-encoder/validate.js","../../../local_modules/zzfxm-song-encoder/decode.js","../../src/services/InstrumentService.js","../../src/lib/utils.js","../../src/services/PatternService.js","../../src/services/SequenceService.js","../../src/services/SongService.js","../../src/services/RendererService.js","../../src/components/Field.svelte","../../src/components/Button.svelte","../../src/components/SequenceEditor.svelte","../../src/services/DomService.js","../../src/components/Property.svelte","../../src/components/TextProperty.svelte","../../src/components/NumberProperty.svelte","../../src/components/SampleViewer.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/Modal.svelte","../../../local_modules/zzfxm-instruments/percussion.js","../../../local_modules/zzfxm-instruments/keyboards.js","../../../local_modules/zzfxm-instruments/wind.js","../../src/components/InstrumentPicker.svelte","../../src/components/InstrumentEditor.svelte","../../src/components/Slider.svelte","../../src/components/PanningProperty.svelte","../../src/components/Channel.svelte","../../src/components/PianoInput.svelte","../../src/components/PatternEditor.svelte","../../src/components/modals/KeyboardModal.svelte","../../src/components/modals/AboutModal.svelte","../../src/components/modals/SourceModal.svelte","../../src/components/PropertyList.svelte","../../src/components/EnumProperty.svelte","../../src/components/modals/SettingsModal.svelte","../../src/demo.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// The number of pattern rows to jump when using fine navigation\nexport const PATTERN_ROW_FINE_STEP = 1;\n\n// The number of pattern rows to jump when using coarse navigation\nexport const PATTERN_ROW_COARSE_STEP = 4;\n\n// The number of attenutation steps to jump when using fine navigation\nexport const ATTENUATION_FINE_STEP = .01;\n\n// The number of attenutation steps to jump when using coarse navigation\nexport const ATTENUATION_COARSE_STEP = .1;\n\n// Keyboard map for notes\nexport const NOTE_KEY_CODES = {\n  'z': 1, 's': 2, 'x': 3, 'd': 4, 'c': 5, 'v': 6, 'g': 7, 'b': 8, 'h': 9,\n  'n': 10, 'j': 11, 'm': 12, ',': 13, 'l': 14, '.': 15, ';': 16, '/': 17,\n  'q': 18, '2': 19, 'w': 20, '3': 21, 'e': 22, 'r': 23, '5': 24, 't': 25,\n  '6': 26, 'y': 27, '7': 28, 'u': 29, 'i': 30, '9': 31, 'o': 32, '0': 33,\n  'p': 34, '[': 35, '=': 36\n};\n\n// UI update speed options - shown in the settings modal\nexport const UI_FPS_OPTIONS = [\n  60, 30, 15, 10, 5\n];\n\n// Sample rate options - shown in the settings modal\nexport const PLAYER_SAMPLE_RATE_OPTIONS = [\n  44100, 22050, 11025\n];\n\n// Song player buffer size options\nexport const PLAYER_BUFFER_SIZE_OPTIONS = [\n  16384, 8192, 4096, 2048, 1024\n];\n\n// The default sample rate for the song player\nexport const DEFAULT_PLAYER_SAMPLE_RATE = PLAYER_SAMPLE_RATE_OPTIONS[0];\n\n// The default buffer size for the song player\nexport const DEFAULT_PLAYER_BUFFER_SIZE = PLAYER_BUFFER_SIZE_OPTIONS[2];\n\n// The default UI refresh rate\nexport const DEFAULT_UI_FPS = UI_FPS_OPTIONS[0];\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {\n    DEFAULT_PLAYER_BUFFER_SIZE,\n    DEFAULT_PLAYER_SAMPLE_RATE,\n    DEFAULT_UI_FPS\n} from './config.js';\n\nimport { writable } from 'svelte/store';\n\n\n// Song\nexport const title = new writable('');\nexport const speed = new writable(125);\nexport const instruments = new writable([]);\nexport const instrumentsMeta = new writable([]);\nexport const patterns = new writable([]);\nexport const patternsMeta = new writable([]);\nexport const sequence = new writable([]);\n\n\n// Selections\nexport const selectedRow = new writable();\nexport const selectedChannel = new writable(0);\nexport const selectedPattern = new writable(0);\nexport const selectedSequence = new writable(0);\n\n\n// Audio\nexport const masterVolume = new writable(.5);\nexport const currentPlaybackPosition = new writable(0);\nexport const currentPlaybackLength = new writable(0);\nexport const channelMeters = new writable([]);\nexport const songPlaying = new writable(false);\n\n\n// Settings\nexport const sampleRate = new writable(DEFAULT_PLAYER_SAMPLE_RATE);\nexport const bufferSize = new writable(DEFAULT_PLAYER_BUFFER_SIZE);\nexport const uiFPS = new writable(DEFAULT_UI_FPS);\n","/**\n * Encode a number into the smallest possible footprint. Removes leading 0 from\n * decimal numbers and replaces three or more trailing 0's with `e` notation.\n *\n * @param {Number} value\n * @returns {String} the encoded value\n */\nexport const encodeNumber = value => {\n  let encoded = JSON.stringify(value);\n  encoded = encoded.replace(/^(-?)0/g, '$1');\n  encoded = encoded.replace(/0{3,}$/g, m => `e${m.length}`);\n  return encoded;\n}\n\n\n/**\n * Encodes ZzFX instruments into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array.<Number[]>} instruments\n */\nexport const encodeInstruments = instruments => {\n  return `[${instruments.map(encodeInstrument).join(',')}]`;\n}\n\n/**\n * Encodes ZzFX instrument into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array.<Number[]>} instrument\n */\nexport const encodeInstrument = instrument => {\n\n  let params = instrument.map((v,i) => {\n    let encoded = encodeNumber(v);\n\n    // Volume\n    if (i == 0) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Randomness\n    else if (i == 1) {\n      if (encoded == '.05') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Frequency\n    else if (i == 2) {\n      if (encoded == '220') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Release\n    else if (i == 5) {\n      if (encoded == '.1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Shape Curve\n    else if (i == 7) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Sustain Volume\n    else if (i == 17) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    else if (encoded === '0' || encoded === 'null') {\n      encoded = ''\n    }\n    return encoded;\n  });\n\n\n  // We must always return an instrument or the player will choke.\n  if (params.length === 0) {\n    params = [,0]\n  }\n\n  return `[${params.join(',').replace(/,+$/g, '')}]`;\n}\n\n\n/**\n * Encodes song patterns into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array>} patterns The song pattern list\n */\nexport const encodePatterns = patterns => {\n  return JSON.stringify(patterns)\n    .replace(/null/g, '')\n    .replace(/(\\D)0(?=\\D)/g, '$1')\n    .replace(/,]/g, ',,]')\n\n}\n\n\n/**\n * Encodes song sequence into a string.\n *\n * @param {Array.<Number>} sequence The song sequence\n */\nexport const encodeSequence = sequence => {\n  return JSON.stringify(sequence);\n}\n\n\n/**\n * Encodes song metadata into a string.\n *\n * @param {Object} metadata The song meta data\n */\nexport const encodeMetadata = metaData => {\n  return JSON.stringify(metaData);\n}\n\n\n/**\n * Encodes song speed value into a string.\n *\n * @param {Object} panning The song panning data\n */\nexport const encodeSpeed = speed => {\n  if (speed !== 125) {\n    return JSON.stringify(speed);\n  }\n}\n\n/**\n * Encodes song data into a string, removing values as needed to keep size to a\n * minimum.\n *\n * @param {*} song The song to encode\n */\nexport const encodeSong = song => {\n  let elements = [\n    encodeInstruments(song[0]),\n    encodePatterns(song[1]),\n    encodeSequence(song[2]),\n    encodeSpeed(song[3]),\n    encodeMetadata(song[4])\n  ];\n  return `[${elements.join(',').replace(/,+$/, '')}]`\n}\n\n","const notNumber = v => !isNumber(v);\n\nconst notArray = v => !isArray(v);\n\nconst notObject = v => !isObject(v);\n\nconst isNumber = v => notObject(v) && !isNaN(parseFloat(v));\n\nconst isArray = v => Array.isArray(v);\n\nconst isObject = v => v !== null && v !== undefined && Object.is(v.constructor, Object);\n\n/**\n * Check a value is a valid song sequence\n *\n * @param {*} sequence - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validateSequence = sequence => {\n  if (notArray(sequence)) {\n    return new Error('Missing sequence structure');\n  }\n  sequence = [...sequence];\n  if (sequence.some(notNumber)) {\n    return new Error('Invalid sequence parameter type');\n  }\n  return true;\n}\n\n\n/**\n * Check a value is a valid song patterns object\n *\n * @param {*} patterns - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validatePatterns = patterns => {\n  if (notArray(patterns)) {\n    return new Error('Missing pattern structure');\n  }\n  patterns = [...patterns];\n  if (patterns.some(notArray)) {\n    return new Error('Invalid pattern structure');\n  }\n  if (patterns.flat(2).some(notNumber)) {\n    return new Error('Invalid pattern parameter type');\n  }\n  return true;\n}\n\n\n/**\n * Check a value is a valid song instruments object\n *\n * @param {*} instruments - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validateInstruments = instruments => {\n  if (notArray(instruments)) {\n    return new Error('Missing instrument structure');\n  }\n  instruments = [...instruments];\n  if (instruments.some(notArray)) {\n    return new Error('Invalid instrument structure');\n  }\n  if (instruments.flat().some(notNumber)) {\n    return new Error('Invalid instrument parameter type');\n  }\n  return true;\n}\n\n\n/**\n * Check a value is a valid song object\n *\n * @param {*} song - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\n\nexport const validateSong = song => {\n\n  let valid;\n\n  if (!Array.isArray(song)) {\n    return new Error('Invalid song syntax');\n  }\n\n  valid = validateInstruments(song[0]);\n  if (valid instanceof Error) {\n    return valid;\n  }\n\n  valid = validatePatterns(song[1]);\n  if (valid instanceof Error) {\n    return valid;\n  }\n\n  valid = validateSequence(song[2]);\n  if (valid instanceof Error) {\n    return valid;\n  }\n\n  // Element 3 should be a number (or undefined)\n  if (song[3] !== undefined && notNumber(song[3])) {\n    return new Error('Invalid speed');\n  }\n\n  // Element 4 should be a object (or undefined)\n  if (song[4] !== undefined && notObject(song[4])) {\n    return new Error('Invalid meta data');\n  }\n\n  return true;\n};\n","import { validateSong } from './validate.js';\n\n\nconst jsonSafe = str => {\n  return str.replace(/\\[,/g,'[null,')\n    .replace(/,,\\]/g,',null]') // remove `undefined` work around\n    .replace(/,\\s*(?=[,\\]])/g,',null')\n    .replace(/([\\[,]-?)(?=\\.)/g,'$10')\n    .replace(/-\\./g,'-0.');\n}\n\n\n/**\n * Decodes song pattern array, restoring default values\n *\n * @param {Array.<Number>} Pattern paramaters\n */\nexport const decodePatternParams = pattern => {\n  return pattern.map(channel => {\n    return [...channel].map(data => data || 0)\n  });\n}\n\n\n/**\n * Decodes ZzFX instrument array, restoring default values\n *\n * @param {Array.<Number>} ZzFX paramaters for the instrument\n */\nexport const decodeInstrumentParams = instrument => {\n  const params = instrument.slice();\n  params.length = 20;\n\n  return [...params].map((param, index) => {\n    if (index === 0 && param === undefined) {\n      return 1;\n    }\n    if (index === 1 && param === undefined) {\n      return 0.05;\n    }\n    if (index === 2 && param === undefined) {\n      return 220;\n    }\n    if (index === 5 && param === undefined) {\n      return .1;\n    }\n    if (index === 7 && param === undefined) {\n      return 1;\n    }\n    if (index === 17 && param === undefined) {\n      return 1;\n    }\n    return param || 0;\n  });\n}\n\n\n/**\n * Decodes a string representation of an instrument into an array of\n * zzfx parameters\n *\n * @param {string} instrument The instrument to decode\n * @returns {Array.<Number>} ZzFX paramaters for the instrument\n */\nexport const decodeInstrument = instrument => {\n  return decodeInstrumentParams(JSON.parse(jsonSafe(instrument)))\n}\n\n\n/**\n * Decodes a string representation of a song into an array\n *\n * @param {string} song The song to decode\n */\nexport const decodeSong = song => {\n  const jsonSong = jsonSafe(song.replace(/^export\\s+default\\s+/,''));\n  let data;\n  let valid;\n  try {\n    data = JSON.parse(jsonSong, (key, value) => {\n      return value === null ? undefined : value;\n    });\n  } catch (e) {\n    throw new Error('Invalid song structure');\n  }\n\n  valid = validateSong(data);\n\n  if (valid instanceof Error) {\n    throw valid;\n  }\n\n  data[0] = data[0].map(decodeInstrumentParams);\n  data[1] = data[1].map(decodePatternParams);\n\n  return data\n}\n","import { instruments, instrumentsMeta } from '../stores.js';\nimport { decodeInstrumentParams } from 'zzfxm-song-encoder';\n\nlet instrumentNo = 0;\n\n/**\n * Add a new instrument to the current song\n *\n * @param {Array} params - ZzFX instrument parameters of the new instrument\n * @param {string} name - Name of the new instrument\n * @returns {number} Index of the new instrument\n */\nexport const addInstrument = (params, name = `Instrument ${instrumentNo}`) => {\n  let newIndex;\n  instruments.update(instruments => {\n    instruments.push(createInstrument(...params));\n    newIndex = instruments.length - 1;\n    return instruments;\n  });\n  instrumentsMeta.update(meta => {\n    meta.push(name);\n    return meta;\n  });\n  instrumentNo++;\n  return newIndex;\n};\n\n\n/**\n * Delete an instrument from the current song\n *\n * @param {number} index - Index of the instrument to remove\n */\nexport const deleteInstrument = index => {\n  instruments.update(instruments => {\n    instruments.splice(index, 1);\n    return instruments;\n  });\n  instrumentsMeta.update(meta => {\n    meta.splice(index, 1);\n    return meta;\n  });\n  instrumentNo++;\n};\n\n\n/**\n * Sets the ZzFX parameters of an existing instrument.\n *\n * @param {*} index - Index of the instrument to update\n * @param {Array} params - ZzFX instrument parameters of the new instrument\n */\nexport const setInstrumentParams = (index, params) => {\n  instruments.update(instruments => {\n    instruments[index] = createInstrument(...params);\n    return instruments;\n  });\n};\n\n\n/**\n * Clears all instrument data from the current song;\n */\nexport const clearInstruments = () => {\n  instrumentNo = 0;\n  instruments.set([]);\n  instrumentsMeta.set([]);\n};\n\n\n/**\n * Create a new instrument\n *\n * @param  {...number} ZzFX paramaters\n */\nexport const createInstrument = (...params) => {\n  return decodeInstrumentParams(params);\n};\n","/**\n * Ensure a number is between a given range\n *\n * @param {number} value - The value to clamp\n * @param {number} min - Minimum value\n * @param {number} max - Maximum value\n */\nexport const clamp = (value, min, max) => {\n  return Math.max(min, Math.min(value, max));\n};\n\n\n/**\n * Rounds a number to a number of decimal places\n *\n * @param {number} value - The number to round\n * @param {number} decimalPlaces - Number of decimal places to round to\n */\nexport const round = (value, decimalPlaces = 2) => {\n  const pow = Math.pow(10, decimalPlaces);\n  return Math.round(value * pow) / pow;\n};\n\n\n/**\n * Determines if a HMTLElement is an input element\n *\n * @param {HTMLElement} element - The element to test.\n */\nexport const isInputElement = element => {\n  return 'form' in element;\n};\n","import { patterns, patternsMeta } from '../stores.js';\nimport { clamp, round } from '../lib/utils.js';\n\n// This is used to auto-name patterns\nlet patternNo = 0;\n\n\n/**\n * Add a pattern to the current song\n *\n * @param {Array.<Channel>} pattern - New pattern data\n * @param {string} name - New pattern name\n * @returns {number} The new instruments index\n */\n// TODO: refactor to use setPattern?\nexport const addPattern = (pattern, name = `Pattern ${patternNo}`) => {\n  let newIndex;\n  patterns.update(patterns => {\n    patterns.push(pattern);\n    newIndex = patterns.length - 1;\n    return patterns;\n  });\n  patternsMeta.update(meta => {\n    meta.push(name);\n    return meta;\n  });\n  patternNo++;\n  return newIndex;\n};\n\n\n/**\n * Delete a pattern from the current song\n *\n * @param {number} index - Index of the pattern to remove\n */\nexport const deletePattern = index => {\n  patterns.update(patterns => {\n    patterns.splice(index, 1)\n    return patterns;\n  });\n  patternsMeta.update(meta => {\n    meta.splice(index, 1)\n    return meta;\n  });\n};\n\n\n/**\n * Remove all patterns from the current song. Also resets the pattern number\n * used to generate pattern names.\n */\nexport const clearPatterns = () => {\n  patternNo = 0;\n  patterns.set([]);\n  patternsMeta.set([]);\n};\n\n\n/**\n * Add a new track to an existing pattern using an optional instrument and\n * panning value.\n *\n * @param {number} pattern to add the track to\n * @param {number} instrument number to use for the track\n * @param {number} panning value for the track\n */\nexport const addChannel = (pattern, instrument = 0, panning = 0) => {\n  let newIndex;\n  patterns.update(patterns => {\n    newIndex = patterns[pattern].length;\n    const rowCount = patterns[pattern][0].length - 2;\n    patterns[pattern].push(createTrack(rowCount, instrument, panning));\n    return patterns;\n  });\n  return newIndex;\n};\n\n\n/**\n * Delete a track from a pattern\n *\n * @param {*} pattern - Index of the pattern to delete the track from\n * @param {*} channel - Index of the track to delete\n */\nexport const deleteChannel = (pattern, channel) => {\n  patterns.update(patterns => {\n    patterns[pattern].splice(channel, 1);\n    return patterns;\n  });\n};\n\n\n/**\n * Add a blank row to each track in a pattern.\n * @param {number} pattern - Index of the pattern to add the row to\n */\nexport const addRow = pattern => {\n  let newIndex;\n  patterns.update(patterns => {\n    newIndex = patterns[pattern][0].length - 2;\n    patterns[pattern].forEach(channel => channel.push(0))\n    return patterns;\n  });\n  return newIndex;\n};\n\n\n/**\n * Removes a row from a pattern\n *\n * @param {number} pattern - Index of the pattern to remove the row from\n * @param {number} row - Index of the row to remove\n */\nexport const deleteRow = (pattern, row) => {\n  patterns.update(patterns => {\n    patterns[pattern].forEach(channel => {\n      channel.splice(row + 2, 1);\n    });\n    return patterns;\n  });\n};\n\n\n/**\n * Clears note and attenuation data from a row of a pattern\n *\n * @param {number} pattern - Index of the pattern to clear data from\n * @param {number} row - Index of the row to clear\n */\nexport const clearRow = (pattern, row) => {\n  patterns.update(patterns => {\n    patterns[pattern].forEach(track => {\n      track[row + 2] = 0;\n    });\n    return patterns;\n  });\n};\n\n\n/**\n * Creates an empty track object\n *\n * @param {number} rows - Number of rows in the ctrack\n * @param {number} instrument - Instrument for the track\n * @param {number} panning - Panning value for the track\n */\nexport const createTrack = (rows = 64, instrument = 0, panning = 0) => {\n  return [instrument, panning, ...new Array(rows).fill(0)];\n};\n\n\n/**\n * Creates an empty pattern object\n *\n * @param {*} tracks - Number of tracks for the new pattern\n * @param {*} rows - Number of rows for the new pattern\n */\nexport const createPattern = (tracks = 3, rows = 64) => {\n  return new Array(tracks).fill(0).map(() => createTrack(rows));\n};\n\n\n/**\n * Sets the data of a pattern\n *\n * @param {number} pattern - Index of the pattern to update\n * @param {Array} data - Data for the new pattern\n */\nexport const setPatternData = (pattern, data) => {\n  patterns.update(patterns => {\n    patterns[pattern] = data\n    return patterns;\n  });\n};\n\n\n/**\n * Adjust the attentuation of a note.\n *\n * @param {number} pattern - Index of the pattern containing the value to update\n * @param {number} channel - Index of the channel containing the value to update\n * @param {number} row - Index of the row containing the value to update\n * @param {number} step - Value to adjust attenutation by\n */\nexport const adjustAttenuation = (pattern, channel, row, step) => {\n  patterns.update(patterns => {\n    const channelRows = patterns[pattern][channel];\n    const note = channelRows[row + 2] | 0;\n    const attenuation = round(channelRows[row + 2] % 1, 2);\n    channelRows[row + 2] = note + clamp(attenuation + step, 0, .99);\n    return patterns;\n  });\n};\n\n\n/**\n * Set a note\n *\n * @param {number} pattern - Index of the pattern containing the note to update\n * @param {number} channel - Index of the channel containing the note to update\n * @param {number} row - Index of the row containing the note to update\n * @param {number} note - The new note\n */\nexport const setNote = (pattern, channel, row, note) => {\n  patterns.update(patterns => {\n    const channelRows = patterns[pattern][channel];\n    const currentAttenuation = round(channelRows[row + 2] % 1, 2);\n    channelRows[row + 2] = note + currentAttenuation;\n    return patterns;\n  });\n};\n","import { patterns, sequence } from '../stores.js'\nimport { get } from 'svelte/store';\n\n// TODO: This is almost identical to below, consider making argument optional\n// and default to seq.length;\n\n/**\n * Calculates the total song length up to a specific sequence position\n * @param {*} sequencePos\n */\nexport const getCumlativeRowAtPosition = sequencePos => {\n  const patts = get(patterns);\n  const seq = get(sequence);\n  let row = 0;\n  sequencePos = sequencePos % (seq.length);\n  for (let sequenceIndex = 0; sequenceIndex < sequencePos; sequenceIndex++) {\n    row += patts[seq[sequenceIndex]][0].length - 2;\n  }\n  return row;\n}\n\n\n/**\n * Calculates the total song length in rows\n * @returns {number} Number of rows in the song\n */\nexport const getSongLength = () => {\n  const patts = get(patterns);\n  const seq = get(sequence);\n  let length = 0\n  for (let sequenceIndex = 0; sequenceIndex < seq.length; sequenceIndex++) {\n    length += patts[seq[sequenceIndex]][0].length - 2;\n  }\n  return length;\n}\n\n\n/**\n * Clears the current song sequence\n */\nexport const clearSequence = () => {\n  sequence.set([]);\n};\n","import { patterns, instruments, instrumentsMeta, patternsMeta, title, sequence, speed } from '../stores.js'\nimport { get } from 'svelte/store';\nimport { decodeSong, encodeSong } from 'zzfxm-song-encoder';\nimport { addInstrument, clearInstruments, createInstrument } from '../services/InstrumentService.js';\nimport { addPattern, clearPatterns, createTrack } from '../services/PatternService.js';\nimport { clearSequence } from '../services/SequenceService.js';\n\n\n/**\n * Clear out the current song so it can be populated with new data.\n */\nconst clearSong = () => {\n  clearSequence();\n  clearInstruments();\n  clearPatterns();\n}\n\n\n/**\n * Creates a new blank song and sets it as the current song\n */\nexport const createEmptySong = () => {\n  setSong([\n    [\n      createInstrument(1, 0, 400)\n    ],\n    [\n      [\n        createTrack(64, 0, -1),\n        createTrack(64, 0, 1),\n        createTrack(64, 0, -1),\n        createTrack(64, 0, 1)\n      ]\n    ],\n    [0],\n    125,\n    {\n      title: 'New Song'\n    }\n  ]);\n}\n\n\n/**\n * Sets the current song\n * @param {string} data\n */\nexport const setSong = song => {\n\n  clearSong();\n  title.set(song[4] && song[4].title || 'Untitled song');\n  speed.set(song[3] || 125);\n\n  song[0].forEach((instrument, index) => {\n    const name = song[4] && song[4].instruments && song[4].instruments[index];\n    addInstrument(instrument, name);\n  });\n\n  song[1].forEach((pattern, index) => {\n    const name = song[4] && song[4].patterns && song[4].patterns[index];\n    addPattern(pattern, name);\n  });\n\n  sequence.set(song[2]);\n};\n\n\n/**\n * Serialises the current song into a string\n * @returns {string} the serialised song data\n */\n// TODO: rename to `serialize`?\nexport const serializeSong = () => {\n  return encodeSong([\n    get(instruments),\n    get(patterns),\n    get(sequence),\n    get(speed),\n    {\n      title: get(title),\n      instruments: get(instrumentsMeta),\n      patterns: get(patternsMeta)\n    }\n  ]);\n}\n\n\n/**\n * Loads the song data from a File object and sets it\n * as the current song.\n *\n * @param {File} file\n * @returns {Promise} A promise that resolves when the song has loaded\n */\nexport const loadSongFromFile = file => {\n  const url = URL.createObjectURL(file);\n  return fetch(url)\n    .then(res => res.text())\n    .then(loadSongFromString)\n    .catch(err => err)\n    .then(res => {\n      URL.revokeObjectURL(url);\n      if (res instanceof Error) {\n        throw res;\n      }\n      return res;\n    })\n};\n\n\n/**\n * Loads the song data from a File object and sets it\n * as the current song.\n *\n * @param {File} file\n * @returns {Promise} A promise that resolves when the song has loaded\n */\nexport const loadSongFromString = songString => {\n  setSong(decodeSong(songString))\n};\n","import { uiFPS, bufferSize, sampleRate, patterns, instruments, sequence, speed, selectedRow, selectedPattern, selectedSequence, channelMeters, masterVolume, currentPlaybackLength, songPlaying } from '../stores.js'\nimport { getCumlativeRowAtPosition, getSongLength } from './SequenceService.js';\nimport { get } from 'svelte/store';\n\n/**\n * @typedef PositionInfo\n * @property {number} sequence - The sequence position\n * @property {number} pattern - The pattern position\n * @property {number} row - The row index\n */\n\n/**\n * @typedef ChannelInfo\n * @property {number} panning - The stereo panning value of the channel\n * @property {number} attenuation - The current attenutationo f the channel\n * @property {number} sample - The instrument sample data for the channel\n * @property {number} offset - The current position of the sample data\n */\n\nlet processor;\nlet insts;\nlet patts;\nlet seq;\nlet spd;\nlet playbackSequence;\nlet targetUpdateFps;\nlet currentSongPosition;\nlet pos = 0;\nlet currentOffset = 0;\nlet channels = null;\nlet songLength;\nlet activeSoundCount = 0;\nlet currentBufferSize;\nlet isPlaying = false;\nlet frames = [];\n\n\n// Create a gain node for the player volume. This is hooked up to a Svelte store\n// so it can be controlled via the user interface.\nconst gainNode = zzfxX.createGain();\ngainNode.connect(zzfxX.destination);\n\n\n// Stop zzfxX until sounds need to be played. This prevents the render service\n// from consuming system resources when not playing sounds.\nzzfxX.suspend();\n\n\n/**\n * Notify the service that a sound is about to be played. If no sounds are\n * currently playing the audio context will be resumed.\n *\n * @returns {Promise} A promise that resolves once the audio can be played.\n */\nconst registerSound = async () => {\n  if (activeSoundCount === 0) {\n    await zzfxX.resume();\n  }\n  activeSoundCount++;\n};\n\n\n/**\n * Notify the service that a sound has finished playing. If no other sounds are\n * currently playing the audio context will be suspended.\n *\n * @returns {Promise} A promise that resolves once the audio has stopped.\n */\n\nconst unregisterSound = async () => {\n  activeSoundCount--;\n  if (activeSoundCount === 0) {\n    await zzfxX.suspend();\n  }\n};\n\n\n/**\n * Creates a new ScriptProcessor instance using the currently configured service\n * options\n */\nconst initScriptProcessor = () => {\n  channels = null;\n  processor = zzfxX.createScriptProcessor(currentBufferSize, 0, 2);\n  processor.onaudioprocess = audioCallback;\n  processor.connect(gainNode);\n};\n\n\n/**\n * Destroys the current ScriptProcessor.\n */\nconst killScriptProcessor = () => {\n  processor.onaudioprocess = null;\n  processor.disconnect(gainNode);\n  processor = null;\n};\n\n\n/**\n * Sets the song position based on the current user selection\n */\nconst setPosition = () => {\n  pos = getCumlativeRowAtPosition(get(selectedSequence));\n  pos += get(selectedRow);\n  currentOffset = 0;\n  channels = null;\n};\n\n\n/**\n * Returns the current song position struct information data based on a position\n * index between 0 and total song rows.\n *\n * @param {number} position - the position to retreve data form\n * @returns {PositionInfo} The position information for the song row\n */\nconst getPositionInfo = (position) => {\n  let pos = 0;\n  let nextPos = 0;\n  for (let sequenceIndex = 0; sequenceIndex < playbackSequence.length; sequenceIndex++) {\n    let patternIndex = playbackSequence[sequenceIndex];\n    nextPos = pos + patts[patternIndex][0].length - 3;\n    if (nextPos >= position) {\n      return {\n        sequence: sequenceIndex,\n        pattern: patternIndex,\n        row: position - pos\n      };\n    }\n    pos = nextPos + 1;\n  }\n  return getPositionInfo(position % (nextPos + 1));\n};\n\n\n/**\n * Updates the current channel state based on the current song position and\n * steps forward one song row.\n *\n * @returns {PositionInfo}\n */\nconst next = () => {\n  pos %= songLength;\n  const position = getPositionInfo(pos);\n  const { pattern, row } = position;\n\n  if (!channels) {\n    channels = [];\n  }\n\n  patts[pattern].forEach((channel, i) => {\n    const data = channel[row + 2];\n    if (data) {\n      let note = data | 0;\n      let attenuation = data % 1;\n\n      if (note) {\n        if (note === -1) {\n          channels[i] = null\n          return;\n        }\n        channels[i] = {\n          panning: channel[1],\n          attenuation: attenuation,\n          sample: renderNote(channel[0], note),\n          offset: 0\n        }\n      }\n\n      if (attenuation) {\n        if (channels[i]) {\n          channels[i].attenuation = attenuation\n        }\n      }\n    }\n  });\n  pos++;\n  return position;\n};\n\n\n/**\n * Mix the sample data of a channel into the output buffers\n *\n * @param {ChannelInfo} channel - the channel\n * @param {number} start - the start position of the sample data\n * @param {number} length - the size of the sample data to copy\n * @param {Array<number>} leftChannelData - Left channel buffer\n * @param {Array<number>} rightChannelData - Right channel buffer\n * @returns {<number>} The peak value for the channel\n */\nconst mixChannelSampleData = (channel, start, length, leftChannelData, rightChannelData) => {\n  let peak = 0;\n\n  if (channel) {\n    const step = zzfxR / zzfxX.sampleRate;\n    const {panning, attenuation, sample} = channel;  \n\n    for (let i = start; i < start + length; i++) {\n      if (channel.offset >= sample.length) {\n        break;\n      }\n      const data = (1 - attenuation) * sample[channel.offset | 0] || 0;\n      leftChannelData[i] += -data * panning + data;\n      rightChannelData[i] += data * panning + data;\n      peak = Math.min(1, Math.max(Math.abs(data), peak));\n      channel.offset += step;\n    }\n  }\n  return peak;\n};\n\n\n/**\n * Plays the currently configured pattern sequence.\n */\nconst play = async () => {\n  await registerSound();\n  initScriptProcessor();\n  songPlaying.set(true);\n  isPlaying = true;\n  updateUI();\n};\n\n\n/**\n * Updates the Svelte stores with new song data. Listeners will react to these\n * changes, triggering UI updates for the Peak Level meters, pattern row and, if\n * playing the entire song, the currently selected sequence and pattern.\n */\nconst updateUI = () => {\n  if (isPlaying) {\n    setTimeout(updateUI, 1000 / targetUpdateFps);\n  }\n  if (!frames.length) {\n    return;\n  }\n  const { sequence, pattern, row, peakLevels } = frames.shift();\n\n  // If the sequence is the actual song, make the pattern and sequence UI\n  // follow along with the current song position.\n  if (playbackSequence === seq) {\n    selectedSequence.set(sequence);\n    selectedPattern.set(pattern);\n  }\n  selectedRow.set(row);\n  channelMeters.set(peakLevels);\n};\n\n\n/**\n * Fills the output buffer with song data\n *\n * @param {AudioProcessingEvent} event - Audio processor event\n */\n\nconst audioCallback = event => {\n  const { outputBuffer } = event;\n  const dataL = outputBuffer.getChannelData(0).fill(0);\n  const dataR = outputBuffer.getChannelData(1).fill(0);\n  let bufferRemaining = outputBuffer.length;\n\n  let offset = 0;\n  frames = [];\n\n  // The length of one song row\n  const beatLength = zzfxX.sampleRate / spd * 60 >> 2;\n\n  // The length of sample data we need to process before notifying the UI that\n  // something needs to be updated. The UI target frame rate is variable so it\n  // can controlled by the end user.\n  const frameSize = zzfxX.sampleRate / targetUpdateFps;\n\n  // We we have no channel data from a previous step, get it now.\n  if (!channels) {\n    currentSongPosition = next();\n  }\n\n  // Fill the output buffer with our sample data.\n  while (bufferRemaining > 0) {\n\n    // Work out how much data we need to process\n    const beatDuration = Math.min(\n      bufferRemaining,\n      frameSize,\n      beatLength - currentOffset\n    );\n\n    if (currentOffset >= beatLength) {\n      currentSongPosition = next();\n      currentOffset -= beatLength;\n    }\n\n    // Mix the channel samples into the stereo output buffers\n    const peakLevels = channels.map(channel => {\n      return mixChannelSampleData(channel, offset, beatDuration, dataL, dataR);\n    });\n\n    // If have a full frame of data, push state data for the UI scheduler to\n    // consume later. If we only push a partial frame the UI will render state\n    // incorrectly, causing flicker with peak meters.\n    if (offset === 0 || beatDuration >= frameSize) {\n      frames.push({...currentSongPosition, peakLevels});\n    }\n\n    offset += beatDuration;\n    currentOffset += beatDuration;\n    bufferRemaining -= beatDuration;\n  }\n};\n\n\n/**\n * Generates the sample data for a note played with an instrument\n *\n * @param {number} instrument - Index of the instrument to play\n * @param {number} note - Index of the note to play\n * @returns {Array<number>} Sample data\n */\nexport const renderNote = (instrument, note) => {\n  let instr = [...insts[instrument]];\n  instr[2] *= 2 ** ((note - 12) / 12);\n  return zzfxG(...instr);\n};\n\n\n\n\n/**\n * Plays a note with an instrument\n *\n * @param {number} instrument - Index of the instrument to play\n * @param {number} note - Index of the note to play\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playNote = (instrument, note) => {\n  return playSample(renderNote(instrument, note));\n};\n\n\n/**\n * Plays a ZzFX sound\n *\n * @param {Array<number>} params - ZzFX instrument parameters\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playSound = (params) => {\n  return playSample(zzfxG(...params));\n};\n\n\n/**\n * Plays sample data\n *\n * @param {Array<Array<number>>} data Audio channel data to play\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playSample = async (data) => {\n  await registerSound();\n  const node = zzfxP([...data]);\n  node.onended = unregisterSound;\n  return node;\n};\n\n\n/**\n * Plays a pattern.\n *\n * @param {number} pattern - The pattern index to play\n * @param {boolean} fromStart - True to restart, false to resume\n */\nexport const playPattern = async (pattern, fromStart = false) => {\n  if (processor) {\n    return false;\n  }\n\n  playbackSequence = [pattern];\n\n  if (fromStart) {\n    pos = 0;\n  } else {\n    pos = get(selectedRow);\n  }\n  await play();\n};\n\n\n/**\n * Plays the current song from it's current position, or optionally from the\n * start\n *\n * @param {boolean} fromStart - True to restart, false to resume\n */\nexport const playSong = async (fromStart = false) => {\n  if (processor) {\n    return false;\n  }\n\n  playbackSequence = seq;\n\n  if (fromStart) {\n    pos = 0;\n  } else {\n    if (get(selectedSequence) === null) {\n      pos = 0;\n    } else {\n      setPosition();\n    }\n  }\n  await play();\n};\n\n\n/**\n * Stops playing the current song / pattern\n */\nexport const stopSong = async () => {\n  if (processor) {\n    killScriptProcessor();\n    await unregisterSound();\n    songPlaying.set(false);\n    channelMeters.set([]);\n    isPlaying = false;\n    frames = [];\n  }\n};\n\n\n// Subscribe to svelte stores so the renderer can react to state changes.\n\ninstruments.subscribe(value => insts = value);\n\nspeed.subscribe(value => spd = value);\n\ncurrentPlaybackLength.subscribe(value => songLength = value);\n\npatterns.subscribe(value => {\n  patts = value;\n  currentPlaybackLength.set(getSongLength());\n});\n\nsequence.subscribe(value => {\n  seq = value;\n  currentPlaybackLength.set(getSongLength());\n});\n\nmasterVolume.subscribe(value => {\n  gainNode.gain.value = value;\n});\n\nsampleRate.subscribe(value => {\n  zzfxR = value;\n  channels = null;\n});\n\nbufferSize.subscribe(value => {\n  if (isPlaying) {\n    killScriptProcessor();\n    currentBufferSize = value;\n    initScriptProcessor();\n  } else {\n    currentBufferSize = value;\n  }\n});\n\nuiFPS.subscribe(value => {\n  targetUpdateFps = value;\n});\n","<script>\n  export let label = ''\n</script>\n\n<div class=\"field outset\">\n  <span class=\"field__label embossed\">{ label }</span>\n  <span class=\"field__controls inset\">\n    <slot />\n  </span>\n</div>\n\n<style>\n  .field {\n    display: flex;\n    padding: var(--field-padding);\n    align-items: center;\n  }\n  .field__label {\n    flex: 1;\n    text-indent:2px;\n  }\n  .field__controls {\n    display: inline-flex;\n  }\n</style>\n","<script>\n  export let label = '';\n  export let disabled = false;\n  export let keyboard = '';\n</script>\n\n<button title={keyboard ? `Shortcut: ${keyboard}`: ''} class=\"outset\" {disabled} on:click>{ label }</button>\n\n<style>\n  button {\n    background-color: var(--button-color);\n    border: none;\n    display: inline-block;\n    padding: var(--input-padding) 8px;\n    font: inherit;\n    text-transform: uppercase;\n    margin: 0;\n    white-space: nowrap;\n    letter-spacing: inherit;\n  }\n  button[disabled] {\n    color:#0005;\n  }\n  button:not([disabled]):hover {\n    background-color: var(--button-color-hover);\n  }\n  button:not([disabled]):active {\n    background-color: var(--button-color-press);\n  }\n</style>","<script>\nimport { sequence, patterns, patternsMeta, currentPlaybackPosition } from '../stores.js';\nimport { createEventDispatcher } from 'svelte';\nimport Field from './Field.svelte';\nimport Button from './Button.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Pane from './Pane.svelte';\n\nexport let selectedPosition = 0;\n\nconst dispatch = createEventDispatcher();\n\nconst handleAddClick = () => {\n  $sequence = [...$sequence, 0];\n  selectedPosition = $sequence.length - 1;\n  dispatch('select');\n}\n\nconst handleDeleteClick = () => {\n  $sequence = [...$sequence.slice(0, selectedPosition), ...$sequence.slice(selectedPosition + 1)];\n  selectedPosition = Math.min(selectedPosition, $sequence.length - 1);\n}\n\nconst select = position => {\n  selectedPosition = position;\n  dispatch('select');\n}\n\nconst moveLeft = () => {\n  $sequence = [\n    ...$sequence.slice(0, selectedPosition - 1),\n    $sequence[selectedPosition],\n    $sequence[selectedPosition-1],\n    ...$sequence.slice(selectedPosition + 1)\n  ];\n  selectedPosition--;\n}\n\nconst moveRight = () => {\n  $sequence = [\n    ...$sequence.slice(0, selectedPosition),\n    $sequence[selectedPosition+1],\n    $sequence[selectedPosition],\n    ...$sequence.slice(selectedPosition + 2)\n  ];\n  selectedPosition++;\n}\n\n$: hasSelection = selectedPosition !== null;\n\nconst color = seq => `hsl(${90+seq*20},35%,50%)`;\n\n</script>\n\n<Pane>\n  <div slot=\"head\">\n    <Toolbar>\n      <Field label=\"Sequence\">\n        <Button label=\"Add\" on:click={handleAddClick} />\n        <Button label=\"Delete\" disabled={!hasSelection} on:click={handleDeleteClick} />\n        <Button label=\"Move Left\" disabled={!hasSelection || selectedPosition === 0} on:click={moveLeft} />\n        <Button label=\"Move Right\" disabled={!hasSelection || selectedPosition === $sequence.length - 1}  on:click={moveRight} />\n      </Field>\n      <div class=\"outset\"></div>\n    </Toolbar>\n  </div>\n\n  <div class=\"sequence\">\n    <div class=\"sequence__patterns\">\n      {#if $currentPlaybackPosition >= 0}\n        <div class=\"marker\" style=\"transform:translateX({$currentPlaybackPosition}px\"></div>\n      {/if}\n      {#each $sequence as sequence, i}\n        <div on:click={()=>select(i)} class:selected={i === selectedPosition} class=\"pattern\" style=\"background: { color(sequence) }; max-width: { $patterns[sequence][0].length - 2 }px;min-width: { $patterns[sequence][0].length - 2}px\">\n          {#if i === selectedPosition}\n            <select class=\"select\" bind:value={sequence} on:input>\n              {#each $patterns as pattern, i}\n                <option value={i}>{i}</option>\n              {/each}\n            </select>\n          {:else}\n            {sequence}\n          {/if}\n        </div>\n      {/each}\n    </div>\n  </div>\n</Pane>\n\n<style>\n  .sequence {\n    overflow: auto;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n  }\n  .sequence::-webkit-scrollbar {\n    height: 0px;\n    background: transparent;\n  }\n  .sequence__patterns {\n    display: flex;\n    padding: var(--field-padding);\n    position: relative;\n  }\n  .pattern {\n    text-align: center;\n    border: 1px solid #0004;\n    border-radius: 4px;\n    padding: var(--field-padding);\n  }\n  .selected {\n    border-color: var(--focus-ring-color);\n    width: auto !important;\n    line-height: inherit;\n  }\n  .marker {\n    position:absolute;\n    width:3px;\n    top:0;\n    bottom:0;\n    margin-left:-1px;\n    background:#f008;\n    will-change: transform;\n  }\n</style>\n","let globalId = 0;\n\n/**\n * Creates an app-unique element ID.\n */\nexport const createElementId = () => {\n  return `elm-${globalId++}`;\n};\n","<script>\n  import { createElementId } from '../services/DomService.js';\n\n  export let label = '';\n  export let hint = null;\n\n  let id = createElementId();\n</script>\n\n<div class=\"field outset\" title={hint}>\n  <label for={id} class=\"field__label embossed\">{ label }</label>\n  <span class=\"field__controls inset\">\n    <slot {id} />\n  </span>\n</div>\n\n<style>\n  .field {\n    display: flex;\n    padding: var(--field-padding);\n    align-items: center;\n  }\n  .field__label {\n    flex: 1;\n    text-indent: 2px;\n  }\n  .field__controls {\n    display: inline-flex;\n  }\n</style>\n","<script>\n  import Property from './Property.svelte';\n  export let label = '';\n  export let value = '';\n</script>\n\n<Property {label} let:id={id}>\n  <input {id} spellcheck=\"false\" type=\"text\" class=\"input\" bind:value={value}>\n</Property>\n","<script>\n\n  import Property from './Property.svelte';\n\n  export let label = '';\n  export let value = 0;\n  export let min = 0;\n  export let max = 1;\n  export let step = 1;\n  export let size = 1;\n  export let hint = '';\n\n  const fineStep = step;\n  const coarseStep = step * 10;\n\n  let lastGoodValue = value;\n  let elem;\n\n  const setValue = () => {\n    elem.value = value = lastGoodValue;\n  }\n\n  const setValueIfValid = event => {\n    const newValue = parseFloat(elem.value);\n    if ((newValue === 0 && elem.value.length > 1) || !validateValue(newValue)) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    lastGoodValue = value = newValue;\n  }\n\n  const validateValue = value => {\n    return !isNaN(value) && value >= min && value <= max;\n  }\n\n  const handleKeyDown = event => {\n    if (event.shiftKey) {\n      step = coarseStep;\n    } else {\n      step = fineStep;\n    }\n  }\n</script>\n\n<Property {label} {hint} let:id={id}>\n  <input {id} bind:this={elem} style=\"width: { size + 4 }ch\" class=\"input\" type=\"number\" {step} {min} {max} value={value} on:focus={lastGoodValue=value} on:keydown={handleKeyDown} on:change={setValue} on:input={setValueIfValid} on:input on:change>\n</Property>\n","<script>\nimport { onDestroy, onMount } from \"svelte\";\n\nlet canvas;\nlet debounce = false;\nlet canvasWidth;\nlet canvasHeight;\n\nexport let data;\n\n$: if (data){\n  generateSampleView();\n}\n\n\nconst resizeObserver = new ResizeObserver(entries => {\n  for (const entry of entries) {\n    const {width, height} = entry.contentRect;\n    canvasWidth = width;\n    canvasHeight = height;\n\n    if (!debounce) {\n      debounce = true;\n      generateSampleView();\n      setTimeout(() => {\n        generateSampleView();\n        debounce = false;\n      }, 500);\n    }\n  }\n});\n\n\nconst generateSampleView = () => {\n  if (!canvas) {\n    return\n  }\n  const context = canvas.getContext('2d');\n  canvas.height = canvasHeight;\n  canvas.width = canvasWidth;\n  context.strokeStyle = '#0004';\n  context.beginPath();\n\n  context.moveTo(0, canvasHeight / 2 - .5);\n  context.lineTo(canvasWidth, canvasHeight / 2 -.5);\n  context.stroke();\n  context.closePath();\n\n  context.strokeStyle = '#062';\n  context.beginPath();\n  for (let c = 0; c < canvasWidth; c += 2) {\n    const p = c * (data.length / canvasWidth) | 0;\n    const y = (.5 + data[p]) * canvasHeight | 0;\n    if (c === 0) {\n      context.moveTo(0, y);\n    } else {\n      context.lineTo(c - .5, y);\n    }\n  }\n  context.stroke();\n  context.closePath();\n}\n\nonMount(() => {\n  resizeObserver.observe(canvas.parentElement);\n});\n\nonDestroy(() => {\n  resizeObserver.unobserve(canvas.parentElement);\n});\n\n</script>\n\n<div>\n  <canvas class=\"inset\" bind:this={canvas}></canvas>\n</div>\n\n<style>\n  div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n  canvas {\n    position:absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: var(--field-padding) solid var(--outset-color)\n  }\n</style>\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\nimport Button from './Button.svelte';\nimport { fade, fly } from 'svelte/transition';\n\nexport let open = false;\nexport let title = '';\n</script>\n\n{#if open}\n  <div class=\"overlay\" transition:fade={{duration: 150}}></div>\n  <div class=\"modal\" transition:fly={{duration:150, y: 10}}>\n    <div class=\"modal__header outset embossed\">{title}</div>\n    <div class=\"modal__body outset\"><slot /></div>\n    <div class=\"modal__footer outset\">\n      <Button label=\"Close\" on:click={()=>open=false} />\n      <slot name=\"controls\"/>\n    </div>\n  </div>\n{/if}\n\n<style>\n.modal {\n  --panel-spacing: var(--modal-spacing);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 500px;\n  min-height: 340px;\n  max-height: 400px;\n  transform: translate(-50%,-50%);\n  box-shadow: 0 2px 5px 2px #0008;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  z-index:1\n}\n.modal__header, .modal__footer {\n  padding: var(--panel-spacing);\n  text-align: center;\n}\n.modal__body {\n  padding: var(--panel-spacing);\n  overflow: auto\n}\n.overlay {\n  content: '';\n  position: fixed;\n  top:0;\n  left:0;\n  right:0;\n  bottom:0;\n  background:#0006;\n}\n\n</style>\n","export const hihat = [2,0,4e3,,,.03,2,1.25,,,,,.02,6.8,-0.3,,.5];\nexport const claps = [1,0,655,,,.11,2,1.65,,,,,,3.8,-0.1,.1];\nexport const bassDrum = [1,0,84,,,.1,,.7,,,,.5,,6.7,1,.05];\nexport const bassDrum2 = [3,0,43,0,,0.25,,,,,,,,2];\nexport const snare = [1,0,655,0,,.09,3,1.65,,,,,.02,3.8,-0.1,,.2];\nexport const snare2 = [1,0,219,,,,,1.1,,-.1,-50,-.05,-.01,1];\nexport const hihatOpen = [.8,0,2100,,,.2,3,3,,,-400,,,2];\nexport const shaker = [.3,0,900,.02,,.07,4,0,,,,,,4];\n","export const korgBass = [.7,0,22,,.07,.07,2,0,,,.5,.01];\nexport const korgFilter = [,0,245,0,0,0.48,2,,0,0,0,,,,0,0.02,0.01];\nexport const piano = [.5,0,196,,.08,.5,3];\nexport const ringPiano = [0.75,0,196,0,0.08,0.18,3];\nexport const polySynth = [,0,25,0.002,0.02,0.08,3,,,,,,,,,0.1,0.01];\nexport const synthBrass = [0.9,0,143,,,.35,3,,,,,,,,,];\nexport const hallBrass = [,0,232,.01,.09,.15,2,,,,,,154.87,,,,.26];\nexport const digDug = [,0,23,,,.2,3,5,,,0];\n","export const flute = [,0,740,0,,0.15,2,0.2,-0.1,-0.15,9,0.02,,0.1,0.12,0,0.06];","<script>\nimport { playSound } from '../services/RendererService';\nimport { createEventDispatcher } from 'svelte';\nimport Modal from './Modal.svelte';\nimport Button from './Button.svelte';\nimport { percussion, keyboards, wind } from 'zzfxm-instruments';\n\nexport let open = false;\n\nconst dispatch = createEventDispatcher();\n\nconst format = v => {\n  return v.substr(0,1).toUpperCase() + v.substr(1).replace(/[A-Z0-9]/g, ' $&')\n}\n\nconst instruments = Object.entries({percussion, keyboards, wind}).map(([name, items]) => ({\n  label: format(name),\n  instruments: Object.entries(items).map(([name, value]) => ({\n      name: format(name),\n      params: value\n    })\n  )\n}));\n\nlet group = instruments[0];\nlet selection = null;\n\n$: if (open) {\n  selection = null\n}\n\nconst handleChange = () => {\n  if (selection) {\n    playSound(selection.params);\n  }\n}\n\nconst handleSelectClick = () => {\n  dispatch('select', selection);\n  open = false;\n  selection = null;\n}\n</script>\n\n<Modal title=\"Select an instrument\" bind:open={open}>\n  <div class=\"splitView\">\n    <div class=\"inset\">\n      <select class=\"select\" size=\"2\" bind:value={group}>\n        {#each instruments as group}\n          <option value={group}>{group.label}</option>\n        {/each}\n      </select>\n    </div>\n    <div class=\"inset\">\n      <select class=\"select\" size=\"2\" bind:value={selection} on:change={handleChange}>\n        {#each group.instruments as instrument (instrument)}\n          <option value={instrument}>{instrument.name}</option>\n        {/each}\n      </select>\n    </div>\n  </div>\n  <span slot=\"controls\">\n    <Button label=\"Select\" disabled={!selection} on:click={handleSelectClick} />\n  </span>\n</Modal>\n\n<style>\n.splitView,.select {\n  width:100%;\n  height:100%;\n}\n</style>","<script>\nimport { instrumentsMeta, patterns, instruments } from '../stores.js';\nimport { playNote } from '../services/RendererService.js';\nimport { addInstrument, deleteInstrument, setInstrumentParams } from '../services/InstrumentService.js';\nimport { decodeInstrument, encodeInstrument } from 'zzfxm-song-encoder';\nimport { clamp } from '../lib/utils.js';\nimport Pane from './Pane.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Button from './Button.svelte';\nimport Field from './Field.svelte';\nimport Property from './Property.svelte';\nimport TextProperty from './TextProperty.svelte';\nimport NumberProperty from './NumberProperty.svelte';\nimport SampleViewer from './SampleViewer.svelte';\nimport InstrumentPicker from './InstrumentPicker.svelte';\n\nexport let selected = 0;\n\nconst shapeOptions = [\n  {id: 0, label: 'Sin'},\n  {id: 1, label: 'Triangle'},\n  {id: 2, label: 'Saw'},\n  {id: 3, label: 'Tan'},\n  {id: 4, label: 'Bit Noise'},\n];\n\nlet clipboard;\nlet showInstrumentPicker = false;\n\n$: selected = clamp(selected, 0, $instruments.length - 1);\n$: instrument = $instruments[selected];\n$: instrumentName = $instrumentsMeta[selected];\n$: buffer = zzfxG(...instrument);\n$: usage = $patterns.map((pattern, i) => {\n  return pattern.some(channel => channel[0] === selected) && i\n}).filter(x => x !== false);\n\nconst handlePlayClick = () => {\n  playNote(selected, 1);\n}\n\nconst handleChange = () => {\n  playNote(selected, 1);\n}\n\nconst handleImportClick = () => {\n  let code = prompt('Zzfx Code', `zzfx(...[])`);\n  if (code) {\n    code = code.replace(/zzfx\\(\\.\\.\\.(\\[[\\w\\W]*?\\])\\)/, '$1');\n    setInstrumentParams(selected, decodeInstrument(code));\n  }\n}\n\nconst handleExportClick = () => {\n  prompt('Zzfx Code', `zzfx(...${encodeInstrument(instrument)})`);\n}\n\nconst handleAddClick = () => {\n  addInstrument([1,0]);\n  selected = $instruments.length - 1;\n}\n\nconst handleDeleteClick = () => {\n  if (usage.length > 0) {\n    alert(`This instrument is being used in patterns ${usage}.`)\n  } else {\n    deleteInstrument(selected);\n    selected = Math.min(selected,$instruments.length - 1);\n  }\n}\n\nconst handleSelectClick = () => {\n  showInstrumentPicker = true;\n}\n\nconst handleInstrumentSelect = e => {\n  setInstrumentParams(selected, e.detail.params)\n  $instrumentsMeta[selected] = e.detail.name\n}\n\nconst copy = () => {\n  clipboard = instrument.slice();\n}\n\nconst paste = () => {\n  $instruments[selected] = clipboard.slice();\n  $instruments = $instruments;\n}\n</script>\n\n\n<div class=\"splitView\">\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <Field label=\"Instruments\">\n          <Button label=\"Add\" on:click={handleAddClick} />\n          <Button label=\"Delete\" disabled={usage.length} on:click={handleDeleteClick} />\n          <Button label=\"Copy\" on:click={copy}  />\n          <Button label=\"Paste\" on:click={paste} disabled={!clipboard} />\n        </Field>\n      </Toolbar>\n    </div>\n    <select class=\"select\" bind:value={selected} size=\"2\">\n      {#each $instrumentsMeta as instrument, i}\n        <option value={i}>{i}: {instrument}</option>\n      {/each}\n    </select>\n  </Pane>\n\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <NumberProperty min={0} max={$instruments.length - 1} label=\"#\" bind:value={selected} />\n        <TextProperty label=\"Name\" bind:value={$instrumentsMeta[selected]} />\n        <Field label=\"Playback\">\n          <Button label=\"Play Instrument\" on:click={handlePlayClick} />\n        </Field>\n        <Field label=\"Parameters\">\n          <Button label=\"Import\" on:click={handleImportClick} />\n          <Button label=\"Export\" on:click={handleExportClick} />\n          <Button label=\"Library\" on:click={handleSelectClick} />\n        </Field>\n        <Field label=\"Pattern Usage\"><span class=\"usage input\">{usage.length ? usage : 'Unused'}</span></Field>\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n\n    <div class=\"instrument\">\n      <div class=\"instrument__params\">\n        <NumberProperty size={4} label=\"Volume\" hint=\"Volume scale (percent)\" min=\"0\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[0]} />\n        <NumberProperty size={4} label=\"Frequency\" hint=\"Frequency of sound (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"1\" on:input={handleChange} bind:value={instrument[2]} />\n        <Property label=\"Shape\">\n          <select class=\"select\" bind:value={instrument[6]}>\n            {#each shapeOptions as option}\n              <option value={option.id}>{option.label}</option>\n            {/each}\n          </select>\n        </Property>\n        <NumberProperty size={4} label=\"Attack\" hint=\"Attack time, how fast sound starts (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[3]} />\n        <NumberProperty size={4} label=\"Sustain\" hint=\"Sustain time, how long sound holds (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[4]} />\n        <NumberProperty size={4} label=\"Release\" hint=\"Release time, how fast sound fades out (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[5]} />\n        <NumberProperty size={4} label=\"Shape Curve\" hint=\"Squarenes of wave (0=square, 1=normal, 2=pointy)\" min=\"0\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[7]} />\n        <NumberProperty size={4} label=\"Slide\" hint=\"How much to slide frequency (kHz/s)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[8]} />\n        <NumberProperty size={4} label=\"Delta Slide\" hint=\"How much to change slide (kHz/s/s)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[9]} />\n        <NumberProperty size={4} label=\"Pitch Jump\" hint=\"Frequency of pitch jump (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"10\" on:input={handleChange} bind:value={instrument[10]} />\n        <NumberProperty size={4} label=\"Pitch Jump Time\" hint=\"Time of pitch jump (seconds)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[11]} />\n        <NumberProperty size={4} label=\"Repeat Time\" hint=\"Resets some parameters periodically (seconds)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[12]} />\n        <NumberProperty size={4} label=\"Noise\" hint=\"How much random noise to add (percent)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[13]} />\n        <NumberProperty size={4} label=\"Modulation\" hint=\"Frequency of modulation wave, negative flips phase (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[14]} />\n        <NumberProperty size={4} label=\"Bit Crush\" hint=\"Resamples at a lower frequency in (samples*100)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[15]} />\n        <NumberProperty size={4} label=\"Delay\" hint=\"Overlap with itself for reverb and flanger effects (seconds)\" min=\"0\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[16]} />\n        <NumberProperty size={4} label=\"Sustain Volume\" hint=\"Volume level for sustain (percent)\" min=\"0\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[17]} />\n        <NumberProperty size={4} label=\"Decay\" hint=\"Decay time, how long to reach sustain after attack\" min=\"0\" max=\"1\" step=\"0.01\" on:input={handleChange} bind:value={instrument[18]} />\n        <NumberProperty size={4} label=\"Tremolo\" hint=\"Trembling effect, rate controlled by repeat time (precent)\" min=\"0\" max=\"1\" step=\"0.01\" on:input={handleChange} bind:value={instrument[19]} />\n        <div class=\"outset\"></div>\n        <div class=\"outset\"></div>\n      </div>\n      <div class=\"instrument__preview outset\">\n        <SampleViewer data={buffer} />\n      </div>\n    </div>\n  </Pane>\n</div>\n\n<InstrumentPicker bind:open={showInstrumentPicker} on:select={handleInstrumentSelect} />\n\n<style>\n.instrument {\n  display: flex;\n}\n\n.instrument__params {\n  display: grid;\n  grid-template-columns: repeat(3, 14em);\n}\n\n.instrument__preview {\n  flex: 1;\n}\n\n.usage {\n  min-width: 8em;\n  max-width: 17em;\n  overflow: auto;\n}\n</style>","<script>\n  export let id = null;\n  export let step = 1;\n  export let min = 0;\n  export let max = 1;\n  export let list = null;\n  export let value;\n</script>\n\n<input type=\"range\" {id} {step} {min} {max} {list} bind:value>\n\n<style>\n  input {\n    display: block;\n    margin: 0;\n    width: 100%;\n    padding: 4px;\n    height: 21px;\n    background-color: transparent;\n    -webkit-appearance: none;\n  }\n  input:focus {\n    outline: none;\n  }\n  input::-webkit-slider-runnable-track {\n    background: #777;\n    box-shadow: inset -1px -1px 0 #fff8, inset 1px 1px 0 #0003;\n    height: 6px;\n  }\n  input::-moz-range-track {\n    background: #777;\n    box-shadow: inset -1px -1px 0 #fff8, inset 1px 1px 0 #0003;\n    height: 6px;\n  }\n  input::-webkit-slider-thumb {\n    margin-top: -6px;\n    width: 30px;\n    height: 17px;\n    background: linear-gradient(90deg,#555 13px,  #87e6eb 15px,  #555 17px);\n    box-shadow: -1px -1px 0 #fff4, inset -1px -1px 0 #0004, 0px 1px 4px #000c;\n    -webkit-appearance: none;\n  }\n  input::-moz-range-thumb {\n    width: 30px;\n    height: 17px;\n    border: none;\n    border-radius: 0;\n    background: linear-gradient(90deg,#555 13px,  #87e6eb 15px,  #555 17px);\n    box-shadow: -1px -1px 0 #fff4, inset -1px -1px 0 #0004, 0px 1px 4px #000c;\n  }\n</style>","<script>\nimport Slider from './Slider.svelte';\n\nexport let value = 0;\n</script>\n\n<div>\n  <Slider step={.1} min={-1} max={1} list=\"stops\" bind:value />\n  <datalist id=\"stops\">\n    <option value=\"-1\" label=\"L\">\n    <option value=\"0\" label=\"C\">\n    <option value=\"1\" label=\"R\">\n  </datalist>\n</div>\n\n<style>\n  datalist {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 14px;\n  }\n  option {\n    font-size: 80%;\n    padding:0 2px\n  }\n</style>\n","<script>\nimport { instrumentsMeta } from '../stores.js';\nimport { clamp } from '../lib/utils.js';\nimport PanningProperty from './PanningProperty.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Field from './Field.svelte';\n\nexport let data = [];\nexport let title = 'Track';\nexport let selectedRow = 0;\n\n$: scrollPos = `${-selectedRow * 18}px`;\n$: totalRows = data.length - 3;\n\nconst NOTE_NAMES = [\n  'REL', '---',\n  'C-1', 'C#1', 'D-1', 'D#1', 'E-1', 'F-1',\n  'F#1', 'G-1', 'G#1', 'A-1', 'A#1', 'B-1',\n  'C-2', 'C#2', 'D-2', 'D#2', 'E-2', 'F-2',\n  'F#2', 'G-2', 'G#2', 'A-2', 'A#2', 'B-2',\n  'C-3', 'C#3', 'D-3', 'D#3', 'E-3', 'F-3',\n  'F#3', 'G-3', 'G#3', 'A-3', 'A#3', 'B-3'\n];\n\nconst handleScroll = event => {\n  const {deltaY, deltaMode} = event;\n  if (deltaMode === 0) {\n    const step = deltaY / 4 | 0;\n    selectedRow = clamp(selectedRow + step, 0, totalRows);\n  }\n}\n\n</script>\n\n<div class=\"channel\">\n  <Toolbar>\n    <Field label={title}>\n      <select class=\"select\" bind:value={data[0]}>\n        {#each $instrumentsMeta as name, i}\n          <option value={i}>{name}</option>\n        {/each}\n      </select>\n    </Field>\n  </Toolbar>\n\n  <div class=\"noteList\" tabindex=\"0\" on:wheel={handleScroll}>\n    <pre class=\"notes\" style=\"transform:translateY({scrollPos})\">{data.slice(2).map(note => `${NOTE_NAMES[1 + note | 0]} ${((note % 1) * 100).toFixed().padStart(2,'0')}`).join('\\n')}</pre>\n  </div>\n\n  <div class=\"outset\">\n    <PanningProperty bind:value={data[1]} />\n  </div>\n\n</div>\n\n<style>\n.select {\n  width: 100%;\n}\n.channel {\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  height: 100%;\n  width: 100%;\n}\n.noteList {\n  overflow: hidden;\n  position: relative;\n  background-image: linear-gradient(#fff 0, #fff 18px);\n  background-size:100% 18px;\n  background-repeat: no-repeat;\n  background-position: 0 50%;\n  text-align-last: justify;\n  font-family: monospace;\n  line-height:18px;\n  width:100%;\n  box-sizing:border-box;\n}\n.notes {\n  position: absolute;\n  top: 50%;\n  margin-top:-8px;\n  width:100%;\n  min-width:0;\n  padding:0 1em;\n  background-image: linear-gradient( #0001 18px, transparent 18px);\n  background-size:100% 72px;\n  white-space: pre-line;\n  will-change: transform;\n}\n.channel :global(.field) {\n  align-items: center!important;\n}\n.channel :global(.field__controls) {\n  width: 100% !important;\n}\npre {\n  margin: 0;\n}\n</style>\n","<script>\nimport { NOTE_KEY_CODES } from '../config.js';\n\n$: keys = Object.entries(NOTE_KEY_CODES).sort((a,b) => a[1] - b[1]).map(([x]) => x);\n\nconst handleClick = event => {\n  const { target, button } = event;\n  if (button === 0) {\n    target.focus()\n    const event = new KeyboardEvent('keydown', {\n      key: target.dataset.note\n    });\n    window.dispatchEvent(event);\n  }\n};\n</script>\n\n<div>\n  {#each keys as key}\n    <span tabindex=\"0\" data-note={key} on:mousedown={handleClick}>\n      {key.toUpperCase()}\n    </span>\n  {/each}\n</div>\n\n<style>\n  div {\n    display: flex;\n    align-items: flex-start;\n    padding: var(--modal-spacing);\n  }\n  span {\n    padding-top: 76px;\n    padding-bottom: 4px;\n    background-color: #eee;\n    color:#666;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    text-align: center;\n    box-shadow: 0 0 0px 1px #0006;\n    flex: 1;\n  }\n  span:nth-child(12n+2),\n  span:nth-child(12n+4),\n  span:nth-child(12n+7),\n  span:nth-child(12n+9),\n  span:nth-child(12n+11) {\n    background-color: #222;\n    padding-top: 40px;\n    margin: 0 -11px;\n    flex: .75;\n    z-index: 1;\n    box-shadow: 1px 1px 1px 1px #0006;\n    color: #ccc;\n    margin: 0 -1.75%;\n  }\n  span:hover {\n    filter:contrast(.7)\n  }\n  span + span {\n    margin-left: 1px;\n  }\n</style>\n","<script>\nimport { patterns, sequence, channelMeters, patternsMeta, songPlaying } from '../stores.js';\nimport { addPattern, deletePattern, addChannel, deleteChannel, addRow, deleteRow, createTrack, createPattern, clearRow, setPatternData } from '../services/PatternService.js';\nimport { playPattern, stopSong } from '../services/RendererService.js';\nimport { createEventDispatcher } from 'svelte';\nimport { clamp } from '../lib/utils.js';\nimport Channel from './Channel.svelte';\nimport Pane from './Pane.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Field from './Field.svelte';\nimport Button from './Button.svelte';\nimport TextProperty from './TextProperty.svelte';\nimport NumberProperty from './NumberProperty.svelte';\nimport PianoInput from './PianoInput.svelte';\n\nexport let selectedChannel = 0;\nexport let selectedRow = 0;\nexport let selectedPattern = 0;\nexport let piano = false;\n\nlet channelClipboard;\nlet patternClipboard;\n\n$: patternCount = $patterns.length;\n$: channelCount = $patterns[selectedPattern].length;\n$: selectedPattern = clamp(selectedPattern, 0, $patterns.length - 1);\n$: selectedChannel = clamp(selectedChannel, 0, $patterns[selectedPattern].length - 1);\n$: selectedRow = clamp(selectedRow, 0, $patterns[selectedPattern][0].length - 3) | 0;\n\n\n$: usage = $sequence.map((pattern, i) => {\n  return pattern === selectedPattern && i\n}).filter(x => x !== false);\n\n\nconst dispatch = createEventDispatcher();\n\nconst channelElems = [];\n\n\nconst handleAddPatternClick = () => {\n  selectedPattern = addPattern(createPattern(3, 64));\n}\n\nconst handleDeletePatternClick = () => {\n  deletePattern(selectedPattern);\n}\n\nconst handleAddRowClick = () => {\n  selectedRow = addRow(selectedPattern);\n}\n\nconst handleDeleteRowClick = () => {\n  deleteRow(selectedPattern, selectedRow);\n}\n\nconst handleClearRowClick = () => {\n  clearRow(selectedPattern, selectedRow);\n}\n\nconst moveChannelLeft = () => {\n  swapChannels(selectedChannel, --selectedChannel);\n}\n\nconst moveChannelRight = () => {\n  swapChannels(selectedChannel, ++selectedChannel);\n}\n\nconst handleAddChannelClick = () => {\n  selectedChannel = addChannel(selectedPattern);\n}\n\nconst deleteChannelClick = () => {\n  deleteChannel(selectedPattern, selectedChannel);\n}\n\nconst clearChannel = () => {\n  $patterns[selectedPattern][selectedChannel].fill(0, 2);\n  $patterns[selectedPattern] = $patterns[selectedPattern];\n}\n\nconst swapChannels = (a, b) => {\n  const channels = $patterns[selectedPattern].slice();\n  [channels[a], channels[b]] = [channels[b], channels[a]];\n  $patterns[selectedPattern] = channels;\n}\n\nconst copyChannel = () => {\n  channelClipboard = $patterns[selectedPattern][selectedChannel].slice();\n}\n\nconst pasteChannel = () => {\n  $patterns[selectedPattern][selectedChannel] = channelClipboard.slice();\n  $patterns[selectedPattern] = $patterns[selectedPattern];\n}\n\nconst handleCopyPatternClick = () => {\n  patternClipboard = $patterns[selectedPattern].slice();\n}\n\nconst handlePastePatternClick = () => {\n  setPatternData(selectedPattern, patternClipboard.slice());\n}\n\nconst handlePatternChange = () => {\n  dispatch('patternselect');\n  selectedRow = 0;\n}\n\nconst handlePlayClick = () => {\n  playPattern(selectedPattern);\n}\n\nconst handleStopClick = () => {\n  stopSong();\n}\n\nconst handlePianoToggleClick = () => {\n  piano = !piano;\n}\n</script>\n\n\n<div class=\"splitView\">\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <Field label=\"Patterns\">\n          <Button label=\"Add\" on:click={handleAddPatternClick} />\n          <Button label=\"Delete\" disabled={usage.length} on:click={handleDeletePatternClick} />\n          <Button label=\"Copy\" on:click={handleCopyPatternClick} />\n          <Button label=\"Paste\" disabled={!patternClipboard} on:click={handlePastePatternClick} />\n        </Field>\n      </Toolbar>\n    </div>\n    <select class=\"select\" on:input={handlePatternChange} bind:value={selectedPattern} size=\"2\">\n      {#each $patterns as pattern, i}\n        <option value={i}>{i}: {$patternsMeta[i]}</option>\n      {/each}\n    </select>\n  </Pane>\n\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <NumberProperty label=\"#\" max={patternCount} bind:value={selectedPattern} on:input={handlePatternChange}></NumberProperty>\n        <TextProperty label=\"Name\" bind:value={$patternsMeta[selectedPattern]}></TextProperty>\n        <Field label=\"Playback\">\n          <Button disabled={$songPlaying}  keyboard=\"ENTER\" label=\"Play Pattern\" on:click={handlePlayClick} />\n          <Button disabled={!$songPlaying}  keyboard=\"ENTER\" label=\"Stop\" on:click={handleStopClick} />\n        </Field>\n        <Field label=\"Track\">\n          <Button on:click={handleAddChannelClick} label=\"Add\" />\n          <Button on:click={clearChannel} label=\"Clear\" />\n          <Button on:click={copyChannel} label=\"Copy\" />\n          <Button disabled={!channelClipboard} on:click={pasteChannel} label=\"Paste\" />\n          <Button disabled={channelCount === 1} on:click={deleteChannelClick} label=\"Delete\" />\n          <Button disabled={channelCount === 1 || selectedChannel === 0} on:click={moveChannelLeft} label=\"Move Left\" />\n          <Button disabled={channelCount === 1 || selectedChannel === channelCount - 1} on:click={moveChannelRight} label=\"Move Right\" />\n        </Field>\n        <Field label=\"Row\">\n          <Button on:click={handleAddRowClick} label=\"Add\" />\n          <Button disabled={channelCount === 1} on:click={handleDeleteRowClick} label=\"Delete\" />\n          <Button label=\"Clear\" on:click={handleClearRowClick} />\n        </Field>\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n    <div class=\"channels outset\">\n      {#each $patterns[selectedPattern] as channel, i}\n        <div class=\"channel inset\" bind:this={channelElems[i]} on:focusin={()=>selectedChannel = i} class:selected={i==selectedChannel}>\n          <Channel on:rowselect title={`Track ${i}`} bind:selectedRow={selectedRow} data={channel}></Channel>\n          <div class=\"level\" style=\"transform:scaleY({$channelMeters[i] || 0})\"></div>\n        </div>\n      {/each}\n    </div>\n    {#if piano}\n      <PianoInput />\n    {/if}\n  </Pane>\n</div>\n\n<style>\n  select {\n    display: block;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n  .selected {\n    background: var(--active-selection-color);\n  }\n  .channels {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: minmax(120px, 1fr);\n    overflow: auto;\n    gap: 10px;\n    padding: 10px\n  }\n  .channel {\n    position:relative;\n  }\n  .level {\n    position: absolute;\n    width: 32px;\n    background: linear-gradient(#fc0, #0f0);\n    bottom: 50%;\n    left: calc(50% - 16px);\n    height: 150px;\n    transform-origin: 50% 100%;\n    will-change: transform;\n  }\n</style>\n","<script>\n  import Modal from '../Modal.svelte';\n  import { PATTERN_ROW_COARSE_STEP } from '../../config.js';\n\n  export let open = false;\n\n  const isMac = navigator.userAgent.indexOf('Mac OS X') > -1;\n\n  const SHIFT_KEY = '⇧';\n  const ALT_KEY = isMac ? '⌥' : 'ALT';\n  const UP_KEY = isMac ? '▲' : 'ꜛ';\n  const DOWN_KEY = isMac ? '▼' : 'ꜜ';\n  const SPACE_KEY = 'SPACE';\n  const BACKSPACE_KEY = '←'\n  const keymap = [\n    {\n      name: 'Playback',\n      shortcuts: [\n        { keys: ['ENTER'], desc: 'Play / Stop the current pattern' },\n        { keys: [ALT_KEY, 'ENTER'], desc: 'Play / Stop song' },\n        { keys: [SHIFT_KEY, 'ENTER'], desc: 'Play the current pattern from the beginning' },\n        { keys: [ALT_KEY, SHIFT_KEY, 'ENTER'], desc: 'Play song from the beginning' },\n      ]\n    },\n    {\n      name: 'Editing',\n      shortcuts: [\n        { keys: [UP_KEY], desc: 'Move up one row in the pattern' },\n        { keys: [DOWN_KEY], desc: 'Move down one row in the pattern' },\n        { keys: [SHIFT_KEY, UP_KEY], desc: `Move up ${PATTERN_ROW_COARSE_STEP} rows in the pattern` },\n        { keys: [SHIFT_KEY, DOWN_KEY], desc: `Move down ${PATTERN_ROW_COARSE_STEP} rows in the pattern` },\n        { keys: [ALT_KEY, UP_KEY], desc: 'Increase note attenuation (fine)' },\n        { keys: [ALT_KEY, DOWN_KEY], desc: 'Decrease note attenuation (fine)' },\n        { keys: [ALT_KEY, SHIFT_KEY, UP_KEY], desc: 'Increase note attenuation (coarse)' },\n        { keys: [ALT_KEY, SHIFT_KEY, DOWN_KEY], desc: 'Decrease note attenuation (coarse)' },\n        { keys: [SPACE_KEY], desc: 'Release note'},\n        { keys: [BACKSPACE_KEY], desc: 'Clear note'}\n\n      ]\n    }\n  ];\n\n</script>\n\n<Modal title=\"Keyboard shortcuts\" bind:open={open}>\n  {#each keymap as group}\n    {group.name}\n    <dl>\n      {#each group.shortcuts as shortcut}\n        <dt>\n          {#each shortcut.keys as key, i}\n            {#if i}&nbsp;+&nbsp;{/if}<kbd>{key}</kbd>\n          {/each}\n        </dt>\n        <dd>{shortcut.desc}</dd>\n      {/each}\n    </dl>\n  {/each}\n</Modal>\n\n<style>\n  kbd {\n    padding: 2px 4px;\n    background: #fff;\n    box-shadow: 0 1px 0px 1px #888;\n    border-radius: 2px;\n    letter-spacing: 0;\n    font: 12px / 1.25 Arial;\n  }\n  dl {\n    display: grid;\n    grid-template-columns: 15em auto;\n    gap: var(--modal-spacing);\n  }\n  dt {\n    word-spacing: -0.25em;\n    width: auto;\n    color: #444;\n  }\n  dd {\n    margin:0;\n  }\n</style>","<script>\n  import Modal from '../Modal.svelte';\n  import { version, repository } from '../../../package.json';\n  export let open = false;\n</script>\n\n<Modal title=\"About\" bind:open={open}>\n  <div>\n    <h1>ZzFXM Music Tracker</h1>\n    v{ version }\n    <p>by <a href=\"https://keithclark.co.uk\">Keith Clark</a></p>\n    <p>Source available at the <a href=\"{repository.url}\">ZzFXM GitHub Repo</a></p>\n  </div>\n</Modal>\n\n<style>\ndiv {\n  text-align: center;\n}\n</style>","<script>\n  import Modal from '../Modal.svelte';\n  import Button from '../Button.svelte';\n  import { serializeSong, loadSongFromString } from '../../services/SongService.js';\n  export let open = false;\n\n  let src;\n  let error;\n\n  $: if (open) {\n    src = serializeSong();\n    error = null;\n  }\n\n  const setClick = () => {\n    try {\n      loadSongFromString(src);\n      open = false;\n    } catch (e) {\n      error = e.message;\n    }\n  }\n</script>\n\n<Modal title=\"Source\" bind:open={open}>\n  <div class=\"wrap\">\n    <div class=\"inset\">\n      <textarea class=\"inset input\" bind:value={src}></textarea>\n    </div>\n    {#if error}\n      <span>Error: {error}</span>\n    {/if}\n  </div>\n  <span slot=\"controls\"><Button label=\"Ok\" on:click={setClick} /></span>\n</Modal>\n\n<style>\n\n.wrap {\n  display:flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.inset {\n  flex:1;\n}\ntextarea {\n  width: 100%;\n  height: 100%;\n  white-space: pre-line;\n  word-break: break-all;\n  resize: none;\n}\n</style>","<script>\n  export let label = '';\n</script>\n\n<div class=\"propertyList\">\n  <div class=\"propertyList__label\">{ label }</div>\n  <div class=\"propertyList__properties inset\">\n    <slot />\n  </div>\n</div>\n\n<style>\n  .propertyList + .propertyList {\n    margin-top: var(--panel-spacing)\n  }\n  .propertyList__label {\n    padding: var(--field-padding);\n  }\n</style>","<script>\n  import Property from './Property.svelte';\n  export let label = '';\n  export let value = '';\n  export let options = [];\n  export let hint = '';\n</script>\n\n<Property {label} {hint} let:id={id}>\n  <select {id} class=\"select\" bind:value={value}>\n    {#each options as option}\n      <option>{option}</option>\n    {/each}\n  </select>\n</Property>\n","<script>\n  import {\n    PLAYER_BUFFER_SIZE_OPTIONS,\n    PLAYER_SAMPLE_RATE_OPTIONS,\n    UI_FPS_OPTIONS\n  } from '../../config.js';\n  import { bufferSize, sampleRate, uiFPS } from '../../stores.js';\n\n  import Modal from '../Modal.svelte';\n  import PropertyList from '../PropertyList.svelte';\n  import EnumProperty from '../EnumProperty.svelte';\n\n  export let open = false;\n</script>\n\n<Modal title=\"Settings\" bind:open>\n  <PropertyList label=\"Playback Settings\">\n    <EnumProperty hint=\"The amount of data the player will prerender before playing it. Increase this if your browser is cutting off audio during playback\" label=\"Playback buffer size (bytes)\" bind:value={$bufferSize} options={PLAYER_BUFFER_SIZE_OPTIONS} />\n    <EnumProperty hint=\"Controls the audio quality. Reduce in favour of UI responsiveness if your browser is consuming too many system resources\" label=\"Playback sample rate (hz)\" bind:value={$sampleRate} options={PLAYER_SAMPLE_RATE_OPTIONS} />\n    <EnumProperty hint=\"Controls the responsiveness of the UI during playback. Reduce in favour of audio quality if your browser is consuming too many system resources\" label=\"UI Refresh rate (FPS)\" bind:value={$uiFPS} options={UI_FPS_OPTIONS} />\n  </PropertyList>\n</Modal>\n","export default '[[[,0,77,,,.7,2,.41,,,,,,,,.06],[,0,43,.01,,.3,2,,,,,,,,,.02,.01],[,0,170,.003,,.008,,.97,-35,53,,,,,,.1],[.8,0,270,,,.12,3,1.65,-2,,,,,4.5,,.02],[,0,86,,,.1,,.7,,,,.5,,6.7,1,.05],[,0,41,,.05,.4,2,0,,,9,.01,,,,.08,.02],[,0,2200,,,.04,3,2,,,800,.02,,4.8,,.01,.1],[.3,0,16,,,.3,3]],[[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33],[3,1,22,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,24,,,,,,,,,,,,,,,,,,,,,,,,22,,22,,22,,,,],[5,-1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[,1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33],[3,1,24,,,,,,,,27,,,,,,,,,,,,,,,,27,,,,24,,,,24,,,,,,,,27,,,,,,,,,,,,,,,,24,,24,,24,,,,],[5,-1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[,1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[6,1,,,34,34,34,,,,,,34,34,,,,,34,,,,34,34,,,,,34,,,,34,,,,34,34,34,,,,,,34,,,,,,34,34,,,34,34,,,,,,,,,34,34],[4,1,,,,,,,24,,,,,,24,,24,,,,24,,,,24,,,,,,,,,,,,,,,,24,,,,,,24,,24,,,,24,,,,24,,,,,,,,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,23,23,35,23,23,36,23,23,35,23,23,36,23,23,35,35,23,23,35,23,23,35,23,23,36,23,23,35,23,23,36,36],[5,-1,21,,,19,,,21,,,,,,,,,,21,,,19,,,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],[3,1,24,,,24,,,24,,,,,,,,,,24,,,24,,,24,,,,24.75,24.5,24.26,24.01,24.01,24.01,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25],[4,-1,,,,,,,,,,,,,,,,,,,,,,,,,,,24.75,24.5,24.26,24.01,24.01,24.01,24.01,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,,21,23,,35,,23,,21,23,,35,,35,,23,,21,23,,35,,21,23,,35,,21,23,,,],[6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,34,36,34,,33,34,34,36,31,36,34,,31,34,32,,33,36,34,,31,34,34,36,33,36,33,,31,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29],[4,1,24,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,21,,19,21,,33,,21,,19,21,,33,,33,,21,,19,21,,33,,21,,19,21,,33,,33,,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29],[2,1,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,,,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,,,],[6,1,,,36,,,,,,36,,36,,,,,,,,36,,,,,,36,,36,,,,,,,,36,,,,,,,,,,,,,,,,36,,,,,,36,,36,,,,,,],[3,1,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25,,,,,25,,,,,25,,,25,,,,,,,,25,,,,,,,,25,25,25,25]],[[1,-1,14,14,26,14,14,26,14,14,26,14,14,26,14,14,26,26,14,14,26,14,14,26,14,14,26,14,14,26,14,14,26,26,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29,19,19,31,19,19,31,19,19,31,19,19,31,19,19,31,31],[4,1,24,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,36,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,19,,19,19,31,19,19,31,19,,19,19,31,19,19,31],[2,1,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,,,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,,,],[3,1,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25],[6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,34,,,,,,34,,34,,,,,,,,34,,,,,,34,,34,,,,,,]]],[0,1,1,2,3,4,4],,{\"title\":\"Depp\"}]';\n","<script>\n\n  import { patterns, sequence, speed, title, selectedRow, selectedChannel, selectedPattern, selectedSequence, masterVolume, currentPlaybackPosition, songPlaying } from './stores.js';\n  import { serializeSong, createEmptySong, loadSongFromFile, loadSongFromString } from './services/SongService.js';\n  import { playPattern, playSong, stopSong, playNote } from './services/RendererService.js';\n  import { getCumlativeRowAtPosition } from './services/SequenceService.js';\n  import { adjustAttenuation, setNote } from './services/PatternService.js';\n  import { isInputElement } from './lib/utils.js';\n  import { NOTE_KEY_CODES, PATTERN_ROW_FINE_STEP, PATTERN_ROW_COARSE_STEP, ATTENUATION_FINE_STEP, ATTENUATION_COARSE_STEP} from './config.js';\n\n  import SequenceEditor from './components/SequenceEditor.svelte';\n\timport InstrumentEditor from './components/InstrumentEditor.svelte';\n\timport PatternEditor from './components/PatternEditor.svelte';\n  import TextProperty from './components/TextProperty.svelte';\n  import NumberProperty from './components/NumberProperty.svelte';\n  import Property from './components/Property.svelte'\n  import Toolbar from './components/Toolbar.svelte';\n  import Field from './components/Field.svelte';\n  import Button from './components/Button.svelte';\n  import Slider from './components/Slider.svelte';\n  import Pane from './components/Pane.svelte';\n  import KeyboardModal from './components/modals/KeyboardModal.svelte';\n  import AboutModal from './components/modals/AboutModal.svelte';\n  import SourceModal from './components/modals/SourceModal.svelte';\n  import SettingsModal from './components/modals/SettingsModal.svelte';\n  import demoSong from './demo.js';\n\n  let files;\n  let fileElem;\n  let showKeysHelpModal = false;\n  let showAboutModal = false;\n  let showSourceModal = false;\n  let showSettingsModal = false;\n  let showPaino = window.matchMedia('(min-height: 48em)').matches;\n  let showInstruments = true;\n\n  $: if (files) {\n    stopSong();\n    loadSongFromFile(files[0])\n      .then(resetSongPosition)\n      .catch(err => alert(err.message));\n    files = null;\n  }\n\n  $: patternStartPosition = getCumlativeRowAtPosition($selectedSequence);\n  $: patternPosition = patternStartPosition + $selectedRow;\n  $: if ($selectedSequence !== null) {\n    currentPlaybackPosition.set(patternPosition);\n  } else {\n    currentPlaybackPosition.set(-1);\n  }\n\n  const resetSongPosition = () => {\n    selectedSequence.set(0);\n    selectedPattern.set($sequence[0]);\n    selectedRow.set(0);\n  }\n\n  const resetPatternPosition = () => {\n    selectedRow.set(0);\n  }\n\n  const handlePatternSelect = () => {\n    stopSong();\n    currentPlaybackPosition.set(-1);\n    selectedSequence.set(null);\n  }\n\n  const handlePositionChange = () => {\n    selectedPattern.set($sequence[$selectedSequence]);\n  }\n\n  const handlePositionSelect = () => {\n    stopSong();\n    selectedPattern.set($sequence[$selectedSequence]);\n    selectedRow.set(0);\n  }\n\n  const handlePlaySongClick = () => {\n    playSong();\n  }\n\n  const handleStopClick = () => {\n    stopSong();\n  }\n\n  const handleLoadSongClick = () => {\n    fileElem.click();\n  }\n\n  const handleSaveSongClick = () => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(serializeSong()));\n    element.setAttribute('download', `${$title}.js`);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  const handleHelpClick = () => {\n    showKeysHelpModal = true;\n  }\n\n  const handleAboutClick = () => {\n    showAboutModal = true;\n  }\n\n  const handleKeyPress = event => {\n    const { key, shiftKey, altKey, ctrlKey, metaKey } = event;\n\n    // If the active element is a form input (button, input etc.) do nothing\n    if (isInputElement(document.activeElement)) {\n      return;\n    }\n\n    if (key === 'ArrowLeft') {\n      $selectedChannel--;\n    } else if (key === 'ArrowRight') {\n      $selectedChannel++;\n    } else if (key === 'ArrowUp') {\n      if (altKey) {\n        const step = shiftKey ? ATTENUATION_COARSE_STEP : ATTENUATION_FINE_STEP;\n        adjustAttenuation($selectedPattern, $selectedChannel, $selectedRow, step);\n      } else {\n        const step = shiftKey ? PATTERN_ROW_COARSE_STEP : PATTERN_ROW_FINE_STEP;\n        $selectedRow = Math.max(0, $selectedRow - step);\n      }\n    } else if (key === 'ArrowDown') {\n      if (altKey) {\n        const step = shiftKey ? ATTENUATION_COARSE_STEP : ATTENUATION_FINE_STEP;\n        adjustAttenuation($selectedPattern, $selectedChannel, $selectedRow, -step)\n      } else {\n        const step = shiftKey ? PATTERN_ROW_COARSE_STEP : PATTERN_ROW_FINE_STEP;\n        $selectedRow = Math.min($patterns[$selectedPattern][0].length - 3, $selectedRow + step);\n      }\n    } else if (key === ' ') {\n      setNote($selectedPattern, $selectedChannel, $selectedRow, -1);\n    } else if (key === 'Backspace') {\n      event.preventDefault();\n      setNote($selectedPattern, $selectedChannel, $selectedRow, 0);\n    } else if (key === 'Enter') {\n      if ($songPlaying) {\n        stopSong();\n      } else {\n        if (altKey) {\n          if (shiftKey) {\n            resetSongPosition();\n          }\n          playSong();\n        } else {\n          if (shiftKey) {\n            resetPatternPosition();\n          }\n          playPattern($selectedPattern);\n        }\n      }\n      event.preventDefault();\n    } else if (!shiftKey && !altKey && !metaKey && !ctrlKey) {\n      const note = NOTE_KEY_CODES[key];\n      if (note) {\n        setNote($selectedPattern, $selectedChannel, $selectedRow, note);\n        playNote($patterns[$selectedPattern][$selectedChannel][0] || 0, note);\n      }\n    }\n  }\n\n  const handleNewSongClick = () => {\n    stopSong();\n    createEmptySong();\n    resetSongPosition();\n  }\n\n  const handleSourceClick = () => {\n    showSourceModal = true;\n  }\n\n  const handlePianoToggleClick = () => {\n    showPaino = !showPaino;\n  }\n\n  const handleInstrumentsToggleClick = () => {\n    showInstruments = !showInstruments;\n  }\n\n  const handleSettingsClick = () => {\n    showSettingsModal = !showSettingsModal;\n  }\n\n  const handleLoadDemoClick = () => {\n    stopSong();\n    loadSongFromString(demoSong);\n    resetSongPosition();\n  }\n\n  if (new URLSearchParams(location.search).has('demo')) {\n    loadSongFromString(demoSong);\n  } else {\n    createEmptySong();\n  }\n</script>\n\n<main>\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <TextProperty label=\"Title\" bind:value={$title} />\n        <NumberProperty label=\"Speed\" bind:value={$speed} size={3} min={1} max={320} />\n        <Field label=\"Playback\">\n          <Button disabled={$songPlaying} keyboard=\"ALT + ENTER\" label=\"Play Song\" on:click={handlePlaySongClick} />\n          <Button disabled={!$songPlaying} keyboard=\"ENTER\" label=\"Stop\" on:click={handleStopClick} />\n        </Field>\n        <Field label=\"File\">\n          <Button label=\"New\" on:click={handleNewSongClick} />\n          <Button label=\"Load\" on:click={handleLoadSongClick} />\n          <Button label=\"Save\" on:click={handleSaveSongClick} />\n          <Button label=\"Source\" on:click={handleSourceClick} />\n          <Button label=\"Load Demo\" on:click={handleLoadDemoClick} />\n        </Field>\n        <Field label=\"Toggle Tools\">\n          <Button on:click={handlePianoToggleClick} label=\"Piano\" />\n          <Button on:click={handleInstrumentsToggleClick} label=\"Instruments\" />\n        </Field>\n        <Property label=\"Master Volume\" let:id>\n          <Slider {id} min={0} max={1} step={.1} bind:value={$masterVolume} />\n        </Property>\n        <Field label=\"Help\">\n          <Button label=\"Settings\" on:click={handleSettingsClick} />\n          <Button label=\"About\" on:click={handleAboutClick} />\n          <Button label=\"Keys\" on:click={handleHelpClick} />\n        </Field>\n\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n  </Pane>\n\n  <SequenceEditor bind:selectedPosition={$selectedSequence} on:select={handlePositionSelect} on:input={handlePositionChange} />\n\n  <PatternEditor piano={showPaino} bind:selectedChannel={$selectedChannel} bind:selectedRow={$selectedRow} bind:selectedPattern={$selectedPattern} on:patternselect={handlePatternSelect} />\n\n  {#if showInstruments}\n    <InstrumentEditor />\n  {/if}\n\n</main>\n\n<KeyboardModal bind:open={showKeysHelpModal} />\n<AboutModal bind:open={showAboutModal} />\n<SourceModal bind:open={showSourceModal} />\n<SettingsModal bind:open={showSettingsModal} />\n\n<input type=\"file\" hidden bind:this={fileElem} bind:files>\n<svelte:window on:keydown={handleKeyPress} />\n\n<style>\n  main {\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    height: 100vh;\n    gap: var(--panel-spacing);\n    padding: var(--panel-spacing);\n    box-sizing: border-box;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","add","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","createEventDispatcher","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","globals","globalThis","global","destroy_block","lookup","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","splice","$$props","obj","$$set","keys","NOTE_KEY_CODES","z","s","v","g","h","n","j",",",".",";","/","q","2","w","3","5","6","y","7","u","9","0","[","=","UI_FPS_OPTIONS","PLAYER_SAMPLE_RATE_OPTIONS","PLAYER_BUFFER_SIZE_OPTIONS","DEFAULT_PLAYER_SAMPLE_RATE","DEFAULT_PLAYER_BUFFER_SIZE","DEFAULT_UI_FPS","subscriber_queue","writable","stop","subscribers","new_value","run_queue","invalidate","subscriber","title","speed","instruments","instrumentsMeta","patterns","patternsMeta","sequence","selectedRow","selectedChannel","selectedPattern","selectedSequence","masterVolume","currentPlaybackPosition","currentPlaybackLength","channelMeters","songPlaying","sampleRate","bufferSize","uiFPS","encodeInstruments","encodeInstrument","instrument","encoded","JSON","stringify","replace","encodeNumber","encodePatterns","encodeSequence","encodeSpeed","notNumber","isNumber","notArray","isArray","notObject","isObject","isNaN","parseFloat","is","constructor","validateSong","song","valid","some","flat","validateInstruments","validatePatterns","validateSequence","jsonSafe","decodePatternParams","pattern","channel","decodeInstrumentParams","param","instrumentNo","addInstrument","newIndex","createInstrument","meta","setInstrumentParams","clamp","min","round","decimalPlaces","pow","patternNo","addPattern","createTrack","rows","panning","adjustAttenuation","row","channelRows","note","attenuation","setNote","currentAttenuation","getCumlativeRowAtPosition","sequencePos","patts","get","seq","sequenceIndex","getSongLength","clearSong","createEmptySong","setSong","serializeSong","metaData","loadSongFromString","songString","jsonSong","parse","decodeSong","processor","insts","spd","playbackSequence","targetUpdateFps","currentSongPosition","songLength","currentBufferSize","pos","currentOffset","channels","activeSoundCount","isPlaying","frames","gainNode","zzfxX","createGain","connect","destination","suspend","registerSound","async","resume","unregisterSound","initScriptProcessor","createScriptProcessor","onaudioprocess","audioCallback","killScriptProcessor","disconnect","getPositionInfo","position","nextPos","patternIndex","sample","renderNote","offset","mixChannelSampleData","leftChannelData","rightChannelData","peak","zzfxR","play","updateUI","setTimeout","peakLevels","shift","outputBuffer","dataL","getChannelData","dataR","bufferRemaining","beatLength","frameSize","beatDuration","instr","zzfxG","playNote","playSample","zzfxP","onended","playPattern","fromStart","playSong","stopSong","label","gain","disabled","keyboard","selectedPosition","hasSelection","$sequence","globalId","hint","id","fineStep","coarseStep","elem","lastGoodValue","validateValue","newValue","stopImmediatePropagation","shiftKey","canvas","canvasWidth","canvasHeight","debounce","resizeObserver","ResizeObserver","entries","entry","width","height","contentRect","generateSampleView","getContext","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","observe","parentElement","onDestroy","unobserve","cubicOut","fade","linear","getComputedStyle","opacity","fly","target_opacity","transform","od","open","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","format","substr","toUpperCase","percussion","keyboards","wind","items","selection","shapeOptions","clipboard","showInstrumentPicker","$instruments","instrumentName","$instrumentsMeta","buffer","usage","$patterns","code","prompt","decodeInstrument","alert","NOTE_NAMES","scrollPos","totalRows","deltaY","deltaMode","toFixed","padStart","sort","button","focus","KeyboardEvent","dataset","channelClipboard","patternClipboard","piano","channelElems","swapChannels","patternCount","channelCount","tracks","createPattern","addRow","track","rowCount","addChannel","$patternsMeta","desc","shortcuts","isMac","navigator","userAgent","ALT_KEY","UP_KEY","DOWN_KEY","keymap","repository","error","message","$bufferSize","$sampleRate","$uiFPS","files","fileElem","showKeysHelpModal","showAboutModal","showSourceModal","showSettingsModal","showPaino","matchMedia","matches","showInstruments","resetSongPosition","URLSearchParams","location","search","demoSong","file","url","URL","createObjectURL","fetch","res","catch","err","revokeObjectURL","loadSongFromFile","patternStartPosition","$selectedSequence","patternPosition","$selectedRow","click","encodeURIComponent","$title","display","body","remove","altKey","ctrlKey","metaKey","isInputElement","activeElement","$selectedChannel","$selectedPattern","preventDefault","$songPlaying","$speed","$masterVolume"],"mappings":"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"}