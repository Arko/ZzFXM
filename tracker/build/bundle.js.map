{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/config.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../../local_modules/zzfxm-song-encoder/encode.js","../../../local_modules/zzfxm-song-encoder/validate.js","../../../local_modules/zzfxm-song-encoder/decode.js","../../src/services/InstrumentService.js","../../src/lib/utils.js","../../src/services/PatternService.js","../../src/services/SequenceService.js","../../src/services/SongService.js","../../src/services/RendererService.js","../../src/components/Field.svelte","../../src/components/Button.svelte","../../src/components/PlayButton.svelte","../../src/components/SequenceEditor.svelte","../../src/services/DomService.js","../../src/components/Property.svelte","../../src/components/TextProperty.svelte","../../src/components/NumberProperty.svelte","../../src/components/SampleViewer.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/Modal.svelte","../../../local_modules/zzfxm-instruments/percussion.js","../../../local_modules/zzfxm-instruments/keyboards.js","../../../local_modules/zzfxm-instruments/wind.js","../../src/components/InstrumentPicker.svelte","../../src/components/InstrumentEditor.svelte","../../src/components/Slider.svelte","../../src/components/PanningProperty.svelte","../../src/components/Channel.svelte","../../src/components/PianoInput.svelte","../../src/components/ToggleButton.svelte","../../src/components/PatternEditor.svelte","../../src/components/PropertyList.svelte","../../src/components/modals/SongPropertiesModal.svelte","../../src/components/modals/KeyboardModal.svelte","../../src/components/modals/AboutModal.svelte","../../src/components/modals/SourceModal.svelte","../../src/components/EnumProperty.svelte","../../src/components/modals/SettingsModal.svelte","../../src/App.svelte","../../src/demo.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// The number of pattern rows to jump when using fine navigation\nexport const PATTERN_ROW_FINE_STEP = 1;\n\n// The number of pattern rows to jump when using coarse navigation\nexport const PATTERN_ROW_COARSE_STEP = 4;\n\n// The number of attenutation steps to jump when using fine navigation\nexport const ATTENUATION_FINE_STEP = .01;\n\n// The number of attenutation steps to jump when using coarse navigation\nexport const ATTENUATION_COARSE_STEP = .1;\n\n// Keyboard map for notes\nexport const NOTE_KEY_CODES = {\n  'z': 1, 's': 2, 'x': 3, 'd': 4, 'c': 5, 'v': 6, 'g': 7, 'b': 8, 'h': 9,\n  'n': 10, 'j': 11, 'm': 12, ',': 13, 'l': 14, '.': 15, ';': 16, '/': 17,\n  'q': 18, '2': 19, 'w': 20, '3': 21, 'e': 22, 'r': 23, '5': 24, 't': 25,\n  '6': 26, 'y': 27, '7': 28, 'u': 29, 'i': 30, '9': 31, 'o': 32, '0': 33,\n  'p': 34, '[': 35, '=': 36\n};\n\n// UI update speed options - shown in the settings modal\nexport const UI_FPS_OPTIONS = [\n  60, 30, 15, 10, 5\n];\n\n// Sample rate options - shown in the settings modal\nexport const PLAYER_SAMPLE_RATE_OPTIONS = [\n  44100, 22050, 11025\n];\n\n// Song player buffer size options\nexport const PLAYER_BUFFER_SIZE_OPTIONS = [\n  16384, 8192, 4096, 2048, 1024\n];\n\n// The default sample rate for the song player\nexport const DEFAULT_PLAYER_SAMPLE_RATE = PLAYER_SAMPLE_RATE_OPTIONS[0];\n\n// The default buffer size for the song player\nexport const DEFAULT_PLAYER_BUFFER_SIZE = PLAYER_BUFFER_SIZE_OPTIONS[2];\n\n// The default UI refresh rate\nexport const DEFAULT_UI_FPS = UI_FPS_OPTIONS[0];\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {\n    DEFAULT_PLAYER_BUFFER_SIZE,\n    DEFAULT_PLAYER_SAMPLE_RATE,\n    DEFAULT_UI_FPS\n} from './config.js';\n\nimport { writable } from 'svelte/store';\n\n\n// Song\nexport const title = new writable('');\nexport const speed = new writable(125);\nexport const instruments = new writable([]);\nexport const instrumentsMeta = new writable([]);\nexport const patterns = new writable([]);\nexport const patternsMeta = new writable([]);\nexport const sequence = new writable([]);\nexport const meta = new writable({});\n\n\n// Selections\nexport const selectedRow = new writable();\nexport const selectedChannel = new writable(0);\nexport const selectedPattern = new writable(0);\nexport const selectedSequence = new writable(0);\n\n\n// Audio\nexport const masterVolume = new writable(.5);\nexport const currentPlaybackPosition = new writable(0);\nexport const currentPlaybackLength = new writable(0);\nexport const channelMeters = new writable([]);\nexport const patternMuteStates = new writable([]);\nexport const songPlaying = new writable(false);\n\n\n// Settings\nexport const sampleRate = new writable(DEFAULT_PLAYER_SAMPLE_RATE);\nexport const bufferSize = new writable(DEFAULT_PLAYER_BUFFER_SIZE);\nexport const uiFPS = new writable(DEFAULT_UI_FPS);\n","/**\n * Encode a number into the smallest possible footprint. Removes leading 0 from\n * decimal numbers and replaces three or more trailing 0's with `e` notation.\n *\n * @param {Number} value\n * @returns {String} the encoded value\n */\nexport const encodeNumber = value => {\n  let encoded = JSON.stringify(value);\n  encoded = encoded.replace(/^(-?)0/g, '$1');\n  encoded = encoded.replace(/0{3,}$/g, m => `e${m.length}`);\n  return encoded;\n}\n\n\n/**\n * Encodes ZzFX instruments into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array.<Number[]>} instruments\n */\nexport const encodeInstruments = instruments => {\n  return `[${instruments.map(encodeInstrument).join(',')}]`;\n}\n\n/**\n * Encodes ZzFX instrument into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array.<Number[]>} instrument\n */\nexport const encodeInstrument = instrument => {\n\n  let params = instrument.map((v,i) => {\n    let encoded = encodeNumber(v);\n\n    // Volume\n    if (i == 0) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Randomness\n    else if (i == 1) {\n      if (encoded == '.05') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Frequency\n    else if (i == 2) {\n      if (encoded == '220') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Release\n    else if (i == 5) {\n      if (encoded == '.1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Shape Curve\n    else if (i == 7) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    // Sustain Volume\n    else if (i == 17) {\n      if (encoded == '1') {\n        encoded = '';\n      } else if (encoded == '') {\n        encoded = '0';\n      }\n    }\n\n    else if (encoded === '0' || encoded === 'null') {\n      encoded = ''\n    }\n    return encoded;\n  });\n\n\n  // We must always return an instrument or the player will choke.\n  if (params.length === 0) {\n    params = [,0]\n  }\n\n  return `[${params.join(',').replace(/,+$/g, '')}]`;\n}\n\n\n/**\n * Encodes song patterns into a string, removing values as needed to keep\n * size to a minimum.\n *\n * @param {Array>} patterns The song pattern list\n */\nexport const encodePatterns = patterns => {\n  return JSON.stringify(patterns)\n    .replace(/null/g, '')\n    .replace(/(\\D)0(?=\\D)/g, '$1')\n    .replace(/,]/g, ',,]')\n\n}\n\n\n/**\n * Encodes song sequence into a string.\n *\n * @param {Array.<Number>} sequence The song sequence\n */\nexport const encodeSequence = sequence => {\n  return JSON.stringify(sequence);\n}\n\n\n/**\n * Encodes song metadata into a string.\n *\n * @param {Object} metadata The song meta data\n */\nexport const encodeMetadata = metaData => {\n  return JSON.stringify(metaData);\n}\n\n\n/**\n * Encodes song speed value into a string.\n *\n * @param {Object} panning The song panning data\n */\nexport const encodeSpeed = speed => {\n  if (speed !== 125) {\n    return JSON.stringify(speed);\n  }\n}\n\n/**\n * Encodes song data into a string, removing values as needed to keep size to a\n * minimum.\n *\n * @param {*} song The song to encode\n */\nexport const encodeSong = song => {\n  let elements = [\n    encodeInstruments(song[0]),\n    encodePatterns(song[1]),\n    encodeSequence(song[2]),\n    encodeSpeed(song[3]),\n    encodeMetadata(song[4])\n  ];\n  return `[${elements.join(',').replace(/,+$/, '')}]`\n}\n\n","\nconst notNumber = v => !isNumber(v);\n\nconst notArray = v => !isArray(v);\n\nconst notObject = v => !isObject(v);\n\nconst isNumber = v => notObject(v) && !isNaN(parseFloat(v));\n\nconst isInteger = v => Number.isInteger(v);\n\nconst isArray = v => Array.isArray(v);\n\nconst isObject = v => v !== null && !isUndefined(v) && Object.is(v.constructor, Object);\n\nconst isUndefined = v => v === undefined;\n\nconst isNumberInRange = (v, min, max) => v >= min && v <= max\n\n/**\n * Check a value is a valid song sequence\n *\n * @param {*} sequence - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validateSequence = sequence => {\n  if (notArray(sequence)) {\n    return new Error('Missing sequence structure');\n  }\n  sequence = [...sequence];\n  if (!sequence.length) {\n    return new Error('Sequence cannot be empty');\n  }\n  if (sequence.some(notNumber)) {\n    return new Error('Invalid sequence parameter type');\n  }\n  return true;\n}\n\n\n\nconst captureErrorWithContext = (result, key, value) => {\n  if (result instanceof Error) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Check a value is a valid song patterns object\n *\n * @param {*} patterns - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validatePatterns = (patterns, instruments) => {\n  const result = validateArray(patterns, false, (pattern, patternIndex) => {\n    return captureErrorWithContext(\n      validatePattern(pattern, instruments),\n      'pattern',\n      patternIndex\n    );\n  });\n  return result;\n}\n\n\nconst validatePattern = (pattern, instruments) => {\n  const result = validateArray(pattern, false, (channel, channelIndex) => {\n    return captureErrorWithContext(\n      validateChannel(channel, instruments),\n      'channel',\n      channelIndex\n    );\n  });\n\n  if (result instanceof Error) {\n    return result;\n  }\n\n  if (!pattern.every(v => v.length === pattern[0].length)) {\n    return new Error('Channel length mismatch');\n  }\n\n  return result;\n}\n\n\nconst validateChannel = (channel, instruments) => {\n  return validateArray(channel, false, (slotValue, index) => {\n    if (index === 0) {\n      return validateChannelInstrument(slotValue, instruments);\n    } else if (index === 1) {\n      return validateChannelPanning(slotValue);\n    } else {\n      return captureErrorWithContext(\n        validateChannelNote(slotValue),\n        'row',\n        index - 2\n      );\n    }\n  });\n}\n\n\nconst validateArray = (arr, allowZeroLength, slotValidator) => {\n  if (notArray(arr)) {\n    return new TypeError(`Invalid type '${typeof arr}' (expected 'array')`);\n  }\n  if (!allowZeroLength && arr.length === 0) {\n    return new Error(`Array cannot be empty`);\n  }\n  if (slotValidator) {\n    for (let [index, slot] of arr.entries()) {\n      const result = slotValidator(slot, index);\n      if (result instanceof Error) {\n        return result;\n      }\n    }\n  }\n  return true;\n}\n\n\n\n\nconst validateChannelPanning = value => {\n  if (isUndefined(value)) {\n    return true;\n  }\n  if (!isNumber(value) || !isNumberInRange(value, -1, 1)) {\n    return new RangeError(`Invalid panning value (${JSON.stringify(value)})`);\n  }\n  return true;\n}\n\n\nconst validateChannelInstrument = (value, instruments) => {\n  if (isUndefined(value) && instruments.length > 0) {\n    return true;\n  }\n  if (!isInteger(value) || !isNumberInRange(value, 0, instruments.length - 1)) {\n    return new RangeError(`Invalid instrument value (${JSON.stringify(value)})`);\n  }\n  return true;\n}\n\n\nconst validateChannelNote = (value) => {\n  if (isUndefined(value)) {\n    return true;\n  }\n  if (!isNumber(value) || !isNumberInRange(value, 0, 56) && value !== -1) {\n    return new RangeError(`Invalid note value x(${JSON.stringify(value)})`);\n  }\n  return true;\n}\n\n\n\n/**\n * Check a value is a valid song instruments object\n *\n * @param {*} instruments - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\nconst validateInstruments = instruments => {\n  if (notArray(instruments)) {\n    return new Error('Missing instrument structure');\n  }\n  instruments = [...instruments];\n  if (instruments.some(notArray)) {\n    return new Error('Invalid instrument structure');\n  }\n  if (instruments.flat().some(notNumber)) {\n    return new Error('Invalid instrument parameter type');\n  }\n  return true;\n}\n\n\n/**\n * Check a value is a valid song object\n *\n * @param {*} song - The value to check\n * @returns {true|Error} - `true` if valid, otherwise an `Error`\n */\n\nexport const validateSong = song => {\n\n  let valid;\n\n  if (!Array.isArray(song)) {\n    return new Error('Invalid song syntax');\n  }\n\n  valid = validateInstruments(song[0]);\n  if (valid instanceof Error) {\n    return valid;\n  }\n\n  valid = validatePatterns(song[1], song[0]);\n  if (valid instanceof Error) {\n    let {message, pattern, channel, row} = valid;\n    if (isUndefined(pattern)) {\n      message = `${message} for pattern block`;\n    } else {\n      message = `${message} at`;\n      if (isUndefined(channel)) {\n        message = `${message} for channel block`;\n      } else {\n        if (!isUndefined(row)) {\n          message = `${message} row ${row},`;\n        }\n        message = `${message} channel ${channel},`;\n      }\n      message = `${message} pattern ${pattern}`;\n    }\n\n    valid.message = message;\n    return valid;\n  }\n\n  valid = validateSequence(song[2]);\n  if (valid instanceof Error) {\n    return valid;\n  }\n\n  // Element 3 should be a number (or undefined)\n  if (song[3] !== undefined && notNumber(song[3])) {\n    return new Error('Invalid speed');\n  }\n\n  // Element 4 should be a object (or undefined)\n  if (song[4] !== undefined && notObject(song[4])) {\n    return new Error('Invalid meta data');\n  }\n\n  return true;\n};\n","import { validateSong } from './validate.js';\n\n\n/**\n * Parse a short-json string into an object.\n *\n * @param {string} str - the string to parse\n */\nconst parse = str => {\n  return JSON.parse(jsonSafe(str), (key, value) => {\n    if (value === null) {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n\n/**\n * Converts a serialised JS object into JSON compatiable format\n * @param {*} str - the string to convert\n */\nconst jsonSafe = str => {\n  return str.replace(/\\[,/g,'[null,')\n    .replace(/,,\\]/g,',null]') // remove `undefined` work around\n    .replace(/,\\s*(?=[,\\]])/g,',null')\n    .replace(/([\\[,]-?)(?=\\.)/g,'$10')\n    .replace(/-\\./g,'-0.');\n};\n\n\n/**\n * Decodes song pattern array, restoring default values\n *\n * @param {Array.<Number>} Pattern paramaters\n */\nexport const decodePatternParams = pattern => {\n  return pattern.map(channel => {\n    return [...channel].map(data => data || 0)\n  });\n};\n\n\n/**\n * Decodes ZzFX instrument array, restoring default values\n *\n * @param {Array.<Number>} ZzFX paramaters for the instrument\n */\nexport const decodeInstrumentParams = instrument => {\n  const params = instrument.slice();\n  params.length = 20;\n\n  return [...params].map((param, index) => {\n    if (index === 0 && param === undefined) {\n      return 1;\n    }\n    if (index === 1 && param === undefined) {\n      return 0.05;\n    }\n    if (index === 2 && param === undefined) {\n      return 220;\n    }\n    if (index === 5 && param === undefined) {\n      return .1;\n    }\n    if (index === 7 && param === undefined) {\n      return 1;\n    }\n    if (index === 17 && param === undefined) {\n      return 1;\n    }\n    return param || 0;\n  });\n};\n\n\n/**\n * Decodes a string representation of an instrument into an array of\n * zzfx parameters\n *\n * @param {string} instrument The instrument to decode\n * @returns {Array.<Number>} ZzFX paramaters for the instrument\n */\nexport const decodeInstrument = instrument => {\n  return decodeInstrumentParams(parse(instrument))\n};\n\n\n/**\n * Decodes a string representation of a song into an array\n *\n * @param {string} song The song to decode\n */\nexport const decodeSong = song => {\n  let data;\n\n  try {\n    data = parse(song);\n  } catch (e) {\n    throw new Error('Invalid file format');\n  }\n\n  const valid = validateSong(data);\n\n  if (valid instanceof Error) {\n    throw valid;\n  }\n\n  data[0] = data[0].map(decodeInstrumentParams);\n  data[1] = data[1].map(decodePatternParams);\n\n  return data;\n};\n","import { instruments, instrumentsMeta, patterns } from '../stores.js';\nimport { decodeInstrumentParams } from 'zzfxm-song-encoder';\n\nlet instrumentNo = 0;\n\n/**\n * Add a new instrument to the current song\n *\n * @param {Array} params - ZzFX instrument parameters of the new instrument\n * @param {string} name - Name of the new instrument\n * @returns {number} Index of the new instrument\n */\nexport const addInstrument = (params, name = `Instrument ${instrumentNo}`) => {\n  let newIndex;\n  instruments.update(instruments => {\n    instruments.push(createInstrument(...params));\n    newIndex = instruments.length - 1;\n    return instruments;\n  });\n  instrumentsMeta.update(meta => {\n    meta.push(name);\n    return meta;\n  });\n  instrumentNo++;\n  return newIndex;\n};\n\n\n/**\n * Delete an instrument from the current song. Reassigns instruments in the song\n * patterns to account for the missing index.\n *\n * @param {number} index - Index of the instrument to remove\n */\nexport const deleteInstrument = index => {\n  instruments.update(instruments => {\n    instruments.splice(index, 1);\n    return instruments;\n  });\n  instrumentsMeta.update(meta => {\n    meta.splice(index, 1);\n    return meta;\n  });\n  patterns.update(patterns => {\n    patterns.forEach(pattern => {\n      pattern.forEach(channel => {\n        if (channel[0] > index) {\n          channel[0]--;\n        }\n      });\n    });\n    return patterns;\n  });\n  instrumentNo++;\n};\n\n\n/**\n * Sets the ZzFX parameters of an existing instrument.\n *\n * @param {*} index - Index of the instrument to update\n * @param {Array} params - ZzFX instrument parameters of the new instrument\n */\nexport const setInstrumentParams = (index, params) => {\n  instruments.update(instruments => {\n    instruments[index] = createInstrument(...params);\n    return instruments;\n  });\n};\n\n\n/**\n * Clears all instrument data from the current song;\n */\nexport const clearInstruments = () => {\n  instrumentNo = 0;\n  instruments.set([]);\n  instrumentsMeta.set([]);\n};\n\n\n/**\n * Create a new instrument\n *\n * @param  {...number} ZzFX paramaters\n */\nexport const createInstrument = (...params) => {\n  return decodeInstrumentParams(params);\n};\n","/**\n * Ensure a number is between a given range\n *\n * @param {number} value - The value to clamp\n * @param {number} min - Minimum value\n * @param {number} max - Maximum value\n */\nexport const clamp = (value, min, max) => {\n  return Math.max(min, Math.min(value, max));\n};\n\n\n/**\n * Rounds a number to a number of decimal places\n *\n * @param {number} value - The number to round\n * @param {number} decimalPlaces - Number of decimal places to round to\n */\nexport const round = (value, decimalPlaces = 2) => {\n  const pow = Math.pow(10, decimalPlaces);\n  return Math.round(value * pow) / pow;\n};\n\n\n/**\n * Determines if a HMTLElement is an input element\n *\n * @param {HTMLElement} element - The element to test.\n */\nexport const isInputElement = element => {\n  return 'form' in element;\n};\n\n\n/**\n * Performs a deep clone of an object.\n *\n * @param {object} obj - The object to clone\n */\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n\n/**\n * Returns a copy of an object with empty string properties removed\n */\nexport const removeEmptyStringValues = obj => {\n  const filtered = Object.entries(obj).filter(([key, value]) => value !== '');\n  return Object.fromEntries(filtered);\n};\n","import { patterns, patternsMeta, patternMuteStates, sequence } from '../stores.js';\nimport { clamp, round } from '../lib/utils.js';\n\n// This is used to auto-name patterns\nlet patternNo = 0;\n\n\n/**\n * Add a pattern to the current song\n *\n * @param {Array.<Channel>} pattern - New pattern data\n * @param {string} name - New pattern name\n * @returns {number} The new instruments index\n */\n// TODO: refactor to use setPattern?\nexport const addPattern = (pattern, name = `Pattern ${patternNo}`) => {\n  let newIndex;\n  patterns.update(patterns => {\n    patterns.push(pattern);\n    newIndex = patterns.length - 1;\n    return patterns;\n  });\n  patternsMeta.update(meta => {\n    meta.push(name);\n    return meta;\n  });\n  patternMuteStates.update(states => {\n    states.push(new Array(pattern.length).fill(false));\n    return states;\n  });\n  patternNo++;\n  return newIndex;\n};\n\n\n/**\n * Delete a pattern from the current song. Reassigns pattern indexes in the\n * song sequence to account for the missing index.\n *\n * @param {number} index - Index of the pattern to remove\n */\nexport const deletePattern = index => {\n  // Collapse the sequence list first\n  sequence.update(patterns => {\n    return patterns.map(pattern => {\n      if (pattern > index) {\n        return pattern - 1;\n      }\n      return pattern;\n    });\n  });\n  patterns.update(patterns => {\n    patterns.splice(index, 1)\n    return patterns;\n  });\n  patternsMeta.update(meta => {\n    meta.splice(index, 1)\n    return meta;\n  });\n  patternMuteStates.update(states => {\n    states.splice(index, 1);\n    return states;\n  });\n};\n\n\n/**\n * Remove all patterns from the current song. Also resets the pattern number\n * used to generate pattern names.\n */\nexport const clearPatterns = () => {\n  patternNo = 0;\n  patterns.set([]);\n  patternsMeta.set([]);\n  patternMuteStates.set([]);\n};\n\n\n/**\n * Add a new track to an existing pattern using an optional instrument and\n * panning value.\n *\n * @param {number} pattern to add the track to\n * @param {number} instrument number to use for the track\n * @param {number} panning value for the track\n */\nexport const addChannel = (pattern, instrument = 0, panning = 0) => {\n  let newIndex;\n  patterns.update(patterns => {\n    newIndex = patterns[pattern].length;\n    const rowCount = patterns[pattern][0].length - 2;\n    patterns[pattern].push(createTrack(rowCount, instrument, panning));\n    return patterns;\n  });\n  patternMuteStates.update(states => {\n    states[pattern].push(false);\n    return states;\n  });\n  return newIndex;\n};\n\n\n/**\n * Delete a track from a pattern\n *\n * @param {*} pattern - Index of the pattern to delete the track from\n * @param {*} channel - Index of the track to delete\n */\nexport const deleteChannel = (pattern, channel) => {\n  patterns.update(patterns => {\n    patterns[pattern].splice(channel, 1);\n    return patterns;\n  });\n  patternMuteStates.update(states => {\n    states[pattern].splice(channel, 1);\n    return states;\n  });\n};\n\n\n/**\n * Add a blank row to each track in a pattern.\n * @param {number} pattern - Index of the pattern to add the row to\n */\nexport const addRow = pattern => {\n  let newIndex;\n  patterns.update(patterns => {\n    newIndex = patterns[pattern][0].length - 2;\n    patterns[pattern].forEach(channel => channel.push(0))\n    return patterns;\n  });\n  return newIndex;\n};\n\n\n/**\n * Removes a row from a pattern\n *\n * @param {number} pattern - Index of the pattern to remove the row from\n * @param {number} row - Index of the row to remove\n */\nexport const deleteRow = (pattern, row) => {\n  patterns.update(patterns => {\n    patterns[pattern].forEach(channel => {\n      channel.splice(row + 2, 1);\n    });\n    return patterns;\n  });\n};\n\n\n/**\n * Clears note and attenuation data from a row of a pattern\n *\n * @param {number} pattern - Index of the pattern to clear data from\n * @param {number} row - Index of the row to clear\n */\nexport const clearRow = (pattern, row) => {\n  patterns.update(patterns => {\n    patterns[pattern].forEach(track => {\n      track[row + 2] = 0;\n    });\n    return patterns;\n  });\n};\n\n\n/**\n * Creates an empty track object\n *\n * @param {number} rows - Number of rows in the ctrack\n * @param {number} instrument - Instrument for the track\n * @param {number} panning - Panning value for the track\n */\nexport const createTrack = (rows = 64, instrument = 0, panning = 0) => {\n  return [instrument, panning, ...new Array(rows).fill(0)];\n};\n\n\n/**\n * Creates an empty pattern object\n *\n * @param {*} tracks - Number of tracks for the new pattern\n * @param {*} rows - Number of rows for the new pattern\n */\nexport const createPattern = (tracks = 3, rows = 64) => {\n  return new Array(tracks).fill(0).map(() => createTrack(rows));\n};\n\n\n/**\n * Sets the data of a pattern\n *\n * @param {number} pattern - Index of the pattern to update\n * @param {Array} data - Data for the new pattern\n */\nexport const setPatternData = (pattern, data) => {\n  patterns.update(patterns => {\n    patterns[pattern] = data\n    return patterns;\n  });\n};\n\n\n/**\n * Adjust the attentuation of a note.\n *\n * @param {number} pattern - Index of the pattern containing the value to update\n * @param {number} channel - Index of the channel containing the value to update\n * @param {number} row - Index of the row containing the value to update\n * @param {number} step - Value to adjust attenutation by\n */\nexport const adjustAttenuation = (pattern, channel, row, step) => {\n  patterns.update(patterns => {\n    const channelRows = patterns[pattern][channel];\n    const note = channelRows[row + 2] | 0;\n    const attenuation = round(channelRows[row + 2] % 1, 2);\n    channelRows[row + 2] = note + clamp(attenuation + step, 0, .99);\n    return patterns;\n  });\n};\n\n\n/**\n * Set a note\n *\n * @param {number} pattern - Index of the pattern containing the note to update\n * @param {number} channel - Index of the channel containing the note to update\n * @param {number} row - Index of the row containing the note to update\n * @param {number} note - The new note\n */\nexport const setNote = (pattern, channel, row, note) => {\n  patterns.update(patterns => {\n    const channelRows = patterns[pattern][channel];\n    const currentAttenuation = round(channelRows[row + 2] % 1, 2);\n    channelRows[row + 2] = note + currentAttenuation;\n    return patterns;\n  });\n};\n","import { patterns, sequence } from '../stores.js'\nimport { get } from 'svelte/store';\n\n// TODO: This is almost identical to below, consider making argument optional\n// and default to seq.length;\n\n/**\n * Calculates the total song length up to a specific sequence position\n * @param {*} sequencePos\n */\nexport const getCumlativeRowAtPosition = sequencePos => {\n  const patts = get(patterns);\n  const seq = get(sequence);\n  let row = 0;\n  sequencePos = sequencePos % (seq.length);\n  for (let sequenceIndex = 0; sequenceIndex < sequencePos; sequenceIndex++) {\n    row += patts[seq[sequenceIndex]][0].length - 2;\n  }\n  return row;\n}\n\n\n/**\n * Calculates the total song length in rows\n * @returns {number} Number of rows in the song\n */\nexport const getSongLength = () => {\n  const patts = get(patterns);\n  const seq = get(sequence);\n  let length = 0\n  for (let sequenceIndex = 0; sequenceIndex < seq.length; sequenceIndex++) {\n    length += patts[seq[sequenceIndex]][0].length - 2;\n  }\n  return length;\n}\n\n\n/**\n * Clears the current song sequence\n */\nexport const clearSequence = () => {\n  sequence.set([]);\n};\n","import { patterns, instruments, instrumentsMeta, patternsMeta, title, sequence, speed, meta } from '../stores.js'\nimport { get } from 'svelte/store';\nimport { decodeSong, encodeSong } from 'zzfxm-song-encoder';\nimport { addInstrument, clearInstruments, createInstrument } from '../services/InstrumentService.js';\nimport { addPattern, clearPatterns, createTrack } from '../services/PatternService.js';\nimport { clearSequence } from '../services/SequenceService.js';\nimport { removeEmptyStringValues } from '../lib/utils.js';\n\n/**\n * Clear out the current song so it can be populated with new data.\n */\nconst clearSong = () => {\n  clearSequence();\n  clearInstruments();\n  clearPatterns();\n};\n\n\n/**\n * Creates a new blank song and sets it as the current song\n */\nexport const createEmptySong = () => {\n  setSong([\n    [\n      createInstrument(1, 0, 400)\n    ],\n    [\n      [\n        createTrack(64, 0, -1),\n        createTrack(64, 0, 1),\n        createTrack(64, 0, -1),\n        createTrack(64, 0, 1)\n      ]\n    ],\n    [0],\n    125,\n    {\n      title: 'New Song'\n    }\n  ]);\n}\n\n\n/**\n * Sets the current song\n * @param {string} data\n */\nexport const setSong = song => {\n\n  clearSong();\n  meta.set(song[4] || {});\n  title.set(song[4] && song[4].title || 'Untitled song');\n  speed.set(song[3] || 125);\n  song[0].forEach((instrument, index) => {\n    const name = song[4] && song[4].instruments && song[4].instruments[index];\n    addInstrument(instrument, name);\n  });\n\n  song[1].forEach((pattern, index) => {\n    const name = song[4] && song[4].patterns && song[4].patterns[index];\n    addPattern(pattern, name);\n  });\n\n  sequence.set(song[2]);\n};\n\n\n/**\n * Serialises the current song into a string\n * @returns {string} the serialised song data\n */\n// TODO: rename to `serialize`?\nexport const serializeSong = () => {\n\n  const tidyMeta = removeEmptyStringValues(get(meta));\n\n  return encodeSong([\n    get(instruments),\n    get(patterns),\n    get(sequence),\n    get(speed),\n    {\n      ...tidyMeta,\n      ...{\n        title: get(title),\n        instruments: get(instrumentsMeta),\n        patterns: get(patternsMeta)\n      }\n    }\n  ]);\n};\n\n\n/**\n * Load song data from a File object and sets it as the current song.\n *\n * @param {File} file\n * @returns {Promise} A promise that resolves when the song has loaded\n */\nexport const loadSongFromFile = file => {\n  const url = URL.createObjectURL(file);\n  return loadSongFromUrl(url).finally(() => {\n    URL.revokeObjectURL(url);\n  });\n};\n\n\n/**\n * Load song data from a remote url and set it as the current song. Remote\n * servers must have the appropriate CORS response headers set for this to work.\n *\n * @param {string} url - The url of the song to load\n * @returns {Promise} A promise that resolves when the song has loaded\n */\nexport const loadSongFromUrl = url => {\n  return fetch(url)\n    .then(res => res.text())\n    .then(loadSongFromString)\n};\n\n\n/**\n * Load song data from a string and set it as the current song.\n *\n * @param {string} songString — The encoded song data\n */\nexport const loadSongFromString = songString => {\n  setSong(decodeSong(songString));\n};\n","import {\n  patternMuteStates,\n  uiFPS,\n  bufferSize,\n  sampleRate,\n  patterns,\n  instruments,\n  sequence,\n  speed,\n  selectedRow,\n  selectedPattern,\n  selectedSequence,\n  channelMeters,\n  masterVolume,\n  currentPlaybackLength,\n  songPlaying\n} from '../stores.js';\n\nimport {\n  getCumlativeRowAtPosition,\n  getSongLength\n} from './SequenceService.js';\n\nimport { get } from 'svelte/store';\n\n/**\n * @typedef PositionInfo\n * @property {number} sequence - The sequence position\n * @property {number} pattern - The pattern position\n * @property {number} row - The row index\n */\n\n/**\n * @typedef ChannelInfo\n * @property {number} panning - The stereo panning value of the channel\n * @property {number} attenuation - The current attenutationo f the channel\n * @property {number} sample - The instrument sample data for the channel\n * @property {number} offset - The current position of the sample data\n */\n\nlet processor;\nlet insts;\nlet patts;\nlet seq;\nlet spd;\nlet playbackSequence;\nlet targetUpdateFps;\nlet currentSongPosition;\nlet pos = 0;\nlet currentOffset = 0;\nlet channels = null;\nlet songLength;\nlet activeSoundCount = 0;\nlet currentBufferSize;\nlet isPlaying = false;\nlet frames = [];\nlet mutedTracks;\n\n\n// Create a gain node for the player volume. This is hooked up to a Svelte store\n// so it can be controlled via the user interface.\nconst gainNode = zzfxX.createGain();\ngainNode.connect(zzfxX.destination);\n\n\n// Stop zzfxX until sounds need to be played. This prevents the render service\n// from consuming system resources when not playing sounds.\nzzfxX.suspend();\n\n\n/**\n * Notify the service that a sound is about to be played. If no sounds are\n * currently playing the audio context will be resumed.\n *\n * @returns {Promise} A promise that resolves once the audio can be played.\n */\nconst registerSound = async () => {\n  if (activeSoundCount === 0) {\n    await zzfxX.resume();\n  }\n  activeSoundCount++;\n};\n\n\n/**\n * Notify the service that a sound has finished playing. If no other sounds are\n * currently playing the audio context will be suspended.\n *\n * @returns {Promise} A promise that resolves once the audio has stopped.\n */\n\nconst unregisterSound = async () => {\n  activeSoundCount--;\n  if (activeSoundCount === 0) {\n    await zzfxX.suspend();\n  }\n};\n\n\n/**\n * Creates a new ScriptProcessor instance using the currently configured service\n * options\n */\nconst initScriptProcessor = () => {\n  channels = null;\n  processor = zzfxX.createScriptProcessor(currentBufferSize, 0, 2);\n  processor.onaudioprocess = audioCallback;\n  processor.connect(gainNode);\n};\n\n\n/**\n * Destroys the current ScriptProcessor.\n */\nconst killScriptProcessor = () => {\n  processor.onaudioprocess = null;\n  processor.disconnect(gainNode);\n  processor = null;\n};\n\n\n/**\n * Sets the song position based on the current user selection\n */\nconst setPosition = () => {\n  pos = getCumlativeRowAtPosition(get(selectedSequence));\n  pos += get(selectedRow);\n  currentOffset = 0;\n  channels = null;\n};\n\n\n/**\n * Returns the current song position struct information data based on a position\n * index between 0 and total song rows.\n *\n * @param {number} position - the position to retreve data form\n * @returns {PositionInfo} The position information for the song row\n */\nconst getPositionInfo = (position) => {\n  let pos = 0;\n  let nextPos = 0;\n  for (let sequenceIndex = 0; sequenceIndex < playbackSequence.length; sequenceIndex++) {\n    let patternIndex = playbackSequence[sequenceIndex];\n    nextPos = pos + patts[patternIndex][0].length - 3;\n    if (nextPos >= position) {\n      return {\n        sequence: sequenceIndex,\n        pattern: patternIndex,\n        row: position - pos\n      };\n    }\n    pos = nextPos + 1;\n  }\n  return getPositionInfo(position % (nextPos + 1));\n};\n\n\n/**\n * Updates the current channel state based on the current song position and\n * steps forward one song row.\n *\n * @returns {PositionInfo}\n */\nconst next = () => {\n  pos %= songLength;\n  const position = getPositionInfo(pos);\n  const { pattern, row } = position;\n\n  if (!channels) {\n    channels = [];\n  }\n\n  patts[pattern].forEach((channel, i) => {\n    const data = channel[row + 2];\n    if (data) {\n      let note = data | 0;\n      let attenuation = data % 1;\n\n      if (note) {\n        if (note === -1) {\n          channels[i] = null\n          return;\n        }\n        channels[i] = {\n          panning: channel[1],\n          attenuation: attenuation,\n          sample: renderNote(channel[0], note),\n          offset: 0\n        }\n      }\n\n      if (attenuation) {\n        if (channels[i]) {\n          channels[i].attenuation = attenuation\n        }\n      }\n    }\n  });\n  pos++;\n  return position;\n};\n\n\n/**\n * Mix the sample data of a channel into the output buffers\n *\n * @param {ChannelInfo} channel - the channel\n * @param {number} start - the start position of the sample data\n * @param {number} length - the size of the sample data to copy\n * @param {Array<number>} leftChannelData - Left channel buffer\n * @param {Array<number>} rightChannelData - Right channel buffer\n * @returns {<number>} The peak value for the channel\n */\nconst mixChannelSampleData = (channel, start, length, leftChannelData, rightChannelData) => {\n  let peak = 0;\n\n  if (channel) {\n    const { panning, sample } = channel;\n    const step = zzfxR / zzfxX.sampleRate;\n    const sampleLength = sample.length;\n    let { attenuation } = channel;\n\n    for (let i = start; i < start + length; i++) {\n      if (channel.offset >= sampleLength) {\n        break;\n      }\n      // If we're approaching the end of the sample, quickly fade it out by\n      // increasing the attenuation to prevent clicking.\n      if (channel.offset > sampleLength - 99) {\n        attenuation += 1 / 99;\n      }\n      const data = (1 - attenuation) * sample[channel.offset | 0] || 0;\n      leftChannelData[i] += -data * panning + data;\n      rightChannelData[i] += data * panning + data;\n      peak = Math.min(1, Math.max(Math.abs(data), peak));\n      channel.offset += step;\n    }\n  }\n  return peak;\n};\n\n\n/**\n * Plays the currently configured pattern sequence.\n */\nconst play = async () => {\n  await registerSound();\n  initScriptProcessor();\n  songPlaying.set(true);\n  isPlaying = true;\n  updateUI();\n};\n\n\n/**\n * Updates the Svelte stores with new song data. Listeners will react to these\n * changes, triggering UI updates for the Peak Level meters, pattern row and, if\n * playing the entire song, the currently selected sequence and pattern.\n */\nconst updateUI = () => {\n  if (isPlaying) {\n    setTimeout(updateUI, 1000 / targetUpdateFps);\n  }\n  if (!frames.length) {\n    return;\n  }\n  const { sequence, pattern, row, peakLevels } = frames.shift();\n\n  // If the sequence is the actual song, make the pattern and sequence UI\n  // follow along with the current song position.\n  if (playbackSequence === seq) {\n    selectedSequence.set(sequence);\n    selectedPattern.set(pattern);\n  }\n  selectedRow.set(row);\n  channelMeters.set(peakLevels);\n};\n\n\n/**\n * Fills the output buffer with song data\n *\n * @param {AudioProcessingEvent} event - Audio processor event\n */\n\nconst audioCallback = event => {\n  const { outputBuffer } = event;\n  const dataL = outputBuffer.getChannelData(0).fill(0);\n  const dataR = outputBuffer.getChannelData(1).fill(0);\n  let bufferRemaining = outputBuffer.length;\n\n  let offset = 0;\n  frames = [];\n\n  // The length of one song row\n  const beatLength = zzfxX.sampleRate / spd * 60 >> 2;\n\n  // The length of sample data we need to process before notifying the UI that\n  // something needs to be updated. The UI target frame rate is variable so it\n  // can controlled by the end user.\n  const frameSize = zzfxX.sampleRate / targetUpdateFps;\n\n  // We we have no channel data from a previous step, get it now.\n  if (!channels) {\n    currentSongPosition = next();\n  }\n\n  // Fill the output buffer with our sample data.\n  while (bufferRemaining > 0) {\n\n    // Work out how much data we need to process\n    const beatDuration = Math.min(\n      bufferRemaining,\n      frameSize,\n      beatLength - currentOffset\n    );\n\n    if (currentOffset >= beatLength) {\n      currentSongPosition = next();\n      currentOffset -= beatLength;\n    }\n\n    // Mix the channel samples into the stereo output buffers\n    const peakLevels = channels.map((channel, channelIndex) => {\n      if (!mutedTracks[currentSongPosition.pattern][channelIndex]) {\n        return mixChannelSampleData(channel, offset, beatDuration, dataL, dataR);\n      }\n    });\n\n    // If we have a full frame of data, push state data for the UI scheduler to\n    // consume later. If we only push a partial frame the UI will render state\n    // incorrectly, causing flicker with peak meters.\n    if (offset === 0 || beatDuration >= frameSize) {\n      frames.push({...currentSongPosition, peakLevels});\n    }\n\n    offset += beatDuration;\n    currentOffset += beatDuration;\n    bufferRemaining -= beatDuration;\n  }\n};\n\n\n/**\n * Generates the sample data for a note played with an instrument\n *\n * @param {number} instrument - Index of the instrument to play\n * @param {number} note - Index of the note to play\n * @returns {Array<number>} Sample data\n */\nexport const renderNote = (instrument, note) => {\n  let instr = [...insts[instrument]];\n  instr[2] *= 2 ** ((note - 12) / 12);\n  return zzfxG(...instr);\n};\n\n\n\n\n/**\n * Plays a note with an instrument\n *\n * @param {number} instrument - Index of the instrument to play\n * @param {number} note - Index of the note to play\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playNote = (instrument, note) => {\n  return playSample(renderNote(instrument, note));\n};\n\n\n/**\n * Plays a ZzFX sound\n *\n * @param {Array<number>} params - ZzFX instrument parameters\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playSound = (params) => {\n  return playSample(zzfxG(...params));\n};\n\n\n/**\n * Plays sample data\n *\n * @param {Array<Array<number>>} data Audio channel data to play\n * @returns {Promise} A promise that resolves with an AudioBufferSourceNode\n */\nexport const playSample = async (data) => {\n  await registerSound();\n  const node = zzfxP([...data]);\n  node.onended = unregisterSound;\n  return node;\n};\n\n\n/**\n * Plays a pattern.\n *\n * @param {number} pattern - The pattern index to play\n * @param {boolean} fromStart - True to restart, false to resume\n */\nexport const playPattern = async (pattern, fromStart = false) => {\n  if (processor) {\n    return false;\n  }\n\n  playbackSequence = [pattern];\n\n  if (fromStart) {\n    pos = 0;\n  } else {\n    pos = get(selectedRow);\n  }\n  await play();\n};\n\n\n/**\n * Plays the current song from it's current position, or optionally from the\n * start\n *\n * @param {boolean} fromStart - True to restart, false to resume\n */\nexport const playSong = async (fromStart = false) => {\n  if (processor) {\n    return false;\n  }\n\n  playbackSequence = seq;\n\n  if (fromStart) {\n    pos = 0;\n  } else {\n    if (get(selectedSequence) === null) {\n      pos = 0;\n    } else {\n      setPosition();\n    }\n  }\n  await play();\n};\n\n\n/**\n * Stops playing the current song / pattern\n */\nexport const stopSong = async () => {\n  if (processor) {\n    killScriptProcessor();\n    songPlaying.set(false);\n    channelMeters.set([]);\n    isPlaying = false;\n    frames = [];\n    await unregisterSound();\n  }\n};\n\n\n// Subscribe to svelte stores so the renderer can react to state changes.\n\ninstruments.subscribe(value => insts = value);\n\nspeed.subscribe(value => spd = value);\n\ncurrentPlaybackLength.subscribe(value => songLength = value);\n\npatterns.subscribe(value => {\n  patts = value;\n  currentPlaybackLength.set(getSongLength());\n});\n\nsequence.subscribe(value => {\n  seq = value;\n  currentPlaybackLength.set(getSongLength());\n});\n\nmasterVolume.subscribe(value => {\n  gainNode.gain.value = value;\n});\n\nsampleRate.subscribe(value => {\n  zzfxR = value;\n  channels = null;\n});\n\nbufferSize.subscribe(value => {\n  if (isPlaying) {\n    killScriptProcessor();\n    currentBufferSize = value;\n    initScriptProcessor();\n  } else {\n    currentBufferSize = value;\n  }\n});\n\nuiFPS.subscribe(value => targetUpdateFps = value);\n\npatternMuteStates.subscribe(value => mutedTracks = value);\n","<script>\n  export let label = ''\n</script>\n\n<div class=\"field outset\">\n  <span class=\"field__label embossed\">{ label }</span>\n  <span class=\"field__controls inset\">\n    <slot />\n  </span>\n</div>\n\n<style>\n  .field {\n    display: flex;\n    padding: var(--field-padding);\n    align-items: center;\n  }\n  .field__label {\n    white-space: nowrap;\n  }\n  .field__controls {\n    display: inline-flex;\n    flex-wrap: wrap;\n  }\n  .field__controls > :global(*) {\n    flex: 1\n  }\n</style>\n","<script>\n  export let label = '';\n  export let disabled = false;\n  export let keyboard = '';\n</script>\n\n<button title={keyboard ? `Shortcut: ${keyboard}`: ''} class=\"outset\" {disabled} on:click>{ label }</button>\n\n<style>\n  button {\n    background-color: var(--button-color);\n    border: none;\n    display: inline-block;\n    padding: var(--input-padding) 8px;\n    font: inherit;\n    text-transform: uppercase;\n    margin: 0;\n    white-space: nowrap;\n    letter-spacing: inherit;\n  }\n  button[disabled] {\n    color:#0005;\n  }\n  button:not([disabled]):hover {\n    background-color: var(--button-color-hover);\n  }\n  button:not([disabled]):active {\n    background-color: var(--button-color-press);\n  }\n</style>","<script>\n  import Button from './Button.svelte';\n\n  export let disabled = false;\n  export let keyboard = '';\n  export let playing = false;\n</script>\n\n<Button on:click label={playing ? 'Stop' : 'Play'} {disabled} {keyboard} />\n","<script>\nimport { sequence, patterns, patternsMeta, currentPlaybackPosition, songPlaying } from '../stores.js';\nimport { playSong, stopSong } from '../services/RendererService.js';\nimport { createEventDispatcher } from 'svelte';\nimport Field from './Field.svelte';\nimport PlayButton from './PlayButton.svelte';\nimport Button from './Button.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Pane from './Pane.svelte';\n\nexport let selectedPosition = 0;\n\nconst dispatch = createEventDispatcher();\n\nconst handleAddClick = () => {\n  $sequence = [...$sequence, 0];\n  selectedPosition = $sequence.length - 1;\n  dispatch('select');\n}\n\nconst handleDeleteClick = () => {\n  $sequence = [...$sequence.slice(0, selectedPosition), ...$sequence.slice(selectedPosition + 1)];\n  selectedPosition = Math.min(selectedPosition, $sequence.length - 1);\n}\n\nconst togglePlaySongClick = () => {\n  if ($songPlaying) {\n    stopSong();\n  } else {\n    playSong();\n  }\n}\n\nconst select = position => {\n  selectedPosition = position;\n  dispatch('select');\n}\n\nconst moveLeft = () => {\n  $sequence = [\n    ...$sequence.slice(0, selectedPosition - 1),\n    $sequence[selectedPosition],\n    $sequence[selectedPosition-1],\n    ...$sequence.slice(selectedPosition + 1)\n  ];\n  selectedPosition--;\n}\n\nconst moveRight = () => {\n  $sequence = [\n    ...$sequence.slice(0, selectedPosition),\n    $sequence[selectedPosition+1],\n    $sequence[selectedPosition],\n    ...$sequence.slice(selectedPosition + 2)\n  ];\n  selectedPosition++;\n}\n\n$: hasSelection = selectedPosition !== null;\n\nconst color = seq => `hsl(${90+seq*20},35%,50%)`;\n\n</script>\n\n<Pane>\n  <div slot=\"head\">\n    <Toolbar>\n      <Field label=\"Sequence\">\n        <Button label=\"Add\" on:click={handleAddClick} />\n        <Button label=\"Delete\" disabled={!hasSelection} on:click={handleDeleteClick} />\n        <Button label=\"Move Left\" disabled={!hasSelection || selectedPosition === 0} on:click={moveLeft} />\n        <Button label=\"Move Right\" disabled={!hasSelection || selectedPosition === $sequence.length - 1}  on:click={moveRight} />\n      </Field>\n      <Field label=\"Playback\">\n        <PlayButton playing={$songPlaying} keyboard=\"ALT + ENTER\" on:click={togglePlaySongClick} />\n      </Field>\n      <div class=\"outset\"></div>\n    </Toolbar>\n  </div>\n\n  <div class=\"sequence\">\n    <div class=\"sequence__patterns\">\n      {#if $currentPlaybackPosition >= 0}\n        <div class=\"marker\" style=\"transform:translateX({$currentPlaybackPosition}px\"></div>\n      {/if}\n      {#each $sequence as sequence, i}\n        <div on:click={()=>select(i)} class:selected={i === selectedPosition} class=\"pattern\" style=\"background: { color(sequence) }; max-width: { $patterns[sequence][0].length - 2 }px;min-width: { $patterns[sequence][0].length - 2}px\">\n          {#if i === selectedPosition}\n            <select class=\"select\" bind:value={sequence} on:input>\n              {#each $patterns as pattern, i}\n                <option value={i}>{i}</option>\n              {/each}\n            </select>\n          {:else}\n            {sequence}\n          {/if}\n        </div>\n      {/each}\n    </div>\n  </div>\n</Pane>\n\n<style>\n  .sequence {\n    overflow: auto;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n  }\n  .sequence::-webkit-scrollbar {\n    height: 0px;\n    background: transparent;\n  }\n  .sequence__patterns {\n    display: flex;\n    padding: var(--field-padding);\n    position: relative;\n  }\n  .pattern {\n    text-align: center;\n    border: 1px solid #0004;\n    border-radius: 4px;\n    padding: var(--field-padding);\n  }\n  .selected {\n    border-color: var(--focus-ring-color);\n    width: auto !important;\n    line-height: inherit;\n  }\n  .marker {\n    position:absolute;\n    width:3px;\n    top:0;\n    bottom:0;\n    margin-left:-1px;\n    background:#f008;\n    will-change: transform;\n  }\n</style>\n","let globalId = 0;\n\n/**\n * Creates an app-unique element ID.\n */\nexport const createElementId = () => {\n  return `elm-${globalId++}`;\n};\n","<script>\n  import { createElementId } from '../services/DomService.js';\n\n  export let label = '';\n  export let hint = null;\n\n  let id = createElementId();\n</script>\n\n<div class=\"property outset\" title={hint}>\n  <label for={id} class=\"property__label embossed\">{ label }</label>\n  <span class=\"property__controls inset\">\n    <slot {id} />\n  </span>\n</div>\n\n<style>\n  .property {\n    display: flex;\n    padding: var(--field-padding);\n    align-items: center;\n  }\n  .property__label {\n    flex: 1;\n    white-space: nowrap;\n    padding-right:6px;\n  }\n  .property__controls {\n    display: inline-flex;\n  }\n</style>\n","<script>\n  import Property from './Property.svelte';\n  export let label = '';\n  export let value = '';\n  export let hint = '';\n  export let size = 14;\n</script>\n\n<Property {label} {hint} let:id={id}>\n  <input {id} style=\"width: {size+1}ch\" spellcheck=\"false\" type=\"text\" class=\"input\" bind:value={value}>\n</Property>\n","<script>\n\n  import Property from './Property.svelte';\n\n  export let label = '';\n  export let value = 0;\n  export let min = 0;\n  export let max = 1;\n  export let step = 1;\n  export let size = 1;\n  export let hint = '';\n\n  const fineStep = step;\n  const coarseStep = step * 10;\n\n  let lastGoodValue = value;\n  let elem;\n\n  const setValue = () => {\n    elem.value = value = lastGoodValue;\n  }\n\n  const setValueIfValid = event => {\n    const newValue = parseFloat(elem.value);\n    if ((newValue === 0 && elem.value.length > 1) || !validateValue(newValue)) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    lastGoodValue = value = newValue;\n  }\n\n  const validateValue = value => {\n    return !isNaN(value) && value >= min && value <= max;\n  }\n\n  const handleKeyDown = event => {\n    if (event.shiftKey) {\n      step = coarseStep;\n    } else {\n      step = fineStep;\n    }\n  }\n</script>\n\n<Property {label} {hint} let:id={id}>\n  <input {id} bind:this={elem} style=\"width: { size + 4 }ch\" class=\"input\" type=\"number\" {step} {min} {max} value={value} on:focus={lastGoodValue=value} on:keydown={handleKeyDown} on:change={setValue} on:input={setValueIfValid} on:input on:change>\n</Property>\n","<script>\nimport { onDestroy, onMount } from \"svelte\";\n\nlet canvas;\nlet debounce = false;\nlet canvasWidth;\nlet canvasHeight;\n\nexport let data;\n\n$: if (data){\n  generateSampleView();\n}\n\nif ('ResizeObserver' in window) {\n  const resizeObserver = new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const {width, height} = entry.contentRect;\n      canvasWidth = width;\n      canvasHeight = height;\n\n      if (!debounce) {\n        debounce = true;\n        generateSampleView();\n        setTimeout(() => {\n          generateSampleView();\n          debounce = false;\n        }, 500);\n      }\n    }\n  });\n\n  onMount(() => {\n    resizeObserver.observe(canvas.parentElement);\n  });\n\n  onDestroy(() => {\n    resizeObserver.unobserve(canvas.parentElement);\n  });\n\n} else {\n  // Browser doesn't support ResizeObserver so let's used the initial values\n  // so the user can see _something_.\n  onMount(() => {\n    canvasWidth = canvas.parentElement.clientWidth;\n    canvasHeight = canvas.parentElement.clientHeight;\n  });\n}\n\nconst generateSampleView = () => {\n  if (!canvas) {\n    return\n  }\n  const context = canvas.getContext('2d');\n  canvas.height = canvasHeight;\n  canvas.width = canvasWidth;\n  context.strokeStyle = '#0004';\n  context.beginPath();\n\n  context.moveTo(0, canvasHeight / 2 - .5);\n  context.lineTo(canvasWidth, canvasHeight / 2 -.5);\n  context.stroke();\n  context.closePath();\n\n  context.strokeStyle = '#062';\n  context.beginPath();\n  for (let c = 0; c < canvasWidth; c += 2) {\n    const p = c * (data.length / canvasWidth) | 0;\n    const y = (.5 + data[p]) * canvasHeight | 0;\n    if (c === 0) {\n      context.moveTo(0, y);\n    } else {\n      context.lineTo(c - .5, y);\n    }\n  }\n  context.stroke();\n  context.closePath();\n}\n\n</script>\n\n<div>\n  <canvas class=\"inset\" bind:this={canvas}></canvas>\n</div>\n\n<style>\n  div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n  canvas {\n    position:absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: var(--field-padding) solid var(--outset-color)\n  }\n</style>\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\nimport Button from './Button.svelte';\nimport { fade, fly } from 'svelte/transition';\n\nexport let open = false;\nexport let title = '';\n\n</script>\n\n{#if open}\n  <div class=\"overlay\" transition:fade={{duration: 150}}></div>\n  <dialog class=\"modal\" transition:fly={{duration: 150, y: 10}}>\n    <div class=\"modal__header outset embossed\">{title} <Button label=\"X\" on:click={()=>open=false} /></div>\n    <div class=\"modal__body outset\"><slot /></div>\n    <div class=\"modal__footer outset\">\n      <slot name=\"controls\"/>\n    </div>\n  </dialog>\n{/if}\n\n<style>\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 500px;\n  max-height: calc(100vh - 32px);\n  transform: translate(-50%,-50%);\n  box-shadow: 0 2px 5px 2px #0008;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  z-index: 1;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n.modal__header, .modal__footer {\n  padding: var(--modal-spacing);\n}\n.modal__header {\n  --outset-color: var(--toolbar-color);\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n}\n.modal__footer {\n  text-align: center;\n}\n.modal__footer:empty {\n  display: none;\n}\n.modal__body {\n  padding: var(--panel-spacing);\n  background: var(--body-color);\n  overflow: auto;\n}\n.overlay {\n  content: '';\n  position: fixed;\n  top:0;\n  left:0;\n  right:0;\n  bottom:0;\n  background:#0006;\n}\n</style>\n","export const hihat = [2,0,4e3,,,.03,2,1.25,,,,,.02,6.8,-0.3,,.5];\nexport const claps = [1,0,655,,,.11,2,1.65,,,,,,3.8,-0.1,.1];\nexport const bassDrum = [1,0,84,,,.1,,.7,,,,.5,,6.7,1,.05];\nexport const bassDrum2 = [3,0,43,0,,0.25,,,,,,,,2];\nexport const snare = [1,0,655,0,,.09,3,1.65,,,,,.02,3.8,-0.1,,.2];\nexport const snare2 = [1,0,219,,,,,1.1,,-.1,-50,-.05,-.01,1];\nexport const hihatOpen = [.8,0,2100,,,.2,3,3,,,-400,,,2];\nexport const shaker = [.3,0,900,.02,,.07,4,0,,,,,,4];\n","export const korgBass = [.7,0,22,,.07,.07,2,0,,,.5,.01];\nexport const korgFilter = [,0,245,0,0,0.48,2,,0,0,0,,,,0,0.02,0.01];\nexport const piano = [.5,0,196,,.08,.5,3];\nexport const ringPiano = [0.75,0,196,0,0.08,0.18,3];\nexport const polySynth = [,0,25,0.002,0.02,0.08,3,,,,,,,,,0.1,0.01];\nexport const synthBrass = [0.9,0,143,,,.35,3,,,,,,,,,];\nexport const hallBrass = [,0,232,.01,.09,.15,2,,,,,,154.87,,,,.26];\nexport const digDug = [,0,23,,,.2,3,5,,,0];\n","export const flute = [,0,740,0,,0.15,2,0.2,-0.1,-0.15,9,0.02,,0.1,0.12,0,0.06];","<script>\nimport { playSound } from '../services/RendererService';\nimport { createEventDispatcher } from 'svelte';\nimport Modal from './Modal.svelte';\nimport Button from './Button.svelte';\nimport { percussion, keyboards, wind } from 'zzfxm-instruments';\n\nexport let open = false;\n\nconst dispatch = createEventDispatcher();\n\nconst format = v => {\n  return v.substr(0,1).toUpperCase() + v.substr(1).replace(/[A-Z0-9]/g, ' $&')\n}\n\nconst instruments = Object.entries({percussion, keyboards, wind}).map(([name, items]) => ({\n  label: format(name),\n  instruments: Object.entries(items).map(([name, value]) => ({\n      name: format(name),\n      params: value\n    })\n  )\n}));\n\nlet group = instruments[0];\nlet selection = null;\n\n$: if (open) {\n  selection = null\n}\n\nconst handleChange = () => {\n  if (selection) {\n    playSound(selection.params);\n  }\n}\n\nconst handleSelectClick = () => {\n  dispatch('select', selection);\n  open = false;\n  selection = null;\n}\n</script>\n\n<Modal title=\"Select an instrument\" bind:open={open}>\n  <div class=\"splitView\">\n    <div class=\"inset\">\n      <select class=\"select\" size=\"2\" bind:value={group}>\n        {#each instruments as group}\n          <option value={group}>{group.label}</option>\n        {/each}\n      </select>\n    </div>\n    <div class=\"inset\">\n      <select class=\"select\" size=\"2\" bind:value={selection} on:change={handleChange}>\n        {#each group.instruments as instrument (instrument)}\n          <option value={instrument}>{instrument.name}</option>\n        {/each}\n      </select>\n    </div>\n  </div>\n  <span slot=\"controls\">\n    <Button label=\"Select\" disabled={!selection} on:click={handleSelectClick} />\n  </span>\n</Modal>\n\n<style>\n.splitView,.select {\n  width:100%;\n  height:100%;\n}\n.splitView {\n  height: 20em;\n}\n</style>","<script>\nimport { instrumentsMeta, patterns, instruments } from '../stores.js';\nimport { playNote } from '../services/RendererService.js';\nimport { addInstrument, deleteInstrument, setInstrumentParams } from '../services/InstrumentService.js';\nimport { decodeInstrument, encodeInstrument } from 'zzfxm-song-encoder';\nimport { clamp } from '../lib/utils.js';\nimport Pane from './Pane.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Button from './Button.svelte';\nimport Field from './Field.svelte';\nimport Property from './Property.svelte';\nimport TextProperty from './TextProperty.svelte';\nimport NumberProperty from './NumberProperty.svelte';\nimport SampleViewer from './SampleViewer.svelte';\nimport InstrumentPicker from './InstrumentPicker.svelte';\n\nexport let selected = 0;\n\nconst shapeOptions = [\n  {id: 0, label: 'Sin'},\n  {id: 1, label: 'Triangle'},\n  {id: 2, label: 'Saw'},\n  {id: 3, label: 'Tan'},\n  {id: 4, label: 'Bit Noise'},\n];\n\nlet clipboard;\nlet showInstrumentPicker = false;\n\n$: selected = clamp(selected, 0, $instruments.length - 1);\n$: instrument = $instruments[selected];\n$: instrumentName = $instrumentsMeta[selected];\n$: buffer = zzfxG(...instrument);\n$: usage = $patterns.map((pattern, i) => {\n  return pattern.some(channel => channel[0] === selected) && i\n}).filter(x => x !== false);\n\nconst handlePlayClick = () => {\n  playNote(selected, 1);\n}\n\nconst handleChange = () => {\n  playNote(selected, 1);\n}\n\nconst handleImportClick = () => {\n  let code = prompt('Zzfx Code', `zzfx(...[])`);\n  if (code) {\n    code = code.replace(/zzfx\\(\\.\\.\\.(\\[[\\w\\W]*?\\])\\)/, '$1');\n    setInstrumentParams(selected, decodeInstrument(code));\n  }\n}\n\nconst handleExportClick = () => {\n  prompt('Zzfx Code', `zzfx(...${encodeInstrument(instrument)})`);\n}\n\nconst handleAddClick = () => {\n  addInstrument([1,0]);\n  selected = $instruments.length - 1;\n}\n\nconst handleDeleteClick = () => {\n  if (usage.length > 0) {\n    alert(`This instrument is being used in patterns ${usage}.`)\n  } else {\n    deleteInstrument(selected);\n    selected = Math.min(selected,$instruments.length - 1);\n  }\n}\n\nconst handleSelectClick = () => {\n  showInstrumentPicker = true;\n}\n\nconst handleInstrumentSelect = e => {\n  setInstrumentParams(selected, e.detail.params)\n  $instrumentsMeta[selected] = e.detail.name\n}\n\nconst copy = () => {\n  clipboard = instrument.slice();\n}\n\nconst paste = () => {\n  $instruments[selected] = clipboard.slice();\n  $instruments = $instruments;\n}\n</script>\n\n\n<div class=\"splitView\">\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <Field label=\"Instruments\">\n          <Button label=\"Add\" on:click={handleAddClick} />\n          <Button label=\"Delete\" disabled={usage.length} on:click={handleDeleteClick} />\n          <Button label=\"Copy\" on:click={copy}  />\n          <Button label=\"Paste\" on:click={paste} disabled={!clipboard} />\n        </Field>\n      </Toolbar>\n    </div>\n    <select class=\"select\" bind:value={selected} size=\"2\">\n      {#each $instrumentsMeta as instrument, i}\n        <option value={i}>{i}: {instrument}</option>\n      {/each}\n    </select>\n  </Pane>\n\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <NumberProperty min={0} max={$instruments.length - 1} label=\"#\" bind:value={selected} />\n        <TextProperty label=\"Name\" bind:value={$instrumentsMeta[selected]} />\n        <Field label=\"Playback\">\n          <Button label=\"Play\" on:click={handlePlayClick} />\n        </Field>\n        <Field label=\"Parameters\">\n          <Button label=\"Import\" on:click={handleImportClick} />\n          <Button label=\"Export\" on:click={handleExportClick} />\n          <Button label=\"Library\" on:click={handleSelectClick} />\n        </Field>\n        <Field label=\"Pattern Usage\"><span class=\"usage output\">{usage.length ? usage : 'Unused'}</span></Field>\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n\n    <div class=\"instrument\">\n      <div class=\"instrument__params\">\n        <NumberProperty size={4} label=\"Volume\" hint=\"Volume scale (percent)\" min=\"0\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[0]} />\n        <NumberProperty size={4} label=\"Frequency\" hint=\"Frequency of sound (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"1\" on:input={handleChange} bind:value={instrument[2]} />\n        <Property label=\"Shape\">\n          <select class=\"select\" bind:value={instrument[6]}>\n            {#each shapeOptions as option}\n              <option value={option.id}>{option.label}</option>\n            {/each}\n          </select>\n        </Property>\n        <NumberProperty size={4} label=\"Attack\" hint=\"Attack time, how fast sound starts (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[3]} />\n        <NumberProperty size={4} label=\"Sustain\" hint=\"Sustain time, how long sound holds (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[4]} />\n        <NumberProperty size={4} label=\"Release\" hint=\"Release time, how fast sound fades out (seconds)\" min=\"0\" max=\"3\" step=\"0.01\" on:input={handleChange} bind:value={instrument[5]} />\n        <NumberProperty size={4} label=\"Shape Curve\" hint=\"Squarenes of wave (0=square, 1=normal, 2=pointy)\" min=\"0\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[7]} />\n        <NumberProperty size={4} label=\"Slide\" hint=\"How much to slide frequency (kHz/s)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[8]} />\n        <NumberProperty size={4} label=\"Delta Slide\" hint=\"How much to change slide (kHz/s/s)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[9]} />\n        <NumberProperty size={4} label=\"Pitch Jump\" hint=\"Frequency of pitch jump (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"10\" on:input={handleChange} bind:value={instrument[10]} />\n        <NumberProperty size={4} label=\"Pitch Jump Time\" hint=\"Time of pitch jump (seconds)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[11]} />\n        <NumberProperty size={4} label=\"Repeat Time\" hint=\"Resets some parameters periodically (seconds)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[12]} />\n        <NumberProperty size={4} label=\"Noise\" hint=\"How much random noise to add (percent)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[13]} />\n        <NumberProperty size={4} label=\"Modulation\" hint=\"Frequency of modulation wave, negative flips phase (Hz)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[14]} />\n        <NumberProperty size={4} label=\"Bit Crush\" hint=\"Resamples at a lower frequency in (samples*100)\" min=\"-1000000000\" max=\"1000000000\" step=\"0.1\" on:input={handleChange} bind:value={instrument[15]} />\n        <NumberProperty size={4} label=\"Delay\" hint=\"Overlap with itself for reverb and flanger effects (seconds)\" min=\"0\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[16]} />\n        <NumberProperty size={4} label=\"Sustain Volume\" hint=\"Volume level for sustain (percent)\" min=\"0\" max=\"1000000000\" step=\"0.01\" on:input={handleChange} bind:value={instrument[17]} />\n        <NumberProperty size={4} label=\"Decay\" hint=\"Decay time, how long to reach sustain after attack\" min=\"0\" max=\"1\" step=\"0.01\" on:input={handleChange} bind:value={instrument[18]} />\n        <NumberProperty size={4} label=\"Tremolo\" hint=\"Trembling effect, rate controlled by repeat time (precent)\" min=\"0\" max=\"1\" step=\"0.01\" on:input={handleChange} bind:value={instrument[19]} />\n        <div class=\"outset\"></div>\n        <div class=\"outset\"></div>\n      </div>\n      <div class=\"instrument__preview outset\">\n        <SampleViewer data={buffer} />\n      </div>\n    </div>\n  </Pane>\n</div>\n\n<InstrumentPicker bind:open={showInstrumentPicker} on:select={handleInstrumentSelect} />\n\n<style>\n.instrument {\n  display: flex;\n}\n\n.instrument__params {\n  display: grid;\n  grid-template-columns: repeat(3, 14em);\n}\n\n.instrument__preview {\n  flex: 1;\n}\n\n.usage {\n  min-width: 8em;\n  max-width: 17em;\n  overflow: auto;\n}\n</style>","<script>\n  export let id = null;\n  export let step = 1;\n  export let min = 0;\n  export let max = 1;\n  export let list = null;\n  export let value;\n</script>\n\n<input type=\"range\" {id} {step} {min} {max} {list} bind:value>\n\n<style>\n  input {\n    display: block;\n    margin: 0;\n    width: 100%;\n    padding: 4px;\n    height: 21px;\n    background-color: transparent;\n    -webkit-appearance: none;\n  }\n  input:focus {\n    outline: none;\n  }\n  input::-webkit-slider-runnable-track {\n    background: #777;\n    box-shadow: inset -1px -1px 0 #fff8, inset 1px 1px 0 #0003;\n    height: 6px;\n  }\n  input::-moz-range-track {\n    background: #777;\n    box-shadow: inset -1px -1px 0 #fff8, inset 1px 1px 0 #0003;\n    height: 6px;\n  }\n  input::-webkit-slider-thumb {\n    margin-top: -6px;\n    width: 30px;\n    height: 17px;\n    background: linear-gradient(90deg,#555 13px,  #87e6eb 15px,  #555 17px);\n    box-shadow: -1px -1px 0 #fff4, inset -1px -1px 0 #0004, 0px 1px 4px #000c;\n    -webkit-appearance: none;\n  }\n  input::-moz-range-thumb {\n    width: 30px;\n    height: 17px;\n    border: none;\n    border-radius: 0;\n    background: linear-gradient(90deg,#555 13px,  #87e6eb 15px,  #555 17px);\n    box-shadow: -1px -1px 0 #fff4, inset -1px -1px 0 #0004, 0px 1px 4px #000c;\n  }\n</style>","<script>\nimport Slider from './Slider.svelte';\n\nexport let value = 0;\n</script>\n\n<div>\n  <Slider step={.1} min={-1} max={1} list=\"stops\" bind:value />\n  <datalist id=\"stops\">\n    <option value=\"-1\" label=\"L\">\n    <option value=\"0\" label=\"C\">\n    <option value=\"1\" label=\"R\">\n  </datalist>\n</div>\n\n<style>\n  datalist {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 14px;\n  }\n  option {\n    font-size: 80%;\n    padding:0 2px\n  }\n</style>\n","<script>\nimport { instrumentsMeta } from '../stores.js';\nimport { clamp } from '../lib/utils.js';\nimport PanningProperty from './PanningProperty.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Field from './Field.svelte';\n\nexport let data = [];\nexport let title = 'Track';\nexport let selectedRow = 0;\nexport let mute = false;\n\n$: scrollPos = `${-selectedRow * 18}px`;\n$: totalRows = data.length - 3;\n\nlet scrollSpeed = 0;\n\nconst NOTE_NAMES = [\n  'REL', '---',\n  'C-1', 'C#1', 'D-1', 'D#1', 'E-1', 'F-1',\n  'F#1', 'G-1', 'G#1', 'A-1', 'A#1', 'B-1',\n  'C-2', 'C#2', 'D-2', 'D#2', 'E-2', 'F-2',\n  'F#2', 'G-2', 'G#2', 'A-2', 'A#2', 'B-2',\n  'C-3', 'C#3', 'D-3', 'D#3', 'E-3', 'F-3',\n  'F#3', 'G-3', 'G#3', 'A-3', 'A#3', 'B-3'\n];\n\nconst handleScroll = event => {\n  const {deltaY, deltaMode} = event;\n  if (deltaMode === 0) {\n    const step = deltaY / 4 | 0;\n    selectedRow = clamp(selectedRow + step, 0, totalRows);\n  }\n}\n\nconst decelerate = () => {\n  if (Math.abs(scrollSpeed)>.2) {\n    requestAnimationFrame(decelerate);\n    selectedRow += scrollSpeed / 4 | 0;\n    scrollSpeed *= .85;\n  } else {\n    scrollSpeed = 0;\n  }\n}\n\nconst handleTouchStart = event => {\n  if (event.targetTouches.length > 1) {\n    return;\n  }\n  const startPos = event.targetTouches[0].screenY;\n  const startRow = selectedRow;\n  let prevPos = startPos;\n  scrollSpeed = 0;\n\n  const moveHandler = event => {\n    const pos = event.targetTouches[0].screenY;\n    const step = (pos - startPos) / 18 | 0;\n    scrollSpeed = prevPos - pos;\n    selectedRow = clamp(startRow - step, 0, totalRows);\n    prevPos = pos;\n  }\n\n  const endHandler = event => {\n    if (Math.abs(prevPos - startPos) < 5) {\n      event.target.focus();\n    } else if (Math.abs(scrollSpeed) > .1) {\n      decelerate();\n    }\n    window.removeEventListener('touchmove', moveHandler);\n    window.removeEventListener('touchend', endHandler);\n  }\n\n  window.addEventListener('touchmove',moveHandler )\n  window.addEventListener('touchend',endHandler )\n}\n</script>\n\n<div class:mute class=\"channel\">\n  <Toolbar>\n    <Field label={title}>\n      <select class=\"select\" bind:value={data[0]}>\n        {#each $instrumentsMeta as name, i}\n          <option value={i}>{name}</option>\n        {/each}\n      </select>\n    </Field>\n  </Toolbar>\n\n  <div class=\"noteList\" tabindex=\"0\" on:wheel={handleScroll} on:touchstart|preventDefault={handleTouchStart}>\n    <pre class=\"notes\" style=\"transform:translateY({scrollPos})\">{data.slice(2).map(note => `${NOTE_NAMES[1 + note | 0]} ${((note % 1) * 100).toFixed().padStart(2,'0')}`).join('\\n')}</pre>\n  </div>\n\n  <div class=\"outset\">\n    <PanningProperty bind:value={data[1]} />\n  </div>\n\n</div>\n\n<style>\n.select {\n  width: 100%;\n}\n.channel {\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  height: 100%;\n  width: 100%;\n}\n.noteList {\n  overflow: hidden;\n  position: relative;\n  background-image: linear-gradient(#fff 0, #fff 18px);\n  background-size:100% 18px;\n  background-repeat: no-repeat;\n  background-position: 0 50%;\n  text-align-last: justify;\n  font-family: monospace;\n  line-height:18px;\n  width:100%;\n  box-sizing:border-box;\n}\n.notes {\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  margin-top:-8px;\n  width:100%;\n  min-width:0;\n  padding:0 1em;\n  background-image: linear-gradient( #0001 18px, transparent 18px);\n  background-size:100% 72px;\n  white-space: pre-line;\n  will-change: transform;\n}\n.channel :global(.field) {\n  align-items: center!important;\n}\n.channel :global(.field__controls) {\n  width: 100% !important;\n}\n.mute {\n  background:repeating-linear-gradient(45deg, #0001 0, #0001 5px,#0000 5px, #0000 10px);\n}\npre {\n  margin: 0;\n}\n</style>\n","<script>\nimport { NOTE_KEY_CODES } from '../config.js';\n\n$: keys = Object.entries(NOTE_KEY_CODES).sort((a,b) => a[1] - b[1]).map(([x]) => x);\n\nconst handleClick = event => {\n  const { target, button } = event;\n  if (button === 0) {\n    target.focus()\n    const event = new KeyboardEvent('keydown', {\n      key: target.dataset.note\n    });\n    window.dispatchEvent(event);\n  }\n};\n</script>\n\n<div>\n  {#each keys as key}\n    <span tabindex=\"0\" data-note={key} on:mousedown={handleClick}>\n      {key.toUpperCase()}\n    </span>\n  {/each}\n</div>\n\n<style>\n  div {\n    display: flex;\n    align-items: flex-start;\n    padding: var(--modal-spacing);\n  }\n  span {\n    padding-top: 76px;\n    padding-bottom: 4px;\n    background-color: #eee;\n    color:#666;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    text-align: center;\n    box-shadow: 0 0 0px 1px #0006;\n    flex: 1;\n  }\n  span:nth-child(12n+2),\n  span:nth-child(12n+4),\n  span:nth-child(12n+7),\n  span:nth-child(12n+9),\n  span:nth-child(12n+11) {\n    background-color: #222;\n    padding-top: 40px;\n    margin: 0 -11px;\n    flex: .75;\n    z-index: 1;\n    box-shadow: 1px 1px 1px 1px #0006;\n    color: #ccc;\n    margin: 0 -1.75%;\n  }\n  span:hover {\n    filter:contrast(.7)\n  }\n  span + span {\n    margin-left: 1px;\n  }\n</style>\n","<script>\nimport Button from './Button.svelte';\n\n  export let label = '';\n  export let disabled = false;\n  export let keyboard = '';\n  export let checked = false;\n\n  const handleToggleClick = () => {\n    checked = !checked;\n  }\n</script>\n\n<span class:checked class=\"toggleButton\">\n  <Button on:click on:click={handleToggleClick} {label} {disabled} {keyboard} />\n</span>\n\n<style>\n  .toggleButton {\n    display: inline-flex;\n  }\n  .toggleButton > :global(*) {\n    flex: 1;\n  }\n  .toggleButton > :global(*)::before {\n    content: '';\n    display: inline-block;\n    border-radius: 8px;\n    width: 8px;\n    height: 8px;\n    margin-right: 4px;\n    background-color: var(--indicator-color);\n    box-shadow: .5px .5px 0px .5px #fff4, -.5px -.5px 0px .5px #0004, inset 1px 1px 0 0 #fff9, inset -1px -1px 0 0 #0006;\n    border: 1px solid #000c;\n  }\n  .toggleButton {\n    --indicator-color: #333;\n  }\n  .checked {\n    --indicator-color: #f35;\n  }\n</style>","<script>\nimport { patterns, sequence, channelMeters, patternsMeta, songPlaying, patternMuteStates } from '../stores.js';\nimport { addPattern, deletePattern, addChannel, deleteChannel, addRow, deleteRow, createTrack, createPattern, clearRow, setPatternData } from '../services/PatternService.js';\nimport { playPattern, stopSong } from '../services/RendererService.js';\nimport { createEventDispatcher } from 'svelte';\nimport { clamp, deepClone } from '../lib/utils.js';\nimport Channel from './Channel.svelte';\nimport Pane from './Pane.svelte';\nimport Toolbar from './Toolbar.svelte';\nimport Field from './Field.svelte';\nimport Button from './Button.svelte';\nimport TextProperty from './TextProperty.svelte';\nimport NumberProperty from './NumberProperty.svelte';\nimport PianoInput from './PianoInput.svelte';\nimport ToggleButton from './ToggleButton.svelte';\nimport PlayButton from './PlayButton.svelte';\n\nexport let selectedChannel = 0;\nexport let selectedRow = 0;\nexport let selectedPattern = 0;\nexport let piano = false;\n\nlet channelClipboard;\nlet patternClipboard;\n\n$: patternCount = $patterns.length;\n$: channelCount = $patterns[selectedPattern].length;\n$: selectedPattern = clamp(selectedPattern, 0, $patterns.length - 1);\n$: selectedChannel = clamp(selectedChannel, 0, $patterns[selectedPattern].length - 1);\n$: selectedRow = clamp(selectedRow, 0, $patterns[selectedPattern][0].length - 3) | 0;\n\n\n$: usage = $sequence.map((pattern, i) => {\n  return pattern === selectedPattern && i\n}).filter(x => x !== false);\n\n\nconst dispatch = createEventDispatcher();\n\nconst channelElems = [];\n\n\nconst handleAddPatternClick = () => {\n  selectedPattern = addPattern(createPattern(3, 64));\n}\n\nconst handleDeletePatternClick = () => {\n  deletePattern(selectedPattern);\n}\n\nconst handleAddRowClick = () => {\n  selectedRow = addRow(selectedPattern);\n}\n\nconst handleDeleteRowClick = () => {\n  deleteRow(selectedPattern, selectedRow);\n}\n\nconst handleClearRowClick = () => {\n  clearRow(selectedPattern, selectedRow);\n}\n\nconst moveChannelLeft = () => {\n  swapChannels(selectedChannel, --selectedChannel);\n}\n\nconst moveChannelRight = () => {\n  swapChannels(selectedChannel, ++selectedChannel);\n}\n\nconst handleAddChannelClick = () => {\n  selectedChannel = addChannel(selectedPattern);\n}\n\nconst deleteChannelClick = () => {\n  deleteChannel(selectedPattern, selectedChannel);\n}\n\nconst clearChannel = () => {\n  $patterns[selectedPattern][selectedChannel].fill(0, 2);\n  $patterns[selectedPattern] = $patterns[selectedPattern];\n}\n\nconst swapChannels = (a, b) => {\n  const channels = $patterns[selectedPattern].slice();\n  [channels[a], channels[b]] = [channels[b], channels[a]];\n  $patterns[selectedPattern] = channels;\n}\n\nconst copyChannel = () => {\n  channelClipboard = $patterns[selectedPattern][selectedChannel].slice();\n}\n\nconst pasteChannel = () => {\n  $patterns[selectedPattern][selectedChannel] = channelClipboard.slice();\n  $patterns[selectedPattern] = $patterns[selectedPattern];\n}\n\nconst handleCopyPatternClick = () => {\n  patternClipboard = deepClone($patterns[selectedPattern]);\n}\n\nconst handlePastePatternClick = () => {\n  setPatternData(selectedPattern, deepClone(patternClipboard));\n}\n\nconst handlePatternChange = () => {\n  dispatch('patternselect');\n  selectedRow = 0;\n}\n\nconst togglePlayPatternClick = () => {\n  if ($songPlaying) {\n    stopSong()\n  } else {\n    playPattern(selectedPattern);\n  }\n}\n\nconst handlePianoToggleClick = () => {\n  piano = !piano;\n}\n\nconst handleUnmuteAllClick = () => {\n  $patternMuteStates[selectedPattern] = new Array(channelCount).fill(false);;\n}\n\nconst handleSoloClick = () => {\n  const muteState = new Array(channelCount).fill(true);\n  muteState[selectedChannel] = false;\n  $patternMuteStates[selectedPattern] = muteState;\n}\n\nconst handleMuteToggleClick = () => {\n  $patternMuteStates[selectedPattern][selectedChannel] = !$patternMuteStates[selectedPattern][selectedChannel]\n}\n</script>\n\n\n<div class=\"splitView\">\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <Field label=\"Patterns\">\n          <Button label=\"Add\" on:click={handleAddPatternClick} />\n          <Button label=\"Delete\" disabled={usage.length} on:click={handleDeletePatternClick} />\n          <Button label=\"Copy\" on:click={handleCopyPatternClick} />\n          <Button label=\"Paste\" disabled={!patternClipboard} on:click={handlePastePatternClick} />\n        </Field>\n      </Toolbar>\n    </div>\n    <select class=\"select\" on:input={handlePatternChange} bind:value={selectedPattern} size=\"2\">\n      {#each $patterns as pattern, i}\n        <option value={i}>{i}: {$patternMuteStates[i].includes(true) ? '[M]':''} {$patternsMeta[i]}</option>\n      {/each}\n    </select>\n  </Pane>\n\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <NumberProperty label=\"#\" max={patternCount} bind:value={selectedPattern} on:input={handlePatternChange}></NumberProperty>\n        <TextProperty label=\"Name\" bind:value={$patternsMeta[selectedPattern]}></TextProperty>\n        <Field label=\"Playback\">\n          <PlayButton playing={$songPlaying} keyboard=\"ENTER\" on:click={togglePlayPatternClick} />\n        </Field>\n        <Field label=\"Track\">\n          <Button on:click={handleAddChannelClick} label=\"Add\" />\n          <Button disabled={channelCount === 1} on:click={deleteChannelClick} label=\"Delete\" />\n          <Button on:click={clearChannel} label=\"Clear\" />\n          <Button on:click={copyChannel} label=\"Copy\" />\n          <Button disabled={!channelClipboard} on:click={pasteChannel} label=\"Paste\" />\n          <Button disabled={channelCount === 1 || selectedChannel === 0} on:click={moveChannelLeft} label=\"Move Left\" />\n          <Button disabled={channelCount === 1 || selectedChannel === channelCount - 1} on:click={moveChannelRight} label=\"Move Right\" />\n        </Field>\n        <Field label=\"Track Mute\">\n          <ToggleButton bind:checked={$patternMuteStates[selectedPattern][selectedChannel]} on:click={handleMuteToggleClick} label=\"Mute\" />\n          <Button on:click={handleSoloClick} label=\"Solo\" />\n          <Button on:click={handleUnmuteAllClick} label=\"Unmute All\" />\n        </Field>\n        <Field label=\"Row\">\n          <Button on:click={handleAddRowClick} label=\"Add\" />\n          <Button disabled={channelCount === 1} on:click={handleDeleteRowClick} label=\"Delete\" />\n          <Button label=\"Clear\" on:click={handleClearRowClick} />\n        </Field>\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n    <div class=\"channels outset\">\n      {#each $patterns[selectedPattern] as channel, i}\n        <div class=\"channel inset\" bind:this={channelElems[i]} on:focusin={()=>selectedChannel = i} class:selected={i==selectedChannel}>\n          <Channel on:rowselect bind:mute={$patternMuteStates[selectedPattern][i]} title={`Track ${i}`} bind:selectedRow={selectedRow} bind:data={channel}></Channel>\n          <div class=\"level\" style=\"transform:scaleY({$channelMeters[i] || 0})\"></div>\n        </div>\n      {/each}\n    </div>\n    {#if piano}\n      <PianoInput />\n    {/if}\n  </Pane>\n</div>\n\n<style>\n  select {\n    display: block;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n  .selected {\n    background: var(--active-selection-color);\n  }\n  .channels {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: minmax(120px, 1fr);\n    overflow: auto;\n    gap: 10px;\n    padding: 10px\n  }\n  .channel {\n    position:relative;\n  }\n  .level {\n    position: absolute;\n    width: 32px;\n    background: linear-gradient(#fc0, #0f0);\n    bottom: 50%;\n    left: calc(50% - 16px);\n    height: 150px;\n    transform-origin: 50% 100%;\n    will-change: transform;\n  }\n</style>\n","<script>\n  export let label = '';\n</script>\n\n<div class=\"propertyList\">\n  <div class=\"propertyList__label\">{ label }</div>\n  <div class=\"propertyList__properties inset\">\n    <slot />\n  </div>\n</div>\n\n<style>\n  .propertyList + .propertyList {\n    margin-top: var(--panel-spacing)\n  }\n  .propertyList__label {\n    padding: var(--field-padding);\n  }\n</style>","<script>\n  import { currentPlaybackLength, speed, title, meta } from '../../stores';\n  import { serializeSong } from '../../services/SongService.js';\n\n  import Modal from '../Modal.svelte';\n  import PropertyList from '../PropertyList.svelte';\n  import Property from '../Property.svelte';\n  import TextProperty from '../TextProperty.svelte';\n\n  export let open = false;\n\n  $: duration = Math.floor($currentPlaybackLength * (125 / $speed) / 8.47);\n  $: size = serializeSong().length;\n\n</script>\n\n\n<Modal title=\"Song Properties\" bind:open={open}>\n  <PropertyList label=\"Metadata\">\n    <TextProperty hint=\"The name of the composer\" size={30} label=\"Title\" bind:value={$title}></TextProperty>\n    <TextProperty hint=\"The name of the composer\" size={30} label=\"Author\" bind:value={$meta.author}></TextProperty>\n    <TextProperty hint=\"The name of the composer\" size={30} label=\"Author URL\" bind:value={$meta.authorUrl}></TextProperty>\n    <TextProperty hint=\"The name of the composer\" size={4} label=\"License\" bind:value={$meta.license}></TextProperty>\n  </PropertyList>\n  <PropertyList label=\"Properties\">\n    <Property label=\"Playback time\"><span class=\"output\">{duration} seconds</span></Property>\n    <Property label=\"File size\"><span class=\"output\">{size} bytes</span></Property>\n  </PropertyList>\n</Modal>","<script>\n  import Modal from '../Modal.svelte';\n  import { PATTERN_ROW_COARSE_STEP } from '../../config.js';\n\n  export let open = false;\n\n  const isMac = navigator.userAgent.indexOf('Mac OS X') > -1;\n\n  const SHIFT_KEY = '⇧';\n  const ALT_KEY = isMac ? '⌥' : 'ALT';\n  const UP_KEY = isMac ? '▲' : 'ꜛ';\n  const DOWN_KEY = isMac ? '▼' : 'ꜜ';\n  const SPACE_KEY = 'SPACE';\n  const BACKSPACE_KEY = '←'\n  const keymap = [\n    {\n      name: 'Playback',\n      shortcuts: [\n        { keys: ['ENTER'], desc: 'Play / Stop the current pattern' },\n        { keys: [ALT_KEY, 'ENTER'], desc: 'Play / Stop song' },\n        { keys: [SHIFT_KEY, 'ENTER'], desc: 'Play the current pattern from the beginning' },\n        { keys: [ALT_KEY, SHIFT_KEY, 'ENTER'], desc: 'Play song from the beginning' },\n      ]\n    },\n    {\n      name: 'Editing',\n      shortcuts: [\n        { keys: [UP_KEY], desc: 'Move up one row in the pattern' },\n        { keys: [DOWN_KEY], desc: 'Move down one row in the pattern' },\n        { keys: [SHIFT_KEY, UP_KEY], desc: `Move up ${PATTERN_ROW_COARSE_STEP} rows in the pattern` },\n        { keys: [SHIFT_KEY, DOWN_KEY], desc: `Move down ${PATTERN_ROW_COARSE_STEP} rows in the pattern` },\n        { keys: [ALT_KEY, UP_KEY], desc: 'Increase note attenuation (fine)' },\n        { keys: [ALT_KEY, DOWN_KEY], desc: 'Decrease note attenuation (fine)' },\n        { keys: [ALT_KEY, SHIFT_KEY, UP_KEY], desc: 'Increase note attenuation (coarse)' },\n        { keys: [ALT_KEY, SHIFT_KEY, DOWN_KEY], desc: 'Decrease note attenuation (coarse)' },\n        { keys: [SPACE_KEY], desc: 'Release note'},\n        { keys: [BACKSPACE_KEY], desc: 'Clear note'}\n\n      ]\n    }\n  ];\n\n</script>\n\n<Modal title=\"Keyboard shortcuts\" bind:open={open}>\n  {#each keymap as group}\n    {group.name}\n    <dl>\n      {#each group.shortcuts as shortcut}\n        <dt>\n          {#each shortcut.keys as key, i}\n            {#if i}&nbsp;+&nbsp;{/if}<kbd>{key}</kbd>\n          {/each}\n        </dt>\n        <dd>{shortcut.desc}</dd>\n      {/each}\n    </dl>\n  {/each}\n</Modal>\n\n<style>\n  kbd {\n    padding: 2px 4px;\n    background: #fff;\n    box-shadow: 0 1px 0px 1px #888;\n    border-radius: 2px;\n    letter-spacing: 0;\n    font: 12px / 1.25 Arial;\n  }\n  dl {\n    display: grid;\n    grid-template-columns: 15em auto;\n    gap: var(--modal-spacing);\n  }\n  dt {\n    word-spacing: -0.25em;\n    width: auto;\n    color: #444;\n  }\n  dd {\n    margin:0;\n  }\n</style>","<script>\n  import Modal from '../Modal.svelte';\n  import { version, repository } from '../../../package.json';\n  export let open = false;\n</script>\n\n<Modal title=\"About\" bind:open={open}>\n  <div>\n    <h1>ZzFXM Music Tracker</h1>\n    v{ version }\n    <p>by <a href=\"https://keithclark.co.uk\">Keith Clark</a></p>\n    <p>Source available at the <a href=\"{repository.url}\">ZzFXM GitHub Repo</a></p>\n  </div>\n</Modal>\n\n<style>\ndiv {\n  text-align: center;\n}\n</style>","<script>\n  import Modal from '../Modal.svelte';\n  import Button from '../Button.svelte';\n  import { serializeSong, loadSongFromString } from '../../services/SongService.js';\n  export let open = false;\n\n  let src;\n  let error;\n\n  $: if (open) {\n    src = serializeSong();\n    error = null;\n  }\n\n  const setClick = () => {\n    try {\n      loadSongFromString(src);\n      open = false;\n    } catch (e) {\n      error = e.message;\n    }\n  }\n</script>\n\n<Modal title=\"Source\" bind:open={open}>\n  <div class=\"wrap\">\n    <div class=\"inset\">\n      <textarea class=\"inset input\" bind:value={src}></textarea>\n    </div>\n    {#if error}\n      <span>Error: {error}</span>\n    {/if}\n  </div>\n  <span slot=\"controls\">\n    <Button label=\"Apply\" on:click={setClick} />\n  </span>\n</Modal>\n\n<style>\n\n.wrap {\n  display:flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 20em;\n}\n.inset {\n  flex:1;\n}\ntextarea {\n  width: 100%;\n  height: 100%;\n  white-space: pre-line;\n  word-break: break-all;\n  resize: none;\n}\n</style>","<script>\n  import Property from './Property.svelte';\n  export let label = '';\n  export let value = '';\n  export let options = [];\n  export let hint = '';\n</script>\n\n<Property {label} {hint} let:id={id}>\n  <select {id} class=\"select\" bind:value={value}>\n    {#each options as option}\n      <option>{option}</option>\n    {/each}\n  </select>\n</Property>\n","<script>\n  import {\n    PLAYER_BUFFER_SIZE_OPTIONS,\n    PLAYER_SAMPLE_RATE_OPTIONS,\n    UI_FPS_OPTIONS\n  } from '../../config.js';\n  import { bufferSize, sampleRate, uiFPS } from '../../stores.js';\n\n  import Modal from '../Modal.svelte';\n  import PropertyList from '../PropertyList.svelte';\n  import EnumProperty from '../EnumProperty.svelte';\n\n  export let open = false;\n</script>\n\n<Modal title=\"Settings\" bind:open>\n  <PropertyList label=\"Playback Settings\">\n    <EnumProperty hint=\"The amount of data the player will prerender before playing it. Increase this if your browser is cutting off audio during playback\" label=\"Playback buffer size (bytes)\" bind:value={$bufferSize} options={PLAYER_BUFFER_SIZE_OPTIONS} />\n    <EnumProperty hint=\"Controls the audio quality. Reduce in favour of UI responsiveness if your browser is consuming too many system resources\" label=\"Playback sample rate (hz)\" bind:value={$sampleRate} options={PLAYER_SAMPLE_RATE_OPTIONS} />\n    <EnumProperty hint=\"Controls the responsiveness of the UI during playback. Reduce in favour of audio quality if your browser is consuming too many system resources\" label=\"UI Refresh rate (FPS)\" bind:value={$uiFPS} options={UI_FPS_OPTIONS} />\n  </PropertyList>\n</Modal>\n","<script>\n\n  import { patterns, sequence, speed, title, selectedRow, selectedChannel, selectedPattern, selectedSequence, masterVolume, currentPlaybackPosition, songPlaying } from './stores.js';\n  import { serializeSong, createEmptySong, loadSongFromFile, loadSongFromUrl, loadSongFromString } from './services/SongService.js';\n  import { playPattern, playSong, stopSong, playNote } from './services/RendererService.js';\n  import { getCumlativeRowAtPosition } from './services/SequenceService.js';\n  import { adjustAttenuation, setNote } from './services/PatternService.js';\n  import { isInputElement } from './lib/utils.js';\n  import { NOTE_KEY_CODES, PATTERN_ROW_FINE_STEP, PATTERN_ROW_COARSE_STEP, ATTENUATION_FINE_STEP, ATTENUATION_COARSE_STEP} from './config.js';\n\n  import SequenceEditor from './components/SequenceEditor.svelte';\n\timport InstrumentEditor from './components/InstrumentEditor.svelte';\n\timport PatternEditor from './components/PatternEditor.svelte';\n  import TextProperty from './components/TextProperty.svelte';\n  import NumberProperty from './components/NumberProperty.svelte';\n  import Property from './components/Property.svelte'\n  import Toolbar from './components/Toolbar.svelte';\n  import Field from './components/Field.svelte';\n  import Button from './components/Button.svelte';\n  import SongPropertiesModal from './components/modals/SongPropertiesModal.svelte';\n\n  import ToggleButton from './components/ToggleButton.svelte';\n  import Slider from './components/Slider.svelte';\n  import Pane from './components/Pane.svelte';\n  import KeyboardModal from './components/modals/KeyboardModal.svelte';\n  import AboutModal from './components/modals/AboutModal.svelte';\n  import SourceModal from './components/modals/SourceModal.svelte';\n  import SettingsModal from './components/modals/SettingsModal.svelte';\n  import demoSong from './demo.js';\n\n  let files;\n  let fileElem;\n  let showKeysHelpModal = false;\n  let showAboutModal = false;\n  let showSourceModal = false;\n  let showSettingsModal = false;\n  let showSongPropertiesModal = false;\n  let showPaino = window.matchMedia('(min-height: 500px)').matches;\n  let showInstruments = window.matchMedia('(min-height: 800px)').matches;\n\n  $: if (files) {\n    loadSong(loadSongFromFile, files[0]);\n    files = null;\n  }\n\n  $: patternStartPosition = getCumlativeRowAtPosition($selectedSequence);\n  $: patternPosition = patternStartPosition + $selectedRow;\n  $: if ($selectedSequence !== null) {\n    currentPlaybackPosition.set(patternPosition);\n  } else {\n    currentPlaybackPosition.set(-1);\n  }\n\n  const loadSong = (loader, src) => {\n    stopSong();\n    return loader(src)\n      .then(resetSongPosition)\n      .catch(err => alert(`Error loading ${src}\\n\\n${err.message}`));\n  }\n\n\n  const resetSongPosition = () => {\n    selectedSequence.set(0);\n    selectedPattern.set($sequence[0]);\n    selectedRow.set(0);\n  }\n\n  const resetPatternPosition = () => {\n    selectedRow.set(0);\n  }\n\n  const handlePatternSelect = () => {\n    stopSong();\n    currentPlaybackPosition.set(-1);\n    selectedSequence.set(null);\n  }\n\n  const handlePositionChange = () => {\n    selectedPattern.set($sequence[$selectedSequence]);\n  }\n\n  const handlePositionSelect = () => {\n    stopSong();\n    selectedPattern.set($sequence[$selectedSequence]);\n    selectedRow.set(0);\n  }\n\n  const handleLoadSongClick = () => {\n    fileElem.click();\n  }\n\n  const handleSaveSongClick = () => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(serializeSong()));\n    element.setAttribute('download', `${$title}.js`);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  const handleHelpClick = () => {\n    showKeysHelpModal = true;\n  }\n\n  const handleAboutClick = () => {\n    showAboutModal = true;\n  }\n\n  const handleKeyPress = event => {\n    const { key, shiftKey, altKey, ctrlKey, metaKey } = event;\n\n    // If the active element is a form input (button, input etc.) do nothing\n    if (isInputElement(document.activeElement)) {\n      return;\n    }\n\n    if (key === 'ArrowLeft') {\n      $selectedChannel--;\n    } else if (key === 'ArrowRight') {\n      $selectedChannel++;\n    } else if (key === 'ArrowUp') {\n      if (altKey) {\n        const step = shiftKey ? ATTENUATION_COARSE_STEP : ATTENUATION_FINE_STEP;\n        adjustAttenuation($selectedPattern, $selectedChannel, $selectedRow, step);\n      } else {\n        const step = shiftKey ? PATTERN_ROW_COARSE_STEP : PATTERN_ROW_FINE_STEP;\n        $selectedRow = Math.max(0, $selectedRow - step);\n      }\n    } else if (key === 'ArrowDown') {\n      if (altKey) {\n        const step = shiftKey ? ATTENUATION_COARSE_STEP : ATTENUATION_FINE_STEP;\n        adjustAttenuation($selectedPattern, $selectedChannel, $selectedRow, -step)\n      } else {\n        const step = shiftKey ? PATTERN_ROW_COARSE_STEP : PATTERN_ROW_FINE_STEP;\n        $selectedRow = Math.min($patterns[$selectedPattern][0].length - 3, $selectedRow + step);\n      }\n    } else if (key === ' ') {\n      setNote($selectedPattern, $selectedChannel, $selectedRow, -1);\n    } else if (key === 'Backspace') {\n      event.preventDefault();\n      setNote($selectedPattern, $selectedChannel, $selectedRow, 0);\n    } else if (key === 'Enter') {\n      if ($songPlaying) {\n        stopSong();\n      } else {\n        if (altKey) {\n          if (shiftKey) {\n            resetSongPosition();\n          }\n          playSong();\n        } else {\n          if (shiftKey) {\n            resetPatternPosition();\n          }\n          playPattern($selectedPattern);\n        }\n      }\n      event.preventDefault();\n    } else if (!shiftKey && !altKey && !metaKey && !ctrlKey) {\n      const note = NOTE_KEY_CODES[key];\n      if (note) {\n        setNote($selectedPattern, $selectedChannel, $selectedRow, note);\n        playNote($patterns[$selectedPattern][$selectedChannel][0] || 0, note);\n      }\n    }\n  }\n\n  const handleNewSongClick = () => {\n    stopSong();\n    createEmptySong();\n    resetSongPosition();\n  }\n\n  const handleSourceClick = () => {\n    showSourceModal = true;\n  }\n\n  const handlePianoToggleClick = () => {\n    showPaino = !showPaino;\n  }\n\n  const handleInstrumentsToggleClick = () => {\n    showInstruments = !showInstruments;\n  }\n\n  const handleSettingsClick = () => {\n    showSettingsModal = !showSettingsModal;\n  }\n\n  const handleSongPropertiesClick = () => {\n    showSongPropertiesModal = !showSongPropertiesModal;\n  }\n\n  const params = new URLSearchParams(location.search);\n  if (params.has('demo')) {\n    loadSongFromString(demoSong);\n  } else {\n    createEmptySong();\n    if (params.has('url')) {\n      loadSong(loadSongFromUrl, params.get('url'));\n    }\n  }\n</script>\n\n<main>\n  <Pane>\n    <div slot=\"head\">\n      <Toolbar>\n        <TextProperty label=\"Title\" bind:value={$title} />\n        <NumberProperty label=\"Speed\" bind:value={$speed} size={3} min={1} max={320} />\n        <Field label=\"File\">\n          <Button label=\"New\" on:click={handleNewSongClick} />\n          <Button label=\"Load\" on:click={handleLoadSongClick} />\n          <Button label=\"Save\" on:click={handleSaveSongClick} />\n          <Button label=\"Source\" on:click={handleSourceClick} />\n          <Button label=\"Properties\" on:click={handleSongPropertiesClick} />\n        </Field>\n        <Field label=\"Toggle Tools\">\n          <ToggleButton checked={showPaino} on:click={handlePianoToggleClick} label=\"Piano\" />\n          <ToggleButton checked={showInstruments} on:click={handleInstrumentsToggleClick} label=\"Instruments\" />\n        </Field>\n        <Property label=\"Master Volume\" let:id>\n          <Slider {id} min={0} max={1} step={.1} bind:value={$masterVolume} />\n        </Property>\n        <Field label=\"Help\">\n          <Button label=\"Settings\" on:click={handleSettingsClick} />\n          <Button label=\"About\" on:click={handleAboutClick} />\n          <Button label=\"Keys\" on:click={handleHelpClick} />\n        </Field>\n\n        <div class=\"outset\"></div>\n      </Toolbar>\n    </div>\n  </Pane>\n\n  <SequenceEditor bind:selectedPosition={$selectedSequence} on:select={handlePositionSelect} on:input={handlePositionChange} />\n\n  <PatternEditor piano={showPaino} bind:selectedChannel={$selectedChannel} bind:selectedRow={$selectedRow} bind:selectedPattern={$selectedPattern} on:patternselect={handlePatternSelect} />\n\n  {#if showInstruments}\n    <InstrumentEditor />\n  {/if}\n\n</main>\n\n<SongPropertiesModal bind:open={showSongPropertiesModal} />\n<KeyboardModal bind:open={showKeysHelpModal} />\n<AboutModal bind:open={showAboutModal} />\n<SourceModal bind:open={showSourceModal} />\n<SettingsModal bind:open={showSettingsModal} />\n\n<input type=\"file\" hidden bind:this={fileElem} bind:files>\n<svelte:window on:keydown={handleKeyPress} />\n\n<style>\n  main {\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    height: 100vh;\n    gap: var(--panel-spacing);\n    padding: var(--panel-spacing);\n    box-sizing: border-box;\n  }\n</style>\n","export default '[[[,0,77,,,.7,2,.41,,,,,,,,.06],[,0,43,.01,,.3,2,,,,,,,,,.02,.01],[,0,170,.003,,.008,,.97,-35,53,,,,,,.1],[.8,0,270,,,.12,3,1.65,-2,,,,,4.5,,.02],[,0,86,,,.1,,.7,,,,.5,,6.7,1,.05],[,0,41,,.05,.4,2,0,,,9,.01,,,,.08,.02],[,0,2200,,,.04,3,2,,,800,.02,,4.8,,.01,.1],[.3,0,16,,,.3,3]],[[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33],[3,1,22,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,24,,,,,,,,,,,,,,,,,,,,,,,,22,,22,,22,,,,],[5,-1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[,1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33],[3,1,24,,,,,,,,27,,,,,,,,,,,,,,,,27,,,,24,,,,24,,,,,,,,27,,,,,,,,,,,,,,,,24,,24,,24,,,,],[5,-1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[,1,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,,,23,,,,,,,,,,,,,,,,,,,,,,,,24,,23,,21,,,,],[6,1,,,34,34,34,,,,,,34,34,,,,,34,,,,34,34,,,,,34,,,,34,,,,34,34,34,,,,,,34,,,,,,34,34,,,34,34,,,,,,,,,34,34],[4,1,,,,,,,24,,,,,,24,,24,,,,24,,,,24,,,,,,,,,,,,,,,,24,,,,,,24,,24,,,,24,,,,24,,,,,,,,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,23,23,35,23,23,36,23,23,35,23,23,36,23,23,35,35,23,23,35,23,23,35,23,23,36,23,23,35,23,23,36,36],[5,-1,21,,,19,,,21,,,,,,,,,,21,,,19,,,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],[3,1,24,,,24,,,24,,,,,,,,,,24,,,24,,,24,,,,24.75,24.5,24.26,24.01,24.01,24.01,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25],[4,-1,,,,,,,,,,,,,,,,,,,,,,,,,,,24.75,24.5,24.26,24.01,24.01,24.01,24.01,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,,21,23,,35,,23,,21,23,,35,,35,,23,,21,23,,35,,21,23,,35,,21,23,,,],[6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,34,36,34,,33,34,34,36,31,36,34,,31,34,32,,33,36,34,,31,34,34,36,33,36,33,,31,,,]],[[1,-1,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,21,21,33,21,21,33,21,21,33,21,21,33,21,21,33,33,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29],[4,1,24,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,21,,19,21,,33,,21,,19,21,,33,,33,,21,,19,21,,33,,21,,19,21,,33,,33,,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29],[2,1,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,,,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,34,34,,34,,,],[6,1,,,36,,,,,,36,,36,,,,,,,,36,,,,,,36,,36,,,,,,,,36,,,,,,,,,,,,,,,,36,,,,,,36,,36,,,,,,],[3,1,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25,,,,,25,,,,,25,,,25,,,,,,,,25,,,,,,,,25,25,25,25]],[[1,-1,14,14,26,14,14,26,14,14,26,14,14,26,14,14,26,26,14,14,26,14,14,26,14,14,26,14,14,26,14,14,26,26,17,17,29,17,17,29,17,17,29,17,17,29,17,17,29,29,19,19,31,19,19,31,19,19,31,19,19,31,19,19,31,31],[4,1,24,24,,24,24,,24,24,24,24,,24,24,,24,,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,24,24,24,24,,24,24,,36,,24,24,,24,24,,24,24,24,24,,24,24,,24,24],[7,-1,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,14,,14,14,26,14,14,26,17,,17,17,29,17,17,29,17,,17,17,29,17,17,29,19,,19,19,31,19,19,31,19,,19,19,31,19,19,31],[2,1,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,,,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,36,36,,36,,,],[3,1,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25,,,,,25,,,,,,,,25,,,,,,,,25,,,,,,,,25,25,25,25],[6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,34,,,,,,34,,34,,,,,,,,34,,,,,,34,,34,,,,,,]]],[0,1,1,2,3,4,4],,{\"title\":\"Depp\"}]';\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","add","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","globals","globalThis","global","destroy_block","lookup","bind","index","props","bound","create_component","mount_component","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","splice","$$props","obj","$$set","keys","NOTE_KEY_CODES","z","s","v","g","h","n","j",",",".",";","/","q","2","w","3","5","6","y","7","u","9","0","[","=","UI_FPS_OPTIONS","PLAYER_SAMPLE_RATE_OPTIONS","PLAYER_BUFFER_SIZE_OPTIONS","DEFAULT_PLAYER_SAMPLE_RATE","DEFAULT_PLAYER_BUFFER_SIZE","DEFAULT_UI_FPS","subscriber_queue","writable","stop","subscribers","new_value","run_queue","invalidate","subscriber","title","speed","instruments","instrumentsMeta","patterns","patternsMeta","sequence","meta","selectedRow","selectedChannel","selectedPattern","selectedSequence","masterVolume","currentPlaybackPosition","currentPlaybackLength","channelMeters","patternMuteStates","songPlaying","sampleRate","bufferSize","uiFPS","encodeInstruments","encodeInstrument","instrument","encoded","JSON","stringify","replace","encodeNumber","encodePatterns","encodeSequence","encodeSpeed","notNumber","isNumber","notArray","isArray","notObject","isObject","isNaN","parseFloat","isUndefined","is","constructor","isNumberInRange","min","captureErrorWithContext","result","validatePattern","pattern","validateArray","channel","channelIndex","validateChannel","every","slotValue","validateChannelInstrument","validateChannelPanning","validateChannelNote","arr","allowZeroLength","slotValidator","TypeError","entries","RangeError","Number","isInteger","validateSong","song","valid","some","flat","validateInstruments","patternIndex","validatePatterns","message","row","validateSequence","parse","jsonSafe","decodePatternParams","decodeInstrumentParams","param","instrumentNo","addInstrument","newIndex","createInstrument","setInstrumentParams","clamp","round","decimalPlaces","pow","deepClone","patternNo","addPattern","states","createTrack","rows","panning","adjustAttenuation","channelRows","note","attenuation","setNote","currentAttenuation","getCumlativeRowAtPosition","sequencePos","patts","get","seq","sequenceIndex","getSongLength","clearSong","createEmptySong","setSong","serializeSong","tidyMeta","filtered","fromEntries","removeEmptyStringValues","metaData","loadSongFromFile","file","url","URL","createObjectURL","loadSongFromUrl","finally","revokeObjectURL","fetch","res","loadSongFromString","songString","decodeSong","processor","insts","spd","playbackSequence","targetUpdateFps","currentSongPosition","songLength","currentBufferSize","mutedTracks","pos","currentOffset","channels","activeSoundCount","isPlaying","frames","gainNode","zzfxX","createGain","connect","destination","suspend","registerSound","async","resume","unregisterSound","initScriptProcessor","createScriptProcessor","onaudioprocess","audioCallback","killScriptProcessor","disconnect","getPositionInfo","position","nextPos","sample","renderNote","offset","mixChannelSampleData","leftChannelData","rightChannelData","peak","zzfxR","sampleLength","play","updateUI","setTimeout","peakLevels","shift","outputBuffer","dataL","getChannelData","dataR","bufferRemaining","beatLength","frameSize","beatDuration","instr","zzfxG","playNote","playSample","zzfxP","onended","playPattern","fromStart","playSong","stopSong","label","gain","disabled","keyboard","playing","selectedPosition","hasSelection","$sequence","$songPlaying","globalId","hint","id","fineStep","coarseStep","elem","lastGoodValue","validateValue","newValue","stopImmediatePropagation","shiftKey","canvas","canvasWidth","canvasHeight","debounce","resizeObserver","ResizeObserver","entry","width","height","contentRect","generateSampleView","observe","parentElement","unobserve","clientWidth","clientHeight","getContext","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","cubicOut","fade","linear","getComputedStyle","opacity","fly","target_opacity","transform","od","open","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","format","substr","toUpperCase","percussion","keyboards","wind","items","selection","shapeOptions","clipboard","showInstrumentPicker","$instruments","instrumentName","$instrumentsMeta","buffer","usage","$patterns","code","prompt","decodeInstrument","alert","preventDefault","mute","scrollSpeed","NOTE_NAMES","decelerate","scrollPos","totalRows","deltaY","deltaMode","targetTouches","startPos","screenY","startRow","prevPos","moveHandler","endHandler","focus","toFixed","padStart","sort","button","KeyboardEvent","dataset","checked","includes","channelClipboard","patternClipboard","piano","channelElems","swapChannels","patternCount","channelCount","tracks","createPattern","addRow","track","rowCount","addChannel","$patternMuteStates","muteState","$patternsMeta","author","authorUrl","license","floor","$currentPlaybackLength","$speed","$title","$meta","desc","shortcuts","isMac","navigator","userAgent","ALT_KEY","UP_KEY","DOWN_KEY","keymap","repository","error","$bufferSize","$sampleRate","$uiFPS","files","fileElem","showKeysHelpModal","showAboutModal","showSourceModal","showSettingsModal","showSongPropertiesModal","showPaino","matchMedia","matches","showInstruments","loadSong","loader","resetSongPosition","catch","err","URLSearchParams","location","search","patternStartPosition","$selectedSequence","patternPosition","$selectedRow","click","encodeURIComponent","display","body","remove","altKey","ctrlKey","metaKey","isInputElement","activeElement","$selectedChannel","$selectedPattern","$masterVolume"],"mappings":"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"}